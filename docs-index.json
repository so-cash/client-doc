[
  {
    "id": "Context",
    "title": "Context",
    "content": "## 📜 Context\n\nProvides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\n\n"
  },
  {
    "id": "IERC20",
    "title": "IERC20",
    "content": "## 📜 ERC20 interface\n\nsee https://eips.ethereum.org/EIPS/eip-20\n\n### Events\n\n#### 📢 __Approval__\n```js\nevent Approval(address indexed owner, address indexed spender, uint256 value)\n```\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | owner | address | address |  |\n|2 | spender | address | address |  |\n|3 | value | uint256 | uint256 |  |\n\n\n#### 📢 __Transfer__\n```js\nevent Transfer(address indexed from, address indexed to, uint256 value)\n```\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | from | address | address |  |\n|2 | to | address | address |  |\n|3 | value | uint256 | uint256 |  |\n\n\n### Methods\n\n#### ⚙️ __allowance__\nquery the allowance granted from given holder to given spender\n\n```js\nfunction allowance(address holder, address spender) view returns (uint256)\n```\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | holder | address | address | approver of allowance |\n|2 | spender | address | address | recipient of allowance |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | uint256 | uint256 | token allowance |\n\n\n#### ⚙️ __approve__\ngrant approval to spender to spend tokens\n\n```js\nfunction approve(address spender, uint256 amount) returns (bool)\n```\nprefer ERC20Extended functions to avoid transaction-ordering vulnerability (see https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729)\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | spender | address | address | recipient of allowance |\n|2 | amount | uint256 | uint256 | quantity of tokens approved for spending |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | success status (always true; otherwise function should revert) |\n\n\n#### ⚙️ __balanceOf__\nquery the token balance of given account\n\n```js\nfunction balanceOf(address account) view returns (uint256)\n```\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | address | address | address to query |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | uint256 | uint256 | token balance |\n\n\n#### ⚙️ __totalSupply__\nquery the total minted token supply\n\n```js\nfunction totalSupply() view returns (uint256)\n```\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | uint256 | uint256 | token supply |\n\n\n#### ⚙️ __transfer__\ntransfer tokens to given recipient\n\n```js\nfunction transfer(address recipient, uint256 amount) returns (bool)\n```\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | recipient | address | address | beneficiary of token transfer |\n|2 | amount | uint256 | uint256 | quantity of tokens to transfer |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | success status (always true; otherwise function should revert) |\n\n\n#### ⚙️ __transferFrom__\ntransfer tokens to given recipient on behalf of given holder\n\n```js\nfunction transferFrom(address holder, address recipient, uint256 amount) returns (bool)\n```\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | holder | address | address | holder of tokens prior to transfer |\n|2 | recipient | address | address | beneficiary of token transfer |\n|3 | amount | uint256 | uint256 | quantity of tokens to transfer |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | success status (always true; otherwise function should revert) |\n\n\n"
  },
  {
    "id": "IERC20Compatibility",
    "title": "IERC20Compatibility",
    "content": "## 📜 IERC20 Compatibility\n\nInterface for ERC20 compatibility\n\nThis interface is used by the bank modules to provide ERC20 compatibility \n\nIt inherits from [IERC20CompatibilityBaseInternal](./api-IERC20CompatibilityBaseInternal) and [IERC20CompatibilityMetadata](./api-IERC20CompatibilityMetadata)\n\n### Events\n\n#### 📢 __Approval__\n```js\nevent Approval(address indexed owner, address indexed spender, uint256 value)\n```\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | owner | address | address |  |\n|2 | spender | address | address |  |\n|3 | value | uint256 | uint256 |  |\n\n\n#### 📢 __Transfer__\n```js\nevent Transfer(address indexed from, address indexed to, uint256 value)\n```\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | from | address | address |  |\n|2 | to | address | address |  |\n|3 | value | uint256 | uint256 |  |\n\n\n### Methods\n\n#### ⚙️ __balanceOf__\n```js\nfunction balanceOf(address account) view returns (uint256)\n```\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | address | address |  |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | uint256 | uint256 |  |\n\n\n#### ⚙️ __decimals__\n```js\nfunction decimals() view returns (uint8)\n```\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | uint8 | uint8 |  |\n\n\n#### ⚙️ __name__\nGet the name of the account\n\n```js\nfunction name() view returns (string)\n```\nGet the name of the account for developers\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | string | string | The name of the account |\n\n\n#### ⚙️ __symbol__\n```js\nfunction symbol() view returns (string)\n```\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | string | string |  |\n\n\n#### ⚙️ __totalSupply__\n```js\nfunction totalSupply() view returns (uint256)\n```\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | uint256 | uint256 |  |\n\n\n"
  },
  {
    "id": "IERC20CompatibilityBase",
    "title": "IERC20CompatibilityBase",
    "content": "## 📜 IERC20 Compatibility Base\n\nInterface for ERC20 compatibility\n\nThis interface redeclare the [IERC20Base](./api-IERC20Base) interface to fix an import issue. Will be removed in a future version\n\n### Events\n\n#### 📢 __Approval__\n```js\nevent Approval(address indexed owner, address indexed spender, uint256 value)\n```\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | owner | address | address |  |\n|2 | spender | address | address |  |\n|3 | value | uint256 | uint256 |  |\n\n\n#### 📢 __Transfer__\n```js\nevent Transfer(address indexed from, address indexed to, uint256 value)\n```\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | from | address | address |  |\n|2 | to | address | address |  |\n|3 | value | uint256 | uint256 |  |\n\n\n### Methods\n\n#### ⚙️ __allowance__\n```js\nfunction allowance(address owner, address spender) view returns (uint256)\n```\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | owner | address | address |  |\n|2 | spender | address | address |  |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | uint256 | uint256 |  |\n\n\n#### ⚙️ __approve__\n```js\nfunction approve(address spender, uint256 value) returns (bool)\n```\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | spender | address | address |  |\n|2 | value | uint256 | uint256 |  |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool |  |\n\n\n#### ⚙️ __balanceOf__\n```js\nfunction balanceOf(address account) view returns (uint256)\n```\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | address | address |  |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | uint256 | uint256 |  |\n\n\n#### ⚙️ __decreaseAllowance__\n```js\nfunction decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)\n```\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | spender | address | address |  |\n|2 | subtractedValue | uint256 | uint256 |  |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool |  |\n\n\n#### ⚙️ __increaseAllowance__\n```js\nfunction increaseAllowance(address spender, uint256 addedValue) returns (bool)\n```\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | spender | address | address |  |\n|2 | addedValue | uint256 | uint256 |  |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool |  |\n\n\n#### ⚙️ __totalSupply__\n```js\nfunction totalSupply() view returns (uint256)\n```\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | uint256 | uint256 |  |\n\n\n#### ⚙️ __transfer__\n```js\nfunction transfer(address to, uint256 value) returns (bool)\n```\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | to | address | address |  |\n|2 | value | uint256 | uint256 |  |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool |  |\n\n\n#### ⚙️ __transferFrom__\n```js\nfunction transferFrom(address from, address to, uint256 value) returns (bool)\n```\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | from | address | address |  |\n|2 | to | address | address |  |\n|3 | value | uint256 | uint256 |  |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool |  |\n\n\n"
  },
  {
    "id": "IERC20CompatibilityBaseInternal",
    "title": "IERC20CompatibilityBaseInternal",
    "content": "## 📜 IERC20 Compatibility Base Internal\n\nInterface for ERC20 compatibility, simply inherit from [IERC20Internal](./api-IERC20Internal)\n\nThis interface may be deprecated in a future version\n\n### Events\n\n#### 📢 __Approval__\n```js\nevent Approval(address indexed owner, address indexed spender, uint256 value)\n```\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | owner | address | address |  |\n|2 | spender | address | address |  |\n|3 | value | uint256 | uint256 |  |\n\n\n#### 📢 __Transfer__\n```js\nevent Transfer(address indexed from, address indexed to, uint256 value)\n```\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | from | address | address |  |\n|2 | to | address | address |  |\n|3 | value | uint256 | uint256 |  |\n\n\n"
  },
  {
    "id": "IERC20CompatibilityMetadata",
    "title": "IERC20CompatibilityMetadata",
    "content": "## 📜 IERC20 Compatibility Metadata\n\nInterface for ERC20 compatibility metadata\n\nThis interface is used by the bank modules to provide metadata for partial ERC20 compatibility\n\n### Methods\n\n#### ⚙️ __decimals__\n```js\nfunction decimals() view returns (uint8)\n```\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | uint8 | uint8 |  |\n\n\n#### ⚙️ __name__\nGet the name of the account\n\n```js\nfunction name() view returns (string)\n```\nGet the name of the account for developers\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | string | string | The name of the account |\n\n\n#### ⚙️ __symbol__\n```js\nfunction symbol() view returns (string)\n```\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | string | string |  |\n\n\n"
  },
  {
    "id": "IERC20Internal",
    "title": "IERC20Internal",
    "content": "## 📜 ERC20 internal interface\n\nsee https://eips.ethereum.org/EIPS/eip-20\n\n### Events\n\n#### 📢 __Approval__\n```js\nevent Approval(address indexed owner, address indexed spender, uint256 value)\n```\nEmitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\n\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | owner | address | address |  |\n|2 | spender | address | address |  |\n|3 | value | uint256 | uint256 |  |\n\n\n#### 📢 __Transfer__\n```js\nevent Transfer(address indexed from, address indexed to, uint256 value)\n```\nEmitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\n\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | from | address | address |  |\n|2 | to | address | address |  |\n|3 | value | uint256 | uint256 |  |\n\n\n"
  },
  {
    "id": "IERC20Metadata",
    "title": "IERC20Metadata",
    "content": "## 📜 ERC20 metadata interface\n\n### Methods\n\n#### ⚙️ __decimals__\nreturn token decimals, generally used only for display purposes\n\n```js\nfunction decimals() view returns (uint8)\n```\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | uint8 | uint8 | token decimals |\n\n\n#### ⚙️ __name__\nreturn token name\n\n```js\nfunction name() view returns (string)\n```\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | string | string | token name |\n\n\n#### ⚙️ __symbol__\nreturn token symbol\n\n```js\nfunction symbol() view returns (string)\n```\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | string | string | token symbol |\n\n\n"
  },
  {
    "id": "IERC20MetadataInternal",
    "title": "IERC20MetadataInternal",
    "content": "## 📜 ERC20 metadata internal interface\n\n"
  },
  {
    "id": "IHTLCPayment",
    "title": "IHTLCPayment",
    "content": "## 📜 IHTLCPayment interface for HTLC payments\n\nThe HTLC payment service is used to manage the HTLC payments for an account. \n\nIt is implement by a facet to manage the HTLC payments for accounts.\n\nThis interface is used to manage the HTLC payments for an account.  \n\nIt is used to create, verify HTLC payments. \n\nThere is no function to accept or cancel a payment in this interface as this is the role of the user of the facet to implement the logic. \n\nInherit from [IHTLCPaymentInternal](./api-IHTLCPaymentInternal) to access the events. \n\nIt is used by the functions `lockFunds` and `unlockFunds` of the [ISoCashAccountActions](./api-ISoCashAccountActions) implementation. \n\n \n\nThe `HTLC` structure is defined as follow:\n\n | Field          | Description                                                                                                              |\n |----------------|--------------------------------------------------------------------------------------------------------------------------|\n | `recipient`      | The expected beneficiary of the locked funds                                                                             |\n | `amount`         | The amount locked for the payment                                                                                        |\n | `deadline`       | The timestamp in sec (same as block.timestamp) when the lock expires                                                     |\n | `hashlockPaid`   | The hash of the secret that locks the payment                                                                            |\n | `hashlockCancel` | The hash of the secret that can cancel the payment (optional - and not to be used)                                         |\n | `opaque`         | An optional opaque data to be interpreted by the user according to their protocol (a JSON string is recommended)           |\n | `state`          | The state of the HTLC and can be `INITIATED=0`, `PAID=1` or `CANCELLED=2`                                                 |\n\n\n### Events\n\n#### 📢 __HTLCPaymentCreated__\nEmitted when a new HTLC payment is created.\n\n```js\nevent HTLCPaymentCreated(bytes32 indexed id, bytes32 indexed hashlockPaid, tuple(tuple(address account, bytes11 bic, bytes32 iban) recipient, uint256 amount, uint256 deadline, bytes32 hashlockPaid, bytes32 hashlockCancel, string opaque, uint8 state) htlc)\n```\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | id | bytes32 | bytes32 |  |\n|2 | hashlockPaid | bytes32 | bytes32 |  |\n|3 | htlc | [HTLC](./api-t-HTLC.md) | tuple |  |\n\n\n#### 📢 __HTLCPaymentRemoved__\nEmitted when a HTLC payment is paid or cancelled.\n\n```js\nevent HTLCPaymentRemoved(bytes32 indexed id, uint256 amount, uint256 deadline, string usingSecret, string opaque, bool cancelled)\n```\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | id | bytes32 | bytes32 |  |\n|2 | amount | uint256 | uint256 |  |\n|3 | deadline | uint256 | uint256 |  |\n|4 | usingSecret | string | string |  |\n|5 | opaque | string | string |  |\n|6 | cancelled | bool | bool |  |\n\n\n### Methods\n\n#### ⚙️ __getHTLCPayment__\nget the HTLC payment structure for an id.\n\n```js\nfunction getHTLCPayment(bytes32 id) view returns (tuple(tuple(address account, bytes11 bic, bytes32 iban) recipient, uint256 amount, uint256 deadline, bytes32 hashlockPaid, bytes32 hashlockCancel, string opaque, uint8 state))\n```\nThis function is used to get the HTLC payment structure for an id.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | id | bytes32 | bytes32 | The unique identifier of the HTLC payment. |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | [HTLC](./api-t-HTLC.md) | tuple | The HTLC structure as defined above. |\n\n\n#### ⚙️ __verifyHTLC__\nVerify the secret of a HTLC payment.\n\n```js\nfunction verifyHTLC(bytes32 id, string secret) view returns (bool ok, string reason)\n```\nThis function is used to verify the secret of a HTLC payment.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | id | bytes32 | bytes32 | The unique identifier of the HTLC payment. |\n|2 | secret | string | string | The secret to verify. |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ok | bool | bool | True if the secret is correct, false otherwise. |\n|2 | reason | string | string | The reason why the verification failed: status is not `INITIATED`, deadline is reached, secret does not match the hash. |\n\n\n#### ⚙️ __verifyHTLCCancel__\nVerify the possibility to cancel a HTLC payment.\n\n```js\nfunction verifyHTLCCancel(bytes32 id, string secret) view returns (bool ok, string reason)\n```\nThis function is used to verify the possibility to cancel a HTLC payment.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | id | bytes32 | bytes32 | The unique identifier of the HTLC payment. |\n|2 | secret | string | string | The secret to cancel (discouraged). |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ok | bool | bool | True if the secret is correct, false otherwise. |\n|2 | reason | string | string | The reason why the verification failed: status is not `INITIATED`, deadline is not reached, secret does not match the cancel hash. |\n\n\n"
  },
  {
    "id": "IHTLCPaymentInternal",
    "title": "IHTLCPaymentInternal",
    "content": "## 📜 IHTLCPaymentInternal interface \n\nThe HTLC payment service for an account emits events defined in this interface.\n\nThis interface exposes the events of the HTLC payment service. \n\nNote the definition of the HTLC structure in the [IHTLCPayment](./api-IHTLCPayment) interface.\n\n### Events\n\n#### 📢 __HTLCPaymentCreated__\nEmitted when a new HTLC payment is created.\n\n```js\nevent HTLCPaymentCreated(bytes32 indexed id, bytes32 indexed hashlockPaid, tuple(tuple(address account, bytes11 bic, bytes32 iban) recipient, uint256 amount, uint256 deadline, bytes32 hashlockPaid, bytes32 hashlockCancel, string opaque, uint8 state) htlc)\n```\nThe `id` is a hash of several info to identify uniquely the structure. No specification set as long as it is unique for an account.\n\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | id | bytes32 | bytes32 | The unique identifier of the HTLC payment. |\n|2 | hashlockPaid | bytes32 | bytes32 | The hash of the secret that locks the payment. |\n|3 | htlc | [HTLC](./api-t-HTLC.md) | tuple | The HTLC structure. |\n\n\n#### 📢 __HTLCPaymentRemoved__\nEmitted when a HTLC payment is paid or cancelled.\n\n```js\nevent HTLCPaymentRemoved(bytes32 indexed id, uint256 amount, uint256 deadline, string usingSecret, string opaque, bool cancelled)\n```\nThe `id` is a hash of several info to identify uniquely the structure. No specification set as long as it is unique for an account.\n\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | id | bytes32 | bytes32 | The unique identifier of the HTLC payment. |\n|2 | amount | uint256 | uint256 | The amount of the payment. |\n|3 | deadline | uint256 | uint256 | The timestamp (in seconds since 1970) of when the HTLC expires. |\n|4 | usingSecret | string | string | The secret used to unlock the payment. |\n|5 | opaque | string | string | The optional opaque data provided when creating the lock. |\n|6 | cancelled | bool | bool | True if the payment is cancelled, false if it is paid. |\n\n\n"
  },
  {
    "id": "IOwnable",
    "title": "IOwnable",
    "content": "## 📜 IOwnable interface for ownership management\n\nInterface of the openzeppelin ownership management service.\n\nThis interface is used by several smart contracts that need a owner to control the contract.\n\n### Events\n\n#### 📢 __OwnershipTransferred__\nEmitted when ownership is transferred.\n\n```js\nevent OwnershipTransferred(address indexed previousOwner, address indexed newOwner)\n```\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | previousOwner | address | address | The address of the previous owner. |\n|2 | newOwner | address | address | The address of the new owner. |\n\n\n### Methods\n\n#### ⚙️ __owner__\nGet the owner of the contract.\n\n```js\nfunction owner() view returns (address)\n```\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | address | address | The address of the owner. |\n\n\n#### ⚙️ __renounceOwnership__\nRenounce ownership.\n\n```js\nfunction renounceOwnership()\n```\nOnly the owner can renounce ownership. \n\nIt will set the owner to the zero address. \n\nEquivalent to `transferOwnership(address(0))`.\n\n#### ⚙️ __transferOwnership__\nTransfer ownership to a new account.\n\n```js\nfunction transferOwnership(address account)\n```\nOnly the owner can transfer ownership.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | address | address | The address of the new owner. |\n\n\n"
  },
  {
    "id": "ISoCashAccount",
    "title": "ISoCashAccount",
    "content": "## 📜 ISoCashAccount\n\nJust a marker type - to give an abstract type to a contract that represents a bank account - it should not have function \n\n"
  },
  {
    "id": "ISoCashAccountActions",
    "title": "ISoCashAccountActions",
    "content": "## 📜 ISoCashAccountActions interface for bank account\n\nThe bank account actions service is used to operate payment from a bank account in so|cash.\n\nThis interface is used by the account owner and the bank to manage the actions on the account.\n\n### Methods\n\n#### ⚙️ __balance__\nGet the balance of the account.\n\n```js\nfunction balance() view returns (uint256)\n```\nThe balance is the positive amount of the account. If the account is in overdraft, the balance is zero. \n\n This function conserve ERC20 compatibility.\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | uint256 | uint256 | The balance of the account. |\n\n\n#### ⚙️ __fullBalance__\nGet the full balance of the account.\n\n```js\nfunction fullBalance() view returns (int256)\n```\nThe full balance is the actual balance of the account including overdraft. \n\n If the account is in overdraft, the full balance is negative.\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | int256 | int256 | The full balance of the account. |\n\n\n#### ⚙️ __lockFunds__\nLocks an amount for a certain payment using a secret.\n\n```js\nfunction lockFunds(tuple(address account, bytes11 bic, bytes32 iban) recipient, uint256 amount, uint256 deadline, bytes32 hashlockPaid, bytes32 hashlockCancel, string opaque) returns (bytes32 key)\n```\nThis function is used to lock an amount for a certain payment using a secret following HTLC interoperability. \n\nOnly whitelisted senders can call this function. \n\nThe `recipient` has the same meaning as in `transferEx()`. \n\nNote that because this function is a transaction, the best way to retrieve the returned id of the HTLC it via the event `HTLCPaymentCreated` defined in [IHTLCPaymentInternal](./api-IHTLCPaymentInternal). \n\nTo do this, retrieve the transaction hash of that transaction, gets the receipt and then the logs that match the block, the target smart contract and the event signature. \n\nBecause the `hashlockPaid` is unique and indexed in the event you can also filter new events with that hash.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | recipient | [RecipentInfo](./api-t-RecipentInfo.md) | tuple | The recipient of the funds. |\n|2 | amount | uint256 | uint256 | The amount to lock. It must be available in the account. |\n|3 | deadline | uint256 | uint256 | The timestamp in sec when the lock expires. |\n|4 | hashlockPaid | bytes32 | bytes32 | The hash of the secret that can trigger the payment. |\n|5 | hashlockCancel | bytes32 | bytes32 | The hash of the secret that can cancel the payment (deprecated). |\n|6 | opaque | string | string | The optional opaque data to be interpreted by the user according to their protocol. Typically a JSON string. |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | key | bytes32 | bytes32 | The unique identifier of the payment. (see note above) |\n\n\n#### ⚙️ __lockedBalance__\nGet the locked balance of the account.\n\n```js\nfunction lockedBalance() view returns (uint256)\n```\nThe locked balance is the amount of the account balance that is locked in a payment. \n\n You can have a negative `fullBalance` and a positive `lockedBalance` if the account is in overdraft.\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | uint256 | uint256 | The locked balance of the account. |\n\n\n#### ⚙️ __transferEx__\nTransfer funds to another account.\n\n```js\nfunction transferEx(tuple(address account, bytes11 bic, bytes32 iban) recipient, uint256 amount, string details) returns (bool)\n```\nThis function is used to transfer funds to another account. \n\nNote that the [IERC20](./api-IERC20) function `transfer()` is also available and calls this function with the details \"ERC20 Transfer\". \n\nOnly whitelisted senders can call this function or callers that has received an allowance. \n\nAllowance can be provided by a whitelisted sender using the `approve()` function of [IERC20](./api-IERC20). \n\nNote that the `recipient` is a structure where you provide either the smart contract address of the beneficiary account or its IBAN.  \n\nIf the beneficiary is a bank, the BIC can also be provided (deprecated)\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | recipient | [RecipentInfo](./api-t-RecipentInfo.md) | tuple | The recipient of the funds. |\n|2 | amount | uint256 | uint256 | The amount to transfer. |\n|3 | details | string | string | The details of the transfer. |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | true if the transfer is successful, false otherwise. |\n\n\n#### ⚙️ __transferLockedFunds__\nTransfer locked funds to the recipient.\n\n```js\nfunction transferLockedFunds(bytes32 key, tuple(address account, bytes11 bic, bytes32 iban) recipient, string secret, string details) returns (bool)\n```\nThis function is used to transfer locked funds to the pre-set recipient. \n\nAnyone can call this function as long as they have the valid secret. \n\nThe `recipient` is ignored and will be removed in a future version. \n\nThe `secret` is the secret that can unlock the payment. \n\nIf successful, the HTLC `state` is set to `PAID` and the event `HTLCPaymentRemoved` is emitted revealing the secret.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | key | bytes32 | bytes32 | The unique identifier of the payment. |\n|2 | recipient | [RecipentInfo](./api-t-RecipentInfo.md) | tuple | The recipient of the funds. (deprecated and ignored). |\n|3 | secret | string | string | The secret to unlock the payment. |\n|4 | details | string | string | The details of the transfer transmitted with the payment. |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | true if the transfer is successful, false otherwise. |\n\n\n#### ⚙️ __unlockFunds__\nUnlock locked funds.\n\n```js\nfunction unlockFunds(bytes32 key, string secret) returns (bool)\n```\nThis function is used to unlock locked funds. \n\nOnly whitelisted sender can call this function. \n\nIf successful, the HTLC `state` is set to `CANCELLED` and the event `HTLCPaymentRemoved` is emitted revealing the cancel secret if present. \n\nNote that to properly uses the cancel secret (that must be provided by the caller of the `lockFunds()` function), the `hashlockCancel`  must have been provided by the counterparty (and not the owner of the funds).  In that way, if the counterparty decide to no complete the process it can send the cancel secret to the initial holder in order to unlock the funds before the end of the deadline.  However, if the counterparty realizes that the lock does not contains its cancel hash (or a zero hash),  then it can decide not to proceed with the transaction as it can mean that the initial fund owner may have the actual secret to retrieve the funds  before the end of the deadline and the counterparty will not be able to retrieve the funds after completing its end of the bargain.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | key | bytes32 | bytes32 | The unique identifier of the payment. |\n|2 | secret | string | string | The secret to unlock the payment.   |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | true if the unlock is successful, false otherwise. |\n\n\n#### ⚙️ __unlockedBalance__\nGet the unlocked balance of the account.\n\n```js\nfunction unlockedBalance() view returns (uint256)\n```\nThe unlocked balance is the amount of the account balance that is imediatly available for payment. \n\n If the `balance` is lower than the `lockedBalance`, the `unlockedBalance` is zero, else it is the difference of the 2.\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | uint256 | uint256 | The unlocked balance of the account. |\n\n\n"
  },
  {
    "id": "ISoCashAccountData",
    "title": "ISoCashAccountData",
    "content": "## 📜 ISoCashAccountData interface for bank account\n\nThe bank account data service is used to manage the attributes and info of a bank account in so|cash.\n\nThis interface is used by the account owner and the bank to get and manage the attributes of the account.\n\n### Methods\n\n#### ⚙️ __accountNumber__\nGet the account number of the account.\n\n```js\nfunction accountNumber() view returns (uint32)\n```\nThe account number is a sequential number of the accounts created in the bank but this is not an obligation. \n\nImplementations are free to use any kind of account number as long as it respects the IBAN standard.\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | [AccountNumber](./api-t-AccountNumber.md) | uint32 | The account number of the account. |\n\n\n#### ⚙️ __bank__\nGet the bank module of the account.\n\n```js\nfunction bank() view returns (address)\n```\nThe bank is the contract that manages the account. It is also the `owner` in the [IOwnable](./api-IOwnable) sense.\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | [ISoCashBank](./api-t-ISoCashBank.md) | address | The bank of the account. |\n\n\n#### ⚙️ __getAttributeAddr__\nGet attribute as address\n\n```js\nfunction getAttributeAddr(bytes32 name) view returns (address)\n```\nThe attributes are used to store additional info on the account. \n\nNote that the `name`is unique for the account but can be duplicated by type of attribute.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | name | bytes32 | bytes32 | The name of the attribute. |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | address | address | The value of the attribute as an address. |\n\n\n#### ⚙️ __getAttributeNum__\nGet attribute as number\n\n```js\nfunction getAttributeNum(bytes32 name) view returns (int256)\n```\nThe attributes are used to store additional info on the account. \n\nNote that the `name`is unique for the account but can be duplicated by type of attribute.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | name | bytes32 | bytes32 | The name of the attribute. |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | int256 | int256 | The value of the attribute as a number. |\n\n\n#### ⚙️ __getAttributeStr__\nGet attribute as string\n\n```js\nfunction getAttributeStr(bytes32 name) view returns (string)\n```\nThe attributes are used to store additional info on the account. \n\nNote that the `name`is unique for the account but can be duplicated by type of attribute.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | name | bytes32 | bytes32 | The name of the attribute. |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | string | string | The value of the attribute as a string. |\n\n\n#### ⚙️ __iban__\nGet the iban of the account.\n\n```js\nfunction iban() view returns (string)\n```\nThe IBAN is the international bank account number of the account and contains the country of the bank, the bank codes and the account number.\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | string | string | The IBAN of the account. |\n\n\n#### ⚙️ __setAttributeAddr__\nSet attribute as address\n\n```js\nfunction setAttributeAddr(bytes32 name, address value)\n```\nThe attributes are used to store additional info on the account. \n\nNote that the `name`is unique for the account but can be duplicated by type of attribute.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | name | bytes32 | bytes32 | The name of the attribute. |\n|2 | value | address | address | The value of the attribute as an address. |\n\n\n#### ⚙️ __setAttributeNum__\nSet attribute as number\n\n```js\nfunction setAttributeNum(bytes32 name, int256 value)\n```\nThe attributes are used to store additional info on the account. \n\nNote that the `name`is unique for the account but can be duplicated by type of attribute.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | name | bytes32 | bytes32 | The name of the attribute. |\n|2 | value | int256 | int256 | The value of the attribute as a number. |\n\n\n#### ⚙️ __setAttributeStr__\nSet attribute as string\n\n```js\nfunction setAttributeStr(bytes32 name, string value)\n```\nThe attributes are used to store additional info on the account. \n\nNote that the `name`is unique for the account but can be duplicated by type of attribute.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | name | bytes32 | bytes32 | The name of the attribute. |\n|2 | value | string | string | The value of the attribute as a string. |\n\n\n"
  },
  {
    "id": "ISoCashAccountFull",
    "title": "ISoCashAccountFull",
    "content": "## 📜 ISoCashAccountFull interface for bank account\n\nExposes the functions and events for full interactions with a bank account in so|cash.\n\nThis interface inherits from [ISoCashOwnedAccount](./api-ISoCashOwnedAccount) and [IHTLCPayment](./api-IHTLCPayment) and [IWhitelistedSenders](./api-IWhitelistedSenders) and [IOwnable](./api-IOwnable) to provide the full set of functions.\n\n### Events\n\n#### 📢 __Approval__\n```js\nevent Approval(address indexed owner, address indexed spender, uint256 value)\n```\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | owner | address | address |  |\n|2 | spender | address | address |  |\n|3 | value | uint256 | uint256 |  |\n\n\n#### 📢 __HTLCPaymentCreated__\nEmitted when a new HTLC payment is created.\n\n```js\nevent HTLCPaymentCreated(bytes32 indexed id, bytes32 indexed hashlockPaid, tuple(tuple(address account, bytes11 bic, bytes32 iban) recipient, uint256 amount, uint256 deadline, bytes32 hashlockPaid, bytes32 hashlockCancel, string opaque, uint8 state) htlc)\n```\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | id | bytes32 | bytes32 |  |\n|2 | hashlockPaid | bytes32 | bytes32 |  |\n|3 | htlc | [HTLC](./api-t-HTLC.md) | tuple |  |\n\n\n#### 📢 __HTLCPaymentRemoved__\nEmitted when a HTLC payment is paid or cancelled.\n\n```js\nevent HTLCPaymentRemoved(bytes32 indexed id, uint256 amount, uint256 deadline, string usingSecret, string opaque, bool cancelled)\n```\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | id | bytes32 | bytes32 |  |\n|2 | amount | uint256 | uint256 |  |\n|3 | deadline | uint256 | uint256 |  |\n|4 | usingSecret | string | string |  |\n|5 | opaque | string | string |  |\n|6 | cancelled | bool | bool |  |\n\n\n#### 📢 __OwnershipTransferred__\nEmitted when ownership is transferred.\n\n```js\nevent OwnershipTransferred(address indexed previousOwner, address indexed newOwner)\n```\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | previousOwner | address | address |  |\n|2 | newOwner | address | address |  |\n\n\n#### 📢 __Transfer__\n```js\nevent Transfer(address indexed from, address indexed to, uint256 value)\n```\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | from | address | address |  |\n|2 | to | address | address |  |\n|3 | value | uint256 | uint256 |  |\n\n\n#### 📢 __Whitelisted__\nEmitted when a sender is whitelisted or blacklisted.\n\n```js\nevent Whitelisted(address indexed account, bool status)\n```\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | address | address |  |\n|2 | status | bool | bool |  |\n\n\n### Methods\n\n#### ⚙️ __accountNumber__\nGet the account number of the account.\n\n```js\nfunction accountNumber() view returns (uint32)\n```\nThe account number is a sequential number of the accounts created in the bank but this is not an obligation. \n\nImplementations are free to use any kind of account number as long as it respects the IBAN standard.\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | [AccountNumber](./api-t-AccountNumber.md) | uint32 | The account number of the account. |\n\n\n#### ⚙️ __allowance__\nquery the allowance granted from given holder to given spender\n\n```js\nfunction allowance(address holder, address spender) view returns (uint256)\n```\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | holder | address | address | approver of allowance |\n|2 | spender | address | address | recipient of allowance |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | uint256 | uint256 | token allowance |\n\n\n#### ⚙️ __approve__\ngrant approval to spender to spend tokens\n\n```js\nfunction approve(address spender, uint256 amount) returns (bool)\n```\nprefer ERC20Extended functions to avoid transaction-ordering vulnerability (see https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729)\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | spender | address | address | recipient of allowance |\n|2 | amount | uint256 | uint256 | quantity of tokens approved for spending |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | success status (always true; otherwise function should revert) |\n\n\n#### ⚙️ __balance__\nGet the balance of the account.\n\n```js\nfunction balance() view returns (uint256)\n```\nThe balance is the positive amount of the account. If the account is in overdraft, the balance is zero. \n\n This function conserve ERC20 compatibility.\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | uint256 | uint256 | The balance of the account. |\n\n\n#### ⚙️ __balanceOf__\nquery the token balance of given account\n\n```js\nfunction balanceOf(address account) view returns (uint256)\n```\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | address | address | address to query |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | uint256 | uint256 | token balance |\n\n\n#### ⚙️ __bank__\nGet the bank module of the account.\n\n```js\nfunction bank() view returns (address)\n```\nThe bank is the contract that manages the account. It is also the `owner` in the [IOwnable](./api-IOwnable) sense.\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | [ISoCashBank](./api-t-ISoCashBank.md) | address | The bank of the account. |\n\n\n#### ⚙️ __blacklist__\nRemove sender from the whitelist.\n\n```js\nfunction blacklist(address oldSender)\n```\nOnly an other whitelisted sender (or the owner, or the targetted sender) can blacklist a sender.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | oldSender | address | address | The address of the sender to remove. |\n\n\n#### ⚙️ __decimals__\nreturn token decimals, generally used only for display purposes\n\n```js\nfunction decimals() view returns (uint8)\n```\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | uint8 | uint8 | token decimals |\n\n\n#### ⚙️ __fullBalance__\nGet the full balance of the account.\n\n```js\nfunction fullBalance() view returns (int256)\n```\nThe full balance is the actual balance of the account including overdraft. \n\n If the account is in overdraft, the full balance is negative.\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | int256 | int256 | The full balance of the account. |\n\n\n#### ⚙️ __getAttributeAddr__\nGet attribute as address\n\n```js\nfunction getAttributeAddr(bytes32 name) view returns (address)\n```\nThe attributes are used to store additional info on the account. \n\nNote that the `name`is unique for the account but can be duplicated by type of attribute.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | name | bytes32 | bytes32 | The name of the attribute. |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | address | address | The value of the attribute as an address. |\n\n\n#### ⚙️ __getAttributeNum__\nGet attribute as number\n\n```js\nfunction getAttributeNum(bytes32 name) view returns (int256)\n```\nThe attributes are used to store additional info on the account. \n\nNote that the `name`is unique for the account but can be duplicated by type of attribute.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | name | bytes32 | bytes32 | The name of the attribute. |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | int256 | int256 | The value of the attribute as a number. |\n\n\n#### ⚙️ __getAttributeStr__\nGet attribute as string\n\n```js\nfunction getAttributeStr(bytes32 name) view returns (string)\n```\nThe attributes are used to store additional info on the account. \n\nNote that the `name`is unique for the account but can be duplicated by type of attribute.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | name | bytes32 | bytes32 | The name of the attribute. |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | string | string | The value of the attribute as a string. |\n\n\n#### ⚙️ __getHTLCPayment__\nget the HTLC payment structure for an id.\n\n```js\nfunction getHTLCPayment(bytes32 id) view returns (tuple(tuple(address account, bytes11 bic, bytes32 iban) recipient, uint256 amount, uint256 deadline, bytes32 hashlockPaid, bytes32 hashlockCancel, string opaque, uint8 state))\n```\nThis function is used to get the HTLC payment structure for an id.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | id | bytes32 | bytes32 | The unique identifier of the HTLC payment. |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | [HTLC](./api-t-HTLC.md) | tuple | The HTLC structure as defined above. |\n\n\n#### ⚙️ __iban__\nGet the iban of the account.\n\n```js\nfunction iban() view returns (string)\n```\nThe IBAN is the international bank account number of the account and contains the country of the bank, the bank codes and the account number.\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | string | string | The IBAN of the account. |\n\n\n#### ⚙️ __isWhitelisted__\nCheck if a sender is whitelisted.\n\n```js\nfunction isWhitelisted(address sender) view returns (bool)\n```\nNo control of caller is done in this function.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | sender | address | address | The address of the sender. |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | true if the sender is whitelisted or the owner, false otherwise. |\n\n\n#### ⚙️ __lockFunds__\nLocks an amount for a certain payment using a secret.\n\n```js\nfunction lockFunds(tuple(address account, bytes11 bic, bytes32 iban) recipient, uint256 amount, uint256 deadline, bytes32 hashlockPaid, bytes32 hashlockCancel, string opaque) returns (bytes32 key)\n```\nThis function is used to lock an amount for a certain payment using a secret following HTLC interoperability. \n\nOnly whitelisted senders can call this function. \n\nThe `recipient` has the same meaning as in `transferEx()`. \n\nNote that because this function is a transaction, the best way to retrieve the returned id of the HTLC it via the event `HTLCPaymentCreated` defined in [IHTLCPaymentInternal](./api-IHTLCPaymentInternal). \n\nTo do this, retrieve the transaction hash of that transaction, gets the receipt and then the logs that match the block, the target smart contract and the event signature. \n\nBecause the `hashlockPaid` is unique and indexed in the event you can also filter new events with that hash.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | recipient | [RecipentInfo](./api-t-RecipentInfo.md) | tuple | The recipient of the funds. |\n|2 | amount | uint256 | uint256 | The amount to lock. It must be available in the account. |\n|3 | deadline | uint256 | uint256 | The timestamp in sec when the lock expires. |\n|4 | hashlockPaid | bytes32 | bytes32 | The hash of the secret that can trigger the payment. |\n|5 | hashlockCancel | bytes32 | bytes32 | The hash of the secret that can cancel the payment (deprecated). |\n|6 | opaque | string | string | The optional opaque data to be interpreted by the user according to their protocol. Typically a JSON string. |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | key | bytes32 | bytes32 | The unique identifier of the payment. (see note above) |\n\n\n#### ⚙️ __lockedBalance__\nGet the locked balance of the account.\n\n```js\nfunction lockedBalance() view returns (uint256)\n```\nThe locked balance is the amount of the account balance that is locked in a payment. \n\n You can have a negative `fullBalance` and a positive `lockedBalance` if the account is in overdraft.\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | uint256 | uint256 | The locked balance of the account. |\n\n\n#### ⚙️ __name__\nreturn token name\n\n```js\nfunction name() view returns (string)\n```\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | string | string | token name |\n\n\n#### ⚙️ __owner__\nGet the owner of the contract.\n\n```js\nfunction owner() view returns (address)\n```\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | address | address | The address of the owner. |\n\n\n#### ⚙️ __renounceOwnership__\nRenounce ownership.\n\n```js\nfunction renounceOwnership()\n```\nOnly the owner can renounce ownership. \n\nIt will set the owner to the zero address. \n\nEquivalent to `transferOwnership(address(0))`.\n\n#### ⚙️ __setAttributeAddr__\nSet attribute as address\n\n```js\nfunction setAttributeAddr(bytes32 name, address value)\n```\nThe attributes are used to store additional info on the account. \n\nNote that the `name`is unique for the account but can be duplicated by type of attribute.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | name | bytes32 | bytes32 | The name of the attribute. |\n|2 | value | address | address | The value of the attribute as an address. |\n\n\n#### ⚙️ __setAttributeNum__\nSet attribute as number\n\n```js\nfunction setAttributeNum(bytes32 name, int256 value)\n```\nThe attributes are used to store additional info on the account. \n\nNote that the `name`is unique for the account but can be duplicated by type of attribute.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | name | bytes32 | bytes32 | The name of the attribute. |\n|2 | value | int256 | int256 | The value of the attribute as a number. |\n\n\n#### ⚙️ __setAttributeStr__\nSet attribute as string\n\n```js\nfunction setAttributeStr(bytes32 name, string value)\n```\nThe attributes are used to store additional info on the account. \n\nNote that the `name`is unique for the account but can be duplicated by type of attribute.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | name | bytes32 | bytes32 | The name of the attribute. |\n|2 | value | string | string | The value of the attribute as a string. |\n\n\n#### ⚙️ __symbol__\nreturn token symbol\n\n```js\nfunction symbol() view returns (string)\n```\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | string | string | token symbol |\n\n\n#### ⚙️ __totalSupply__\nquery the total minted token supply\n\n```js\nfunction totalSupply() view returns (uint256)\n```\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | uint256 | uint256 | token supply |\n\n\n#### ⚙️ __transfer__\ntransfer tokens to given recipient\n\n```js\nfunction transfer(address recipient, uint256 amount) returns (bool)\n```\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | recipient | address | address | beneficiary of token transfer |\n|2 | amount | uint256 | uint256 | quantity of tokens to transfer |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | success status (always true; otherwise function should revert) |\n\n\n#### ⚙️ __transferEx__\nTransfer funds to another account.\n\n```js\nfunction transferEx(tuple(address account, bytes11 bic, bytes32 iban) recipient, uint256 amount, string details) returns (bool)\n```\nThis function is used to transfer funds to another account. \n\nNote that the [IERC20](./api-IERC20) function `transfer()` is also available and calls this function with the details \"ERC20 Transfer\". \n\nOnly whitelisted senders can call this function or callers that has received an allowance. \n\nAllowance can be provided by a whitelisted sender using the `approve()` function of [IERC20](./api-IERC20). \n\nNote that the `recipient` is a structure where you provide either the smart contract address of the beneficiary account or its IBAN.  \n\nIf the beneficiary is a bank, the BIC can also be provided (deprecated)\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | recipient | [RecipentInfo](./api-t-RecipentInfo.md) | tuple | The recipient of the funds. |\n|2 | amount | uint256 | uint256 | The amount to transfer. |\n|3 | details | string | string | The details of the transfer. |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | true if the transfer is successful, false otherwise. |\n\n\n#### ⚙️ __transferFrom__\ntransfer tokens to given recipient on behalf of given holder\n\n```js\nfunction transferFrom(address holder, address recipient, uint256 amount) returns (bool)\n```\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | holder | address | address | holder of tokens prior to transfer |\n|2 | recipient | address | address | beneficiary of token transfer |\n|3 | amount | uint256 | uint256 | quantity of tokens to transfer |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | success status (always true; otherwise function should revert) |\n\n\n#### ⚙️ __transferLockedFunds__\nTransfer locked funds to the recipient.\n\n```js\nfunction transferLockedFunds(bytes32 key, tuple(address account, bytes11 bic, bytes32 iban) recipient, string secret, string details) returns (bool)\n```\nThis function is used to transfer locked funds to the pre-set recipient. \n\nAnyone can call this function as long as they have the valid secret. \n\nThe `recipient` is ignored and will be removed in a future version. \n\nThe `secret` is the secret that can unlock the payment. \n\nIf successful, the HTLC `state` is set to `PAID` and the event `HTLCPaymentRemoved` is emitted revealing the secret.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | key | bytes32 | bytes32 | The unique identifier of the payment. |\n|2 | recipient | [RecipentInfo](./api-t-RecipentInfo.md) | tuple | The recipient of the funds. (deprecated and ignored). |\n|3 | secret | string | string | The secret to unlock the payment. |\n|4 | details | string | string | The details of the transfer transmitted with the payment. |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | true if the transfer is successful, false otherwise. |\n\n\n#### ⚙️ __transferOwnership__\nTransfer ownership to a new account.\n\n```js\nfunction transferOwnership(address account)\n```\nOnly the owner can transfer ownership.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | address | address | The address of the new owner. |\n\n\n#### ⚙️ __unlockFunds__\nUnlock locked funds.\n\n```js\nfunction unlockFunds(bytes32 key, string secret) returns (bool)\n```\nThis function is used to unlock locked funds. \n\nOnly whitelisted sender can call this function. \n\nIf successful, the HTLC `state` is set to `CANCELLED` and the event `HTLCPaymentRemoved` is emitted revealing the cancel secret if present. \n\nNote that to properly uses the cancel secret (that must be provided by the caller of the `lockFunds()` function), the `hashlockCancel`  must have been provided by the counterparty (and not the owner of the funds).  In that way, if the counterparty decide to no complete the process it can send the cancel secret to the initial holder in order to unlock the funds before the end of the deadline.  However, if the counterparty realizes that the lock does not contains its cancel hash (or a zero hash),  then it can decide not to proceed with the transaction as it can mean that the initial fund owner may have the actual secret to retrieve the funds  before the end of the deadline and the counterparty will not be able to retrieve the funds after completing its end of the bargain.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | key | bytes32 | bytes32 | The unique identifier of the payment. |\n|2 | secret | string | string | The secret to unlock the payment.   |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | true if the unlock is successful, false otherwise. |\n\n\n#### ⚙️ __unlockedBalance__\nGet the unlocked balance of the account.\n\n```js\nfunction unlockedBalance() view returns (uint256)\n```\nThe unlocked balance is the amount of the account balance that is imediatly available for payment. \n\n If the `balance` is lower than the `lockedBalance`, the `unlockedBalance` is zero, else it is the difference of the 2.\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | uint256 | uint256 | The unlocked balance of the account. |\n\n\n#### ⚙️ __verifyHTLC__\nVerify the secret of a HTLC payment.\n\n```js\nfunction verifyHTLC(bytes32 id, string secret) view returns (bool ok, string reason)\n```\nThis function is used to verify the secret of a HTLC payment.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | id | bytes32 | bytes32 | The unique identifier of the HTLC payment. |\n|2 | secret | string | string | The secret to verify. |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ok | bool | bool | True if the secret is correct, false otherwise. |\n|2 | reason | string | string | The reason why the verification failed: status is not `INITIATED`, deadline is reached, secret does not match the hash. |\n\n\n#### ⚙️ __verifyHTLCCancel__\nVerify the possibility to cancel a HTLC payment.\n\n```js\nfunction verifyHTLCCancel(bytes32 id, string secret) view returns (bool ok, string reason)\n```\nThis function is used to verify the possibility to cancel a HTLC payment.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | id | bytes32 | bytes32 | The unique identifier of the HTLC payment. |\n|2 | secret | string | string | The secret to cancel (discouraged). |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ok | bool | bool | True if the secret is correct, false otherwise. |\n|2 | reason | string | string | The reason why the verification failed: status is not `INITIATED`, deadline is not reached, secret does not match the cancel hash. |\n\n\n#### ⚙️ __whitelist__\nWhitelist a sender.\n\n```js\nfunction whitelist(address newSender)\n```\nOnly an other whitelisted sender (or the owner) can whitelist a new sender.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | newSender | address | address | The address of the sender. |\n\n\n"
  },
  {
    "id": "ISoCashBackOfficePayments",
    "title": "ISoCashBackOfficePayments",
    "content": "## 📜 ISoCashBackOfficePayments interface\n\nInterface for the back office to manage payments\n\nThis interface exposes methods to manage payments with a wallet that is whitelisted as a back office\n\n### Methods\n\n#### ⚙️ __decidePendingTransfer__\nInstruct the bank module to proceed with a pending transfer or to cancel it\n\n```js\nfunction decidePendingTransfer(uint256 id, uint8 status, string reason) returns (bool)\n```\nThis method requires that the caller is whitelisted\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | id | [TransferId](./api-t-TransferId.md) | uint256 | The unique identifier of the transfer |\n|2 | status | [TransferStatus](./api-t-TransferStatus.md) | uint8 | The status of the transfer, `CANCELLED=3`, `PROCESSED=4` |\n|3 | reason | string | string | The reason of the status of the transfer when put in pending, cancelled or processed |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | true if the decision is successful, false or fail otherwise |\n\n\n#### ⚙️ __requestNetting__\nrequest another bank that holds a nostro account to operate a netting\n\n```js\nfunction requestNetting(address correspondent, address loro, uint256 amount) returns (bool)\n```\nThis method requires that the caller is whitelisted\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | correspondent | [ISoCashBank](./api-t-ISoCashBank.md) | address | The bank module that holds the nostro account |\n|2 | loro | [ISoCashAccount](./api-t-ISoCashAccount.md) | address | The account of the correspondent with the caller bank where the netting should be operated |\n|3 | amount | uint256 | uint256 | The amount of the netting expressed in the smallest unit of the currency |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | true if the netting is successful, false or fail otherwise |\n\n\n#### ⚙️ __synchroNostro__\nForces the update of the copy of a nostro balance in the bank module\n\n```js\nfunction synchroNostro(address bank, address account) returns (bool)\n```\nThis method requires that the caller is whitelisted \n\nThe nostro account can be a so|cash account or an ERC20 token account\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | bank | address | address | The bank that holds the nostro account or the address of the ERC20 token |\n|2 | account | address | address | The address of the account balance |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | true if the update is successful, false or fail otherwise |\n\n\n#### ⚙️ __transferFrom__\nInitiate a transfer from the back office side on behalf of a client\n\n```js\nfunction transferFrom(address from, tuple(address account, bytes11 bic, bytes32 iban) to, uint256 amount, string details) returns (bool)\n```\nThis method requires that the caller is whitelisted\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | from | [ISoCashAccount](./api-t-ISoCashAccount.md) | address | The account to transfer the funds from |\n|2 | to | [RecipentInfo](./api-t-RecipentInfo.md) | tuple | The recipient account to transfer the funds to |\n|3 | amount | uint256 | uint256 | The amount of the transfer expressed in the smallest unit of the currency |\n|4 | details | string | string | The details of the transfer |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | true if the transfer is successful, false or fail otherwise |\n\n\n"
  },
  {
    "id": "ISoCashBank",
    "title": "ISoCashBank",
    "content": "## 📜 ISoCashBank\n\nJust a marker type - to give an abstract type to a contract that represents a bank module - it should not have function \n\n"
  },
  {
    "id": "ISoCashBankBackOffice",
    "title": "ISoCashBankBackOffice",
    "content": "## 📜 ISoCashBankbackOffice interface\n\nInterface for the back office to manage the bank module\n\nThis interface groups events and functions from  [ISoCashBankBackOfficeServices](./api-ISoCashBankBackOfficeServices),  [ISoCashBackOfficePayments](./api-ISoCashBackOfficePayments),  [ISoCashBankTransferManagementInternal](./api-ISoCashBankTransferManagementInternal),  [ISoCashBankNostroManagementInternal](./api-ISoCashBankNostroManagementInternal) and  [ISoCashBankBalanceManagementInternal](./api-ISoCashBankBalanceManagementInternal).\n\n### Events\n\n#### 📢 __AccountActivation__\nEvent emitted when an account is activated or deactivated\n\n```js\nevent AccountActivation(address indexed account, bool active)\n```\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | [ISoCashAccount](./api-t-ISoCashAccount.md) | address |  |\n|2 | active | bool | bool |  |\n\n\n#### 📢 __AccountRegistration__\nEvent emitted when an account is registered or unregistered\n\n```js\nevent AccountRegistration(address indexed account, bool registered)\n```\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | [ISoCashAccount](./api-t-ISoCashAccount.md) | address |  |\n|2 | registered | bool | bool |  |\n\n\n#### 📢 __BankCreation__\nEvent emitted when the module is created\n\n```js\nevent BankCreation(address indexed bank, string bic, string currency)\n```\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | bank | [ISoCashBank](./api-t-ISoCashBank.md) | address |  |\n|2 | bic | string | string |  |\n|3 | currency | string | string |  |\n\n\n#### 📢 __BankRegistration__\nEvent emitted when the bank module is Registered\n\n```js\nevent BankRegistration(address indexed bank, bool registered)\n```\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | bank | [ISoCashBank](./api-t-ISoCashBank.md) | address |  |\n|2 | registered | bool | bool |  |\n\n\n#### 📢 __NostroAccountRegistration__\nEvent emitted when a nostro account is registered or unregistered\n\n```js\nevent NostroAccountRegistration(uint8 model, address indexed bank, address indexed account, bool registered)\n```\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | model | [BankModel](./api-t-BankModel.md) | uint8 |  |\n|2 | bank | address | address |  |\n|3 | account | address | address |  |\n|4 | registered | bool | bool |  |\n\n\n#### 📢 __TransferEx__\nEvent emitted when the balance of one or two accounts are updated\n\n```js\nevent TransferEx(address indexed from, address indexed to, uint256 value, uint256 indexed id)\n```\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | from | [ISoCashAccount](./api-t-ISoCashAccount.md) | address |  |\n|2 | to | [ISoCashAccount](./api-t-ISoCashAccount.md) | address |  |\n|3 | value | uint256 | uint256 |  |\n|4 | id | [TransferId](./api-t-TransferId.md) | uint256 |  |\n\n\n#### 📢 __TransfertStateChanged__\nEvent emitted when the status of a transfer is `PENDING`, `CANCELLED` or `PROCESSED`\n\n```js\nevent TransfertStateChanged(uint256 indexed id, uint8 status)\n```\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | id | [TransferId](./api-t-TransferId.md) | uint256 |  |\n|2 | status | [TransferStatus](./api-t-TransferStatus.md) | uint8 |  |\n\n\n### Methods\n\n#### ⚙️ __correspondent__\nGet the correspondent bank identifier of a correspondent bank module\n\n```js\nfunction correspondent(address correspondent) view returns (tuple(bytes2 country, bytes10[] codes) cb)\n```\nThis method is used to get the correspondent bank identifier of a correspondent bank module\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | correspondent | [ISoCashBank](./api-t-ISoCashBank.md) | address | The correspondent bank module |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | cb | [BankIdentifier](./api-t-BankIdentifier.md) | tuple | The correspondent bank identifier of the correspondent bank module |\n\n\n#### ⚙️ __credit__\nCredit the account with new funds coming from money received in bank nostro or from a loan or equivalent\n\n```js\nfunction credit(address account, uint256 amount, string details) returns (bool)\n```\nAccounting wise, the account is only a liability side, so when recording a credit, the bank should record a debit in an asset account. Such asset account can be a nostro account, held on-chain or outside the blockchain, or can be against the recognition of money that the client owes to the banks (payable, loan, ...). \n\nOnly whitelisted back office wallets can call this method.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | [ISoCashAccount](./api-t-ISoCashAccount.md) | address | The account to credit |\n|2 | amount | uint256 | uint256 | The amount to credit |\n|3 | details | string | string | The details of the credit |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | true if the credit is successful, false or fail otherwise |\n\n\n#### ⚙️ __debit__\nDebit the account reducing the liability to the client against an asset of the bank\n\n```js\nfunction debit(address account, uint256 amount, string details) returns (bool)\n```\nAccounting wise, the account is only a liability side, so when recording a debit, the bank should record a credit in an asset account. Such asset account can be a nostro account, held on-chain or outside the blockchain, or can be against the recognition of money that the client owes to the banks (payable, loan, ...). \n\nOnly whitelisted back office wallets can call this method.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | [ISoCashAccount](./api-t-ISoCashAccount.md) | address | The account to debit |\n|2 | amount | uint256 | uint256 | The amount to debit |\n|3 | details | string | string | The details of the debit |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | true if the debit is successful, false or fail otherwise |\n\n\n#### ⚙️ __decidePendingTransfer__\nInstruct the bank module to proceed with a pending transfer or to cancel it\n\n```js\nfunction decidePendingTransfer(uint256 id, uint8 status, string reason) returns (bool)\n```\nThis method requires that the caller is whitelisted\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | id | [TransferId](./api-t-TransferId.md) | uint256 | The unique identifier of the transfer |\n|2 | status | [TransferStatus](./api-t-TransferStatus.md) | uint8 | The status of the transfer, `CANCELLED=3`, `PROCESSED=4` |\n|3 | reason | string | string | The reason of the status of the transfer when put in pending, cancelled or processed |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | true if the decision is successful, false or fail otherwise |\n\n\n#### ⚙️ __getNostroBalance__\nGet the actual balance of a nostro account and the last copy in the bank module\n\n```js\nfunction getNostroBalance(address bank, address account) view returns (int256 actual, int256 last)\n```\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | bank | address | address | The bank that holds the nostro account |\n|2 | account | address | address | The address of the account balance |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | actual | int256 | int256 | The actual balance of the account in the bank that holds the account |\n|2 | last | int256 | int256 | The last copy of the balance of the account in this bank module |\n\n\n#### ⚙️ __isAccountActive__\nTest if an account is active\n\n```js\nfunction isAccountActive(address account) view returns (bool)\n```\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | [ISoCashAccount](./api-t-ISoCashAccount.md) | address | The account to test |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | true if the account is active, false otherwise |\n\n\n#### ⚙️ __isAccountRegistered__\nTest if an account is registered as an account of the bank module\n\n```js\nfunction isAccountRegistered(address account) view returns (bool)\n```\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | [ISoCashAccount](./api-t-ISoCashAccount.md) | address | The account to test |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | true if the account is registered, false otherwise |\n\n\n#### ⚙️ __isCorrespondentRegistered__\nTest if the bank module is a correspondent of this bank module\n\n```js\nfunction isCorrespondentRegistered(address correspondent) view returns (bool)\n```\nimplemented normally via the referential but can be overriden\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | correspondent | [ISoCashBank](./api-t-ISoCashBank.md) | address | The bank module to test |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | true if the bank module is a correspondent, false otherwise |\n\n\n#### ⚙️ __lockFunds__\nLocks some funds of the client\n\n```js\nfunction lockFunds(address account, uint256 amount) returns (bool)\n```\nThe locked funds are not usable by the client for spending but are still part of the full balance of the account \n\nNote that this function is not to be confused with the `lockFunds(amount)` method of the [ISoCashBankExternalWOTransfer](./api-ISoCashBankExternalWOTransfer) interface. \n\nOnly whitelisted back office wallets can call this method.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | [ISoCashAccount](./api-t-ISoCashAccount.md) | address | The account to lock the funds of |\n|2 | amount | uint256 | uint256 | The amount to lock |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | true if the lock is successful, false or fail otherwise |\n\n\n#### ⚙️ __nostroAccountModel__\nGet the model of a nostro account\n\n```js\nfunction nostroAccountModel(address bank, address account) view returns (uint8)\n```\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | bank | address | address | The bank that holds the nostro account |\n|2 | account | address | address | The address of the account balance |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | [BankModel](./api-t-BankModel.md) | uint8 | The model of the nostro account : `UNDEFINED=0`, `SO_CASH=1`, `ERC20=2` |\n\n\n#### ⚙️ __registerAccount__\nRegister an account smart contract as an account of the bank module\n\n```js\nfunction registerAccount(address account) returns (bool)\n```\nOnly whitelisted back office wallets can call this method. \n\nThe bank module should have been given ownership of the account smart contract before the call (`transferOwnership()`). \n\nClient can provide their own smart contract to the bank to be registered as an account as long as it respects the bank requirements.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | [ISoCashAccount](./api-t-ISoCashAccount.md) | address | The account to register |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | true if the account is registered, false otherwise |\n\n\n#### ⚙️ __registerNostroAccount__\nRegister a nostro account\n\n```js\nfunction registerNostroAccount(tuple(uint8 model, address bank, address account) nostro) returns (bool)\n```\nOnly whitelisted back office wallets can call this method. \n\nA nostro account is either a so|cash account or an ERC20 token account that holds the balance of the bank module in another bank module.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | nostro | [BankAccount](./api-t-BankAccount.md) | tuple | The nostro account to register |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | true if the account is registered, false otherwise |\n\n\n#### ⚙️ __requestNetting__\nrequest another bank that holds a nostro account to operate a netting\n\n```js\nfunction requestNetting(address correspondent, address loro, uint256 amount) returns (bool)\n```\nThis method requires that the caller is whitelisted\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | correspondent | [ISoCashBank](./api-t-ISoCashBank.md) | address | The bank module that holds the nostro account |\n|2 | loro | [ISoCashAccount](./api-t-ISoCashAccount.md) | address | The account of the correspondent with the caller bank where the netting should be operated |\n|3 | amount | uint256 | uint256 | The amount of the netting expressed in the smallest unit of the currency |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | true if the netting is successful, false or fail otherwise |\n\n\n#### ⚙️ __synchroNostro__\nForces the update of the copy of a nostro balance in the bank module\n\n```js\nfunction synchroNostro(address bank, address account) returns (bool)\n```\nThis method requires that the caller is whitelisted \n\nThe nostro account can be a so|cash account or an ERC20 token account\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | bank | address | address | The bank that holds the nostro account or the address of the ERC20 token |\n|2 | account | address | address | The address of the account balance |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | true if the update is successful, false or fail otherwise |\n\n\n#### ⚙️ __toggleAccountActive__\nActivate or deactivate an account\n\n```js\nfunction toggleAccountActive(address account) returns (bool)\n```\nOnly whitelisted back office wallets can call this method.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | [ISoCashAccount](./api-t-ISoCashAccount.md) | address | The account to activate or deactivate |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | true if the account is now active and false if it is now deactivated |\n\n\n#### ⚙️ __transferFrom__\nInitiate a transfer from the back office side on behalf of a client\n\n```js\nfunction transferFrom(address from, tuple(address account, bytes11 bic, bytes32 iban) to, uint256 amount, string details) returns (bool)\n```\nThis method requires that the caller is whitelisted\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | from | [ISoCashAccount](./api-t-ISoCashAccount.md) | address | The account to transfer the funds from |\n|2 | to | [RecipentInfo](./api-t-RecipentInfo.md) | tuple | The recipient account to transfer the funds to |\n|3 | amount | uint256 | uint256 | The amount of the transfer expressed in the smallest unit of the currency |\n|4 | details | string | string | The details of the transfer |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | true if the transfer is successful, false or fail otherwise |\n\n\n#### ⚙️ __unlockFunds__\nUnlocks some funds of the client\n\n```js\nfunction unlockFunds(address account, uint256 amount) returns (bool)\n```\nThe unlocked funds are usable by the client for spending and are part of the full balance of the account \n\nNote that this function is not to be confused with the `unlockFunds(amount)` method of the [ISoCashBankExternalWOTransfer](./api-ISoCashBankExternalWOTransfer) interface. \n\nNote that this function can unlock funds locked by the client via the HTLC protocol. \n\nOnly whitelisted back office wallets can call this method.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | [ISoCashAccount](./api-t-ISoCashAccount.md) | address | The account to unlock the funds of |\n|2 | amount | uint256 | uint256 | The amount to unlock |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | true if the unlock is successful, false or fail otherwise |\n\n\n#### ⚙️ __unregisterAccount__\nUnregister an account smart contract as an account of the bank module\n\n```js\nfunction unregisterAccount(address account) returns (bool)\n```\nOnly whitelisted back office wallets can call this method. \n\nThe bank module should transfer the ownership to the caller wallet during the execution so that the back office can return the ownership to the client.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | [ISoCashAccount](./api-t-ISoCashAccount.md) | address | The account to unregister |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | true if the account is unregistered, false otherwise |\n\n\n#### ⚙️ __unregisterNostroAccount__\nUnregister a nostro account\n\n```js\nfunction unregisterNostroAccount(address bank, address account) returns (bool)\n```\nOnly whitelisted back office wallets can call this method. \n\nThere is currently only one nostro account per bank module but the interface allows for multiple accounts.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | bank | address | address | The bank that holds the nostro account |\n|2 | account | address | address | The address of the account balance |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | true if the account is unregistered, false otherwise |\n\n\n"
  },
  {
    "id": "ISoCashBankBackOfficeServices",
    "title": "ISoCashBankBackOfficeServices",
    "content": "## 📜 ISoCashBankBackOfficeServices interface\n\nInterface for the back office to accounts, nostros and local credit and debits.\n\nThis interface exposes methods for whitelisted back office wallets. \n\n### Events\n\n#### 📢 __BankCreation__\nEvent emitted when the module is created\n\n```js\nevent BankCreation(address indexed bank, string bic, string currency)\n```\nDeprecated: Prefer the event `BankModuleSet` emitted at registration in the referential in [ISoCashCountryStateManagement](./api-ISoCashCountryStateManagement)\n\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | bank | [ISoCashBank](./api-t-ISoCashBank.md) | address | The bank module that is created |\n|2 | bic | string | string | The BIC of the bank |\n|3 | currency | string | string | The currency of the bank |\n\n\n#### 📢 __BankRegistration__\nEvent emitted when the bank module is Registered\n\n```js\nevent BankRegistration(address indexed bank, bool registered)\n```\nDeprecated (and not emitted in Diamond implementation). Use `BankModuleSet` emitted at registration in the referential in [ISoCashCountryStateManagement](./api-ISoCashCountryStateManagement)\n\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | bank | [ISoCashBank](./api-t-ISoCashBank.md) | address | The bank module that is registered |\n|2 | registered | bool | bool | True if the bank is registered, false if it is unregistered |\n\n\n### Methods\n\n#### ⚙️ __correspondent__\nGet the correspondent bank identifier of a correspondent bank module\n\n```js\nfunction correspondent(address correspondent) view returns (tuple(bytes2 country, bytes10[] codes) cb)\n```\nThis method is used to get the correspondent bank identifier of a correspondent bank module\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | correspondent | [ISoCashBank](./api-t-ISoCashBank.md) | address | The correspondent bank module |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | cb | [BankIdentifier](./api-t-BankIdentifier.md) | tuple | The correspondent bank identifier of the correspondent bank module |\n\n\n#### ⚙️ __credit__\nCredit the account with new funds coming from money received in bank nostro or from a loan or equivalent\n\n```js\nfunction credit(address account, uint256 amount, string details) returns (bool)\n```\nAccounting wise, the account is only a liability side, so when recording a credit, the bank should record a debit in an asset account. Such asset account can be a nostro account, held on-chain or outside the blockchain, or can be against the recognition of money that the client owes to the banks (payable, loan, ...). \n\nOnly whitelisted back office wallets can call this method.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | [ISoCashAccount](./api-t-ISoCashAccount.md) | address | The account to credit |\n|2 | amount | uint256 | uint256 | The amount to credit |\n|3 | details | string | string | The details of the credit |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | true if the credit is successful, false or fail otherwise |\n\n\n#### ⚙️ __debit__\nDebit the account reducing the liability to the client against an asset of the bank\n\n```js\nfunction debit(address account, uint256 amount, string details) returns (bool)\n```\nAccounting wise, the account is only a liability side, so when recording a debit, the bank should record a credit in an asset account. Such asset account can be a nostro account, held on-chain or outside the blockchain, or can be against the recognition of money that the client owes to the banks (payable, loan, ...). \n\nOnly whitelisted back office wallets can call this method.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | [ISoCashAccount](./api-t-ISoCashAccount.md) | address | The account to debit |\n|2 | amount | uint256 | uint256 | The amount to debit |\n|3 | details | string | string | The details of the debit |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | true if the debit is successful, false or fail otherwise |\n\n\n#### ⚙️ __getNostroBalance__\nGet the actual balance of a nostro account and the last copy in the bank module\n\n```js\nfunction getNostroBalance(address bank, address account) view returns (int256 actual, int256 last)\n```\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | bank | address | address | The bank that holds the nostro account |\n|2 | account | address | address | The address of the account balance |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | actual | int256 | int256 | The actual balance of the account in the bank that holds the account |\n|2 | last | int256 | int256 | The last copy of the balance of the account in this bank module |\n\n\n#### ⚙️ __isAccountActive__\nTest if an account is active\n\n```js\nfunction isAccountActive(address account) view returns (bool)\n```\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | [ISoCashAccount](./api-t-ISoCashAccount.md) | address | The account to test |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | true if the account is active, false otherwise |\n\n\n#### ⚙️ __isAccountRegistered__\nTest if an account is registered as an account of the bank module\n\n```js\nfunction isAccountRegistered(address account) view returns (bool)\n```\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | [ISoCashAccount](./api-t-ISoCashAccount.md) | address | The account to test |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | true if the account is registered, false otherwise |\n\n\n#### ⚙️ __isCorrespondentRegistered__\nTest if the bank module is a correspondent of this bank module\n\n```js\nfunction isCorrespondentRegistered(address correspondent) view returns (bool)\n```\nimplemented normally via the referential but can be overriden\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | correspondent | [ISoCashBank](./api-t-ISoCashBank.md) | address | The bank module to test |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | true if the bank module is a correspondent, false otherwise |\n\n\n#### ⚙️ __lockFunds__\nLocks some funds of the client\n\n```js\nfunction lockFunds(address account, uint256 amount) returns (bool)\n```\nThe locked funds are not usable by the client for spending but are still part of the full balance of the account \n\nNote that this function is not to be confused with the `lockFunds(amount)` method of the [ISoCashBankExternalWOTransfer](./api-ISoCashBankExternalWOTransfer) interface. \n\nOnly whitelisted back office wallets can call this method.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | [ISoCashAccount](./api-t-ISoCashAccount.md) | address | The account to lock the funds of |\n|2 | amount | uint256 | uint256 | The amount to lock |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | true if the lock is successful, false or fail otherwise |\n\n\n#### ⚙️ __nostroAccountModel__\nGet the model of a nostro account\n\n```js\nfunction nostroAccountModel(address bank, address account) view returns (uint8)\n```\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | bank | address | address | The bank that holds the nostro account |\n|2 | account | address | address | The address of the account balance |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | [BankModel](./api-t-BankModel.md) | uint8 | The model of the nostro account : `UNDEFINED=0`, `SO_CASH=1`, `ERC20=2` |\n\n\n#### ⚙️ __registerAccount__\nRegister an account smart contract as an account of the bank module\n\n```js\nfunction registerAccount(address account) returns (bool)\n```\nOnly whitelisted back office wallets can call this method. \n\nThe bank module should have been given ownership of the account smart contract before the call (`transferOwnership()`). \n\nClient can provide their own smart contract to the bank to be registered as an account as long as it respects the bank requirements.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | [ISoCashAccount](./api-t-ISoCashAccount.md) | address | The account to register |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | true if the account is registered, false otherwise |\n\n\n#### ⚙️ __registerNostroAccount__\nRegister a nostro account\n\n```js\nfunction registerNostroAccount(tuple(uint8 model, address bank, address account) nostro) returns (bool)\n```\nOnly whitelisted back office wallets can call this method. \n\nA nostro account is either a so|cash account or an ERC20 token account that holds the balance of the bank module in another bank module.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | nostro | [BankAccount](./api-t-BankAccount.md) | tuple | The nostro account to register |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | true if the account is registered, false otherwise |\n\n\n#### ⚙️ __toggleAccountActive__\nActivate or deactivate an account\n\n```js\nfunction toggleAccountActive(address account) returns (bool)\n```\nOnly whitelisted back office wallets can call this method.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | [ISoCashAccount](./api-t-ISoCashAccount.md) | address | The account to activate or deactivate |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | true if the account is now active and false if it is now deactivated |\n\n\n#### ⚙️ __unlockFunds__\nUnlocks some funds of the client\n\n```js\nfunction unlockFunds(address account, uint256 amount) returns (bool)\n```\nThe unlocked funds are usable by the client for spending and are part of the full balance of the account \n\nNote that this function is not to be confused with the `unlockFunds(amount)` method of the [ISoCashBankExternalWOTransfer](./api-ISoCashBankExternalWOTransfer) interface. \n\nNote that this function can unlock funds locked by the client via the HTLC protocol. \n\nOnly whitelisted back office wallets can call this method.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | [ISoCashAccount](./api-t-ISoCashAccount.md) | address | The account to unlock the funds of |\n|2 | amount | uint256 | uint256 | The amount to unlock |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | true if the unlock is successful, false or fail otherwise |\n\n\n#### ⚙️ __unregisterAccount__\nUnregister an account smart contract as an account of the bank module\n\n```js\nfunction unregisterAccount(address account) returns (bool)\n```\nOnly whitelisted back office wallets can call this method. \n\nThe bank module should transfer the ownership to the caller wallet during the execution so that the back office can return the ownership to the client.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | [ISoCashAccount](./api-t-ISoCashAccount.md) | address | The account to unregister |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | true if the account is unregistered, false otherwise |\n\n\n#### ⚙️ __unregisterNostroAccount__\nUnregister a nostro account\n\n```js\nfunction unregisterNostroAccount(address bank, address account) returns (bool)\n```\nOnly whitelisted back office wallets can call this method. \n\nThere is currently only one nostro account per bank module but the interface allows for multiple accounts.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | bank | address | address | The bank that holds the nostro account |\n|2 | account | address | address | The address of the account balance |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | true if the account is unregistered, false otherwise |\n\n\n"
  },
  {
    "id": "ISoCashBankBalanceManagement",
    "title": "ISoCashBankBalanceManagement",
    "content": "## 📜 ISoCashBankBalanceManagement interface \n\nInterface for exposing account balance information\n\nThis interface exposes read only methods to get the balance of an account \n\nInherits from [ISoCashBankBalanceManagementInternal](./api-ISoCashBankBalanceManagementInternal).\n\n### Events\n\n#### 📢 __AccountActivation__\nEvent emitted when an account is activated or deactivated\n\n```js\nevent AccountActivation(address indexed account, bool active)\n```\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | [ISoCashAccount](./api-t-ISoCashAccount.md) | address |  |\n|2 | active | bool | bool |  |\n\n\n#### 📢 __AccountRegistration__\nEvent emitted when an account is registered or unregistered\n\n```js\nevent AccountRegistration(address indexed account, bool registered)\n```\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | [ISoCashAccount](./api-t-ISoCashAccount.md) | address |  |\n|2 | registered | bool | bool |  |\n\n\n#### 📢 __TransferEx__\nEvent emitted when the balance of one or two accounts are updated\n\n```js\nevent TransferEx(address indexed from, address indexed to, uint256 value, uint256 indexed id)\n```\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | from | [ISoCashAccount](./api-t-ISoCashAccount.md) | address |  |\n|2 | to | [ISoCashAccount](./api-t-ISoCashAccount.md) | address |  |\n|3 | value | uint256 | uint256 |  |\n|4 | id | [TransferId](./api-t-TransferId.md) | uint256 |  |\n\n\n### Methods\n\n#### ⚙️ __accountNumberOf__\nget the account number for an account smart contract\n\n```js\nfunction accountNumberOf(address account) view returns (uint32)\n```\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | [ISoCashAccount](./api-t-ISoCashAccount.md) | address | The account to get the account number of |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | [AccountNumber](./api-t-AccountNumber.md) | uint32 | The account number of the account or zero if not found |\n\n\n#### ⚙️ __addressOf__\nget the account address for an account number\n\n```js\nfunction addressOf(uint32 accountNumber) view returns (address)\n```\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | accountNumber | [AccountNumber](./api-t-AccountNumber.md) | uint32 | The account number to get the account address of |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | [ISoCashAccount](./api-t-ISoCashAccount.md) | address | The account address of the account number or zero if not found |\n\n\n#### ⚙️ __addressOfFullAccount__\nget the account address for an account string as present in an IBAN\n\n```js\nfunction addressOfFullAccount(string account) view returns (address)\n```\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | string | string | The account part of the IBAN to get the account address of |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | [ISoCashAccount](./api-t-ISoCashAccount.md) | address | The account address of the account of zero if not found |\n\n\n#### ⚙️ __fullBalanceOf__\nGet the full balance of an account\n\n```js\nfunction fullBalanceOf(address account) view returns (int256)\n```\nThe full balance is the actual liability of the bank towards the account holder. It can be negative it the account is in overdraft. \n\nNote that the `balanceOf()` method of the ERC20 standard is also available in the bank module via the interface [IERC20Compatibility](./api-IERC20Compatibility).\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | [ISoCashAccount](./api-t-ISoCashAccount.md) | address | The account to get the full balance of |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | int256 | int256 | The full balance of the account |\n\n\n#### ⚙️ __lockedBalanceOf__\nGet the locked balance of an account\n\n```js\nfunction lockedBalanceOf(address account) view returns (uint256)\n```\nThe locked balance is the amount that has been earmarked for specific transactions by the account owner (or the bank)\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | [ISoCashAccount](./api-t-ISoCashAccount.md) | address | The account to get the locked balance of |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | uint256 | uint256 | The locked balance of the account |\n\n\n#### ⚙️ __unlockedBalanceOf__\nGet the unlocked balance of an account\n\n```js\nfunction unlockedBalanceOf(address account) view returns (uint256)\n```\nThe unlocked balance is the amount that is immediatly available for the account owner to spend\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | [ISoCashAccount](./api-t-ISoCashAccount.md) | address | The account to get the unlocked balance of |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | uint256 | uint256 | The unlocked balance of the account |\n\n\n"
  },
  {
    "id": "ISoCashBankBalanceManagementInternal",
    "title": "ISoCashBankBalanceManagementInternal",
    "content": "## 📜 ISoCashBankBalanceManagementInternal interface \n\nInterface for exposing events related to account and balance management\n\n### Events\n\n#### 📢 __AccountActivation__\nEvent emitted when an account is activated or deactivated\n\n```js\nevent AccountActivation(address indexed account, bool active)\n```\nAn account is activated/deactivated by the bank back office when there are business or compliance reason to do so \n\nAn innactive account can not receive or send funds, it places the funds in a pending state for the bank back office to intervene\n\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | [ISoCashAccount](./api-t-ISoCashAccount.md) | address | The account that is activated or deactivated |\n|2 | active | bool | bool | True if the account is activated, false if it is deactivated |\n\n\n#### 📢 __AccountRegistration__\nEvent emitted when an account is registered or unregistered\n\n```js\nevent AccountRegistration(address indexed account, bool registered)\n```\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | [ISoCashAccount](./api-t-ISoCashAccount.md) | address | The account that is registered or unregistered |\n|2 | registered | bool | bool | True if the account is registered, false if it is unregistered |\n\n\n#### 📢 __TransferEx__\nEvent emitted when the balance of one or two accounts are updated\n\n```js\nevent TransferEx(address indexed from, address indexed to, uint256 value, uint256 indexed id)\n```\nThe `Transfer()` event of the ERC20 standard is also emitted in // for compatibility \n\nThis event provides access to the transfer id that offers info about the transfer via the `transferInfo()` method of [ISoCashBankExternalWOTransfer](./api-ISoCashBankExternalWOTransfer) interface \n\n`from`and `to` are only accounts held in this bank module (or zero account), like in the ERC20 standard and only represents the local account entries \n\nFor interbank transfers, the information of the end to end information is provided by the `transferInfo()` method.\n\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | from | [ISoCashAccount](./api-t-ISoCashAccount.md) | address | The account that is debitted |\n|2 | to | [ISoCashAccount](./api-t-ISoCashAccount.md) | address | The account that is credited |\n|3 | value | uint256 | uint256 | The amount of the transfer expressed in the smallest unit of the currency |\n|4 | id | [TransferId](./api-t-TransferId.md) | uint256 | The unique identifier of the transfer. Current implementation uses a counter but do not rely on this. |\n\n\n"
  },
  {
    "id": "ISoCashBankController",
    "title": "ISoCashBankController",
    "content": "## 📜 ISoCashBankController\n\nThe interface for the BankController service that enables a country referential to allow banks to have the capacity to control their own declaration in the referential.\n\nThe interface is used to set and unset the bank controller for a bank and check the current status of the controller. \n\nSeveral controllers can be set for a particular bank code.\n\n### Methods\n\n#### ⚙️ __isBankController__\nCheck if a wallet is a controller for a bank code\n\n```js\nfunction isBankController(bytes10 bankCode, address controller) view returns (bool)\n```\nThe function returns true if the wallet is a controller for the bank code, false otherwise.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | bankCode | [CodeType](./api-t-CodeType.md) | bytes10 | The bank code of the bank to check the controller for. |\n|2 | controller | address | address | The address of the wallet to check if it is a controller for the bank. |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | True if the wallet is a controller for the bank code, false otherwise. |\n\n\n#### ⚙️ __setBankController__\nSet the bank controller for a bank code\n\n```js\nfunction setBankController(bytes10 bankCode, address controller)\n```\nThe function is expected to emit the BankControllerSet event. \n\nOnly an allowed wallet for the country referential should be allowed to call this function.  \n\nNote that the wallet address can be the address of another smart contract that the bank is using to automate its declaration in the referential.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | bankCode | [CodeType](./api-t-CodeType.md) | bytes10 | The bank code of the bank the controller wallet is given access to. |\n|2 | controller | address | address | The address of the wallet that is given access to the bank. |\n\n\n#### ⚙️ __unsetBankController__\nUnset the bank controller for a bank code\n\n```js\nfunction unsetBankController(bytes10 bankCode, address controller)\n```\nThe function is expected to emit the BankControllerSet event. \n\nOnly an allowed wallet for the country referential should be allowed to call this function.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | bankCode | [CodeType](./api-t-CodeType.md) | bytes10 | The bank code of the bank the controller wallet is removed from. |\n|2 | controller | address | address | The address of the wallet that is removed from the bank. |\n\n\n"
  },
  {
    "id": "ISoCashBankControllerInternal",
    "title": "ISoCashBankControllerInternal",
    "content": "## 📜 ISoCashBankControllerInternal\n\nThe interface for defining the events emitted by the BankController facet\n\nThe interface is used to define the events emitted by the [ISoCashBankController](./api-ISoCashBankController) implementation\n\n### Events\n\n#### 📢 __BankControllerSet__\nEvent emitted when a bank controller is set or removed for a bank\n\n```js\nevent BankControllerSet(bytes10 indexed bankCode, address controller, bool indexed allowed)\n```\nThe event is emitted by `setBankController` and `unsetBankController` functions\n\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | bankCode | [CodeType](./api-t-CodeType.md) | bytes10 | The bank code of the bank the controller wallet is given access to. |\n|2 | controller | address | address | The address of the wallet that is given access to the bank. |\n|3 | allowed | bool | bool | True if the controller is now allowed to access the bank, false if the controller is now disallowed to access the bank. |\n\n\n"
  },
  {
    "id": "ISoCashBankExplainPlan",
    "title": "ISoCashBankExplainPlan",
    "content": "## 📜 ISoCashBankExplainPlan interface\n\nInterface for debugging the execution plan of a transfer\n\nThis interface exposes an event that is not a public api purpose but is usefull for debugging the execution plan \n\nAn `ExecutionPlan` structure indicates what action the bank module needs to do to execute a transfer. It is defined as follow:\n\n | Field          | Description                                                                                                              |\n |----------------|--------------------------------------------------------------------------------------------------------------------------|\n | `transferId`   | The unique identifier of the transfer                                                                                     |\n | `debitLocalAccount` | The account that should be debitted in the local bank module. Can be Zero.                                              |\n | `creditLocalAccount` | The account that should be credited in the local bank module. Can be Zero.                                              |\n | `payFromNostro` | The nostro account that should be used to pay the beneficiary directly. Zero if interbank transfer is needed.        |\n | `payViaBank`   | The correspondent bank via which the payment should be done. Zero not needed.                                           |\n | `payViaAccount` | The nostro account to use to credit the correspondent bank `payToAccount`                                              |\n | `payToAccount` | The account of the `payViaBank` that should be credited. Always present if `payViaAccount` is present.                 |\n \n\n  \n\nThe business logic for interpreting the plan is as follow: \n\n- If `debitLocalAccount` is not Zero, this account, that is local, is debitted \n\n- If `creditLocalAccount` is not Zero, this account, that is local, is credited \n\n- If `payFromNostro` is not Zero, the beneficiary is paid by a transfer from this nostro account. The bank instruct the transfer directly on its account. \n\n- If `payViaBank` is not Zero, then the bank relies on the correspondent bank to pay the beneficiary using the `interbankTransfer()` method. \n\n    - If the `creditLocalAccount` was credited, it was the account of th correspondent, to trigger the interbank transfer \n\n    - Else, the bank execute a transfer its `payViaAccount` account to the `payToAccount` of the correspondent and then trigger the interbank transfer.\n\n### Events\n\n#### 📢 __ExplainPlan__\nEvent emitted (optionally) when the bank performs a transfer.\n\n```js\nevent ExplainPlan(tuple(uint256 transferId, address debitLocalAccount, address creditLocalAccount, address payFromNostro, address payViaBank, tuple(uint8 model, address bank, address account) payViaAccount, tuple(uint8 model, address bank, address account) payToAccount) plan)\n```\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | plan | [ExecutionPlan](./api-t-ExecutionPlan.md) | tuple |  |\n\n\n"
  },
  {
    "id": "ISoCashBankExternal",
    "title": "ISoCashBankExternal",
    "content": "## 📜 ISoCashBankExternal interface \n\nInterface for external parties (clients, 3rd parties) to interact with the bank module\n\nThis interface exposes functions that relate to transfers and non transfer services. \n\nInherits from [ISoCashBankExternalWOTransfer](./api-ISoCashBankExternalWOTransfer) and [ISoCashBankExternalTransfer](./api-ISoCashBankExternalTransfer).\n\n### Events\n\n#### 📢 __AccountActivation__\nEvent emitted when an account is activated or deactivated\n\n```js\nevent AccountActivation(address indexed account, bool active)\n```\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | [ISoCashAccount](./api-t-ISoCashAccount.md) | address |  |\n|2 | active | bool | bool |  |\n\n\n#### 📢 __AccountRegistration__\nEvent emitted when an account is registered or unregistered\n\n```js\nevent AccountRegistration(address indexed account, bool registered)\n```\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | [ISoCashAccount](./api-t-ISoCashAccount.md) | address |  |\n|2 | registered | bool | bool |  |\n\n\n#### 📢 __Approval__\n```js\nevent Approval(address indexed owner, address indexed spender, uint256 value)\n```\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | owner | address | address |  |\n|2 | spender | address | address |  |\n|3 | value | uint256 | uint256 |  |\n\n\n#### 📢 __Transfer__\n```js\nevent Transfer(address indexed from, address indexed to, uint256 value)\n```\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | from | address | address |  |\n|2 | to | address | address |  |\n|3 | value | uint256 | uint256 |  |\n\n\n#### 📢 __TransferEx__\nEvent emitted when the balance of one or two accounts are updated\n\n```js\nevent TransferEx(address indexed from, address indexed to, uint256 value, uint256 indexed id)\n```\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | from | [ISoCashAccount](./api-t-ISoCashAccount.md) | address |  |\n|2 | to | [ISoCashAccount](./api-t-ISoCashAccount.md) | address |  |\n|3 | value | uint256 | uint256 |  |\n|4 | id | [TransferId](./api-t-TransferId.md) | uint256 |  |\n\n\n### Methods\n\n#### ⚙️ __accountNumberOf__\nget the account number for an account smart contract\n\n```js\nfunction accountNumberOf(address account) view returns (uint32)\n```\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | [ISoCashAccount](./api-t-ISoCashAccount.md) | address | The account to get the account number of |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | [AccountNumber](./api-t-AccountNumber.md) | uint32 | The account number of the account or zero if not found |\n\n\n#### ⚙️ __addressOf__\nget the account address for an account number\n\n```js\nfunction addressOf(uint32 accountNumber) view returns (address)\n```\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | accountNumber | [AccountNumber](./api-t-AccountNumber.md) | uint32 | The account number to get the account address of |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | [ISoCashAccount](./api-t-ISoCashAccount.md) | address | The account address of the account number or zero if not found |\n\n\n#### ⚙️ __addressOfFullAccount__\nget the account address for an account string as present in an IBAN\n\n```js\nfunction addressOfFullAccount(string account) view returns (address)\n```\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | string | string | The account part of the IBAN to get the account address of |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | [ISoCashAccount](./api-t-ISoCashAccount.md) | address | The account address of the account of zero if not found |\n\n\n#### ⚙️ __balanceOf__\n```js\nfunction balanceOf(address account) view returns (uint256)\n```\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | address | address |  |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | uint256 | uint256 |  |\n\n\n#### ⚙️ __bankIdentifier__\nGet the bank identifier of the bank\n\n```js\nfunction bankIdentifier() view returns (tuple(bytes2 country, bytes10[] codes) id)\n```\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | id | [BankIdentifier](./api-t-BankIdentifier.md) | tuple | The bank identifier of the bank |\n\n\n#### ⚙️ __bic__\nGet the BIC of the bank\n\n```js\nfunction bic() view returns (string)\n```\nThis is also returned by the `name()` method of the ERC20 compatibility\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | string | string | The BIC of the bank |\n\n\n#### ⚙️ __codes__\nGet the bankCode and branchCode of the bank\n\n```js\nfunction codes() view returns (bytes10 bankCode, bytes10 branchCode)\n```\nThis is deprecated and should be replaced by the `bankIdentifier()` method\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | bankCode | [CodeType](./api-t-CodeType.md) | bytes10 | The bankCode of the bank |\n|2 | branchCode | [CodeType](./api-t-CodeType.md) | bytes10 | The branchCode of the bank |\n\n\n#### ⚙️ __decimals__\n```js\nfunction decimals() view returns (uint8)\n```\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | uint8 | uint8 |  |\n\n\n#### ⚙️ __decodeIBAN__\nDecode an IBAN to get the bank and account\n\n```js\nfunction decodeIBAN(string iban) view returns (address bank, address account)\n```\nImplementation should return the bank and account that are represented by the IBAN \n\nThe implementation should try to decode the IBAN even when it is in another bank module, using the referential if needed\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | iban | string | string | The IBAN to decode |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | bank | [ISoCashBank](./api-t-ISoCashBank.md) | address | The bank that holds this account |\n|2 | account | [ISoCashAccount](./api-t-ISoCashAccount.md) | address | The account that is represented by the IBAN |\n\n\n#### ⚙️ __fullBalanceOf__\nGet the full balance of an account\n\n```js\nfunction fullBalanceOf(address account) view returns (int256)\n```\nThe full balance is the actual liability of the bank towards the account holder. It can be negative it the account is in overdraft. \n\nNote that the `balanceOf()` method of the ERC20 standard is also available in the bank module via the interface [IERC20Compatibility](./api-IERC20Compatibility).\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | [ISoCashAccount](./api-t-ISoCashAccount.md) | address | The account to get the full balance of |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | int256 | int256 | The full balance of the account |\n\n\n#### ⚙️ __ibanOf__\nGet the IBAN of the account\n\n```js\nfunction ibanOf(address account) view returns (string)\n```\nImplementation should return a valid IBAN that includes the bank codes and the account number.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | [ISoCashAccount](./api-t-ISoCashAccount.md) | address |  |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | string | string | The balance of the account |\n\n\n#### ⚙️ __lockFunds__\nFunction to lock a balance instructed by the account smart contract only\n\n```js\nfunction lockFunds(uint256 amount) returns (bool)\n```\nThe sender should be a registered account\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | amount | uint256 | uint256 | The amount to lock |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | true if the lock is successful, exception otherwise |\n\n\n#### ⚙️ __lockedBalanceOf__\nGet the locked balance of an account\n\n```js\nfunction lockedBalanceOf(address account) view returns (uint256)\n```\nThe locked balance is the amount that has been earmarked for specific transactions by the account owner (or the bank)\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | [ISoCashAccount](./api-t-ISoCashAccount.md) | address | The account to get the locked balance of |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | uint256 | uint256 | The locked balance of the account |\n\n\n#### ⚙️ __name__\nGet the name of the account\n\n```js\nfunction name() view returns (string)\n```\nGet the name of the account for developers\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | string | string | The name of the account |\n\n\n#### ⚙️ __symbol__\n```js\nfunction symbol() view returns (string)\n```\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | string | string |  |\n\n\n#### ⚙️ __totalSupply__\n```js\nfunction totalSupply() view returns (uint256)\n```\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | uint256 | uint256 |  |\n\n\n#### ⚙️ __transfer__\nTransfer funds from the caller account to a recipient account\n\n```js\nfunction transfer(tuple(address account, bytes11 bic, bytes32 iban) to, uint256 amount, string details) returns (bool)\n```\nThis method can only be called by a smart contract that is registered as an account in the bank module \n\nEvents Transfer and TransferEx are emitted\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | to | [RecipentInfo](./api-t-RecipentInfo.md) | tuple | The recipient account to transfer the funds to |\n|2 | amount | uint256 | uint256 | The amount of the transfer expressed in the smallest unit of the currency |\n|3 | details | string | string | The details of the transfer |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | true if the transfer is successful, false otherwise |\n\n\n#### ⚙️ __transferInfo__\nGet the record of the transfer with the given id\n\n```js\nfunction transferInfo(uint256 id) view returns (tuple(address sender, tuple(address account, bytes11 bic, bytes32 iban) recipient, uint256 valueTime, uint256 amount, uint8 status, string details, string reason))\n```\nThis method is used to get the information of a transfer \n\nThe `TransferInfo` structure is defined as follow:\n\n | Field          | Description                                                                                                              |\n |----------------|--------------------------------------------------------------------------------------------------------------------------|\n | `sender`       | The account that initiated the transfer                                                                                   |\n | `recipient`    | The recipient of the transfer                                                                                            |\n | `valueTime`    | The time to consider the interest calculation. The actual time of the transfer is the block timestamp defined by the TransferEx event |\n | `amount`       | The amount of the transfer expressed in the smallest unit of the currency                                                 |\n | `status`       | The status of the transfer and can be `NEW=0`, `STP=1`, `PENDING=2` (when stopped by the BO), `CANCELLED=3`, `PROCESSED=4`|\n | `details`      | The details of the transfer                                                                                              |\n | `reason`       | The reason of the status of the transfer when put in pending, cancelled or processed                                                                                 |\n\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | id | [TransferId](./api-t-TransferId.md) | uint256 | The unique identifier of the transfer |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | [TransferInfo](./api-t-TransferInfo.md) | tuple | The record of the transfer |\n\n\n#### ⚙️ __unlockFunds__\nFunction to unlock a balance instructed by the account smart contract only\n\n```js\nfunction unlockFunds(uint256 amount) returns (bool)\n```\nThe sender should be a registered account\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | amount | uint256 | uint256 | The amount to unlock |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | true if the unlock is successful, exception otherwise |\n\n\n#### ⚙️ __unlockedBalanceOf__\nGet the unlocked balance of an account\n\n```js\nfunction unlockedBalanceOf(address account) view returns (uint256)\n```\nThe unlocked balance is the amount that is immediatly available for the account owner to spend\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | [ISoCashAccount](./api-t-ISoCashAccount.md) | address | The account to get the unlocked balance of |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | uint256 | uint256 | The unlocked balance of the account |\n\n\n#### ⚙️ __version__\nGet the version of the implementation\n\n```js\nfunction version() view returns (string)\n```\nSemver syntax is expected.\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | string | string | \"1.0.0\" or \"2.0.0\" currently. The Diamond implementation starts at \"2.0.0\".  |\n\n\n"
  },
  {
    "id": "ISoCashBankExternalTransfer",
    "title": "ISoCashBankExternalTransfer",
    "content": "## 📜 ISoCashBankExternalTransfer interface \n\nInterface for transfer request by account smart contracts\n\nThis interface exposes a method to transfer funds from a caller account to a recipient account\n\n### Methods\n\n#### ⚙️ __transfer__\nTransfer funds from the caller account to a recipient account\n\n```js\nfunction transfer(tuple(address account, bytes11 bic, bytes32 iban) to, uint256 amount, string details) returns (bool)\n```\nThis method can only be called by a smart contract that is registered as an account in the bank module \n\nEvents Transfer and TransferEx are emitted\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | to | [RecipentInfo](./api-t-RecipentInfo.md) | tuple | The recipient account to transfer the funds to |\n|2 | amount | uint256 | uint256 | The amount of the transfer expressed in the smallest unit of the currency |\n|3 | details | string | string | The details of the transfer |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | true if the transfer is successful, false otherwise |\n\n\n"
  },
  {
    "id": "ISoCashBankExternalWOTransfer",
    "title": "ISoCashBankExternalWOTransfer",
    "content": "## 📜 ISoCashBankExternalWOTransfer interface \n\nInterface for external parties (clients, 3rd parties) to interact with the bank module, excluding transfer functions\n\nThis interface exposes functions that do not relate to transfers. These functions are in the [ISoCashBankExternalTransfer](./api-ISoCashBankExternalTransfer) or [ISoCashInterBank](./api-ISoCashInterBank) interfaces. \n\nInherits from [IERC20Compatibility](./api-IERC20Compatibility) and [ISoCashBankIdentity](./api-ISoCashBankIdentity) and [ISoCashBankBalanceManagement](./api-ISoCashBankBalanceManagement).\n\n### Events\n\n#### 📢 __AccountActivation__\nEvent emitted when an account is activated or deactivated\n\n```js\nevent AccountActivation(address indexed account, bool active)\n```\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | [ISoCashAccount](./api-t-ISoCashAccount.md) | address |  |\n|2 | active | bool | bool |  |\n\n\n#### 📢 __AccountRegistration__\nEvent emitted when an account is registered or unregistered\n\n```js\nevent AccountRegistration(address indexed account, bool registered)\n```\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | [ISoCashAccount](./api-t-ISoCashAccount.md) | address |  |\n|2 | registered | bool | bool |  |\n\n\n#### 📢 __Approval__\n```js\nevent Approval(address indexed owner, address indexed spender, uint256 value)\n```\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | owner | address | address |  |\n|2 | spender | address | address |  |\n|3 | value | uint256 | uint256 |  |\n\n\n#### 📢 __Transfer__\n```js\nevent Transfer(address indexed from, address indexed to, uint256 value)\n```\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | from | address | address |  |\n|2 | to | address | address |  |\n|3 | value | uint256 | uint256 |  |\n\n\n#### 📢 __TransferEx__\nEvent emitted when the balance of one or two accounts are updated\n\n```js\nevent TransferEx(address indexed from, address indexed to, uint256 value, uint256 indexed id)\n```\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | from | [ISoCashAccount](./api-t-ISoCashAccount.md) | address |  |\n|2 | to | [ISoCashAccount](./api-t-ISoCashAccount.md) | address |  |\n|3 | value | uint256 | uint256 |  |\n|4 | id | [TransferId](./api-t-TransferId.md) | uint256 |  |\n\n\n### Methods\n\n#### ⚙️ __accountNumberOf__\nget the account number for an account smart contract\n\n```js\nfunction accountNumberOf(address account) view returns (uint32)\n```\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | [ISoCashAccount](./api-t-ISoCashAccount.md) | address | The account to get the account number of |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | [AccountNumber](./api-t-AccountNumber.md) | uint32 | The account number of the account or zero if not found |\n\n\n#### ⚙️ __addressOf__\nget the account address for an account number\n\n```js\nfunction addressOf(uint32 accountNumber) view returns (address)\n```\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | accountNumber | [AccountNumber](./api-t-AccountNumber.md) | uint32 | The account number to get the account address of |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | [ISoCashAccount](./api-t-ISoCashAccount.md) | address | The account address of the account number or zero if not found |\n\n\n#### ⚙️ __addressOfFullAccount__\nget the account address for an account string as present in an IBAN\n\n```js\nfunction addressOfFullAccount(string account) view returns (address)\n```\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | string | string | The account part of the IBAN to get the account address of |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | [ISoCashAccount](./api-t-ISoCashAccount.md) | address | The account address of the account of zero if not found |\n\n\n#### ⚙️ __balanceOf__\n```js\nfunction balanceOf(address account) view returns (uint256)\n```\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | address | address |  |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | uint256 | uint256 |  |\n\n\n#### ⚙️ __bankIdentifier__\nGet the bank identifier of the bank\n\n```js\nfunction bankIdentifier() view returns (tuple(bytes2 country, bytes10[] codes) id)\n```\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | id | [BankIdentifier](./api-t-BankIdentifier.md) | tuple | The bank identifier of the bank |\n\n\n#### ⚙️ __bic__\nGet the BIC of the bank\n\n```js\nfunction bic() view returns (string)\n```\nThis is also returned by the `name()` method of the ERC20 compatibility\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | string | string | The BIC of the bank |\n\n\n#### ⚙️ __codes__\nGet the bankCode and branchCode of the bank\n\n```js\nfunction codes() view returns (bytes10 bankCode, bytes10 branchCode)\n```\nThis is deprecated and should be replaced by the `bankIdentifier()` method\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | bankCode | [CodeType](./api-t-CodeType.md) | bytes10 | The bankCode of the bank |\n|2 | branchCode | [CodeType](./api-t-CodeType.md) | bytes10 | The branchCode of the bank |\n\n\n#### ⚙️ __decimals__\n```js\nfunction decimals() view returns (uint8)\n```\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | uint8 | uint8 |  |\n\n\n#### ⚙️ __decodeIBAN__\nDecode an IBAN to get the bank and account\n\n```js\nfunction decodeIBAN(string iban) view returns (address bank, address account)\n```\nImplementation should return the bank and account that are represented by the IBAN \n\nThe implementation should try to decode the IBAN even when it is in another bank module, using the referential if needed\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | iban | string | string | The IBAN to decode |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | bank | [ISoCashBank](./api-t-ISoCashBank.md) | address | The bank that holds this account |\n|2 | account | [ISoCashAccount](./api-t-ISoCashAccount.md) | address | The account that is represented by the IBAN |\n\n\n#### ⚙️ __fullBalanceOf__\nGet the full balance of an account\n\n```js\nfunction fullBalanceOf(address account) view returns (int256)\n```\nThe full balance is the actual liability of the bank towards the account holder. It can be negative it the account is in overdraft. \n\nNote that the `balanceOf()` method of the ERC20 standard is also available in the bank module via the interface [IERC20Compatibility](./api-IERC20Compatibility).\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | [ISoCashAccount](./api-t-ISoCashAccount.md) | address | The account to get the full balance of |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | int256 | int256 | The full balance of the account |\n\n\n#### ⚙️ __ibanOf__\nGet the IBAN of the account\n\n```js\nfunction ibanOf(address account) view returns (string)\n```\nImplementation should return a valid IBAN that includes the bank codes and the account number.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | [ISoCashAccount](./api-t-ISoCashAccount.md) | address |  |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | string | string | The balance of the account |\n\n\n#### ⚙️ __lockFunds__\nFunction to lock a balance instructed by the account smart contract only\n\n```js\nfunction lockFunds(uint256 amount) returns (bool)\n```\nThe sender should be a registered account\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | amount | uint256 | uint256 | The amount to lock |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | true if the lock is successful, exception otherwise |\n\n\n#### ⚙️ __lockedBalanceOf__\nGet the locked balance of an account\n\n```js\nfunction lockedBalanceOf(address account) view returns (uint256)\n```\nThe locked balance is the amount that has been earmarked for specific transactions by the account owner (or the bank)\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | [ISoCashAccount](./api-t-ISoCashAccount.md) | address | The account to get the locked balance of |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | uint256 | uint256 | The locked balance of the account |\n\n\n#### ⚙️ __name__\nGet the name of the account\n\n```js\nfunction name() view returns (string)\n```\nGet the name of the account for developers\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | string | string | The name of the account |\n\n\n#### ⚙️ __symbol__\n```js\nfunction symbol() view returns (string)\n```\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | string | string |  |\n\n\n#### ⚙️ __totalSupply__\n```js\nfunction totalSupply() view returns (uint256)\n```\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | uint256 | uint256 |  |\n\n\n#### ⚙️ __transferInfo__\nGet the record of the transfer with the given id\n\n```js\nfunction transferInfo(uint256 id) view returns (tuple(address sender, tuple(address account, bytes11 bic, bytes32 iban) recipient, uint256 valueTime, uint256 amount, uint8 status, string details, string reason))\n```\nThis method is used to get the information of a transfer \n\nThe `TransferInfo` structure is defined as follow:\n\n | Field          | Description                                                                                                              |\n |----------------|--------------------------------------------------------------------------------------------------------------------------|\n | `sender`       | The account that initiated the transfer                                                                                   |\n | `recipient`    | The recipient of the transfer                                                                                            |\n | `valueTime`    | The time to consider the interest calculation. The actual time of the transfer is the block timestamp defined by the TransferEx event |\n | `amount`       | The amount of the transfer expressed in the smallest unit of the currency                                                 |\n | `status`       | The status of the transfer and can be `NEW=0`, `STP=1`, `PENDING=2` (when stopped by the BO), `CANCELLED=3`, `PROCESSED=4`|\n | `details`      | The details of the transfer                                                                                              |\n | `reason`       | The reason of the status of the transfer when put in pending, cancelled or processed                                                                                 |\n\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | id | [TransferId](./api-t-TransferId.md) | uint256 | The unique identifier of the transfer |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | [TransferInfo](./api-t-TransferInfo.md) | tuple | The record of the transfer |\n\n\n#### ⚙️ __unlockFunds__\nFunction to unlock a balance instructed by the account smart contract only\n\n```js\nfunction unlockFunds(uint256 amount) returns (bool)\n```\nThe sender should be a registered account\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | amount | uint256 | uint256 | The amount to unlock |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | true if the unlock is successful, exception otherwise |\n\n\n#### ⚙️ __unlockedBalanceOf__\nGet the unlocked balance of an account\n\n```js\nfunction unlockedBalanceOf(address account) view returns (uint256)\n```\nThe unlocked balance is the amount that is immediatly available for the account owner to spend\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | [ISoCashAccount](./api-t-ISoCashAccount.md) | address | The account to get the unlocked balance of |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | uint256 | uint256 | The unlocked balance of the account |\n\n\n#### ⚙️ __version__\nGet the version of the implementation\n\n```js\nfunction version() view returns (string)\n```\nSemver syntax is expected.\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | string | string | \"1.0.0\" or \"2.0.0\" currently. The Diamond implementation starts at \"2.0.0\".  |\n\n\n"
  },
  {
    "id": "ISoCashBankFull",
    "title": "ISoCashBankFull",
    "content": "## 📜 ISoCashBankFull interface\n\nInterface for the full bank module\n\nThis interface groups all the interfaces of the bank module [IWhitelistedSenders](./api-IWhitelistedSenders), [ISoCashBankExternal](./api-ISoCashBankExternal), [ISoCashInterBank](./api-ISoCashInterBank), [ISoCashBankBackOffice](./api-ISoCashBankBackOffice), \n\n and optionnally:  [ISoCashBankPaymentSimulation](./api-ISoCashBankPaymentSimulation), [ISoCashBankExplainPlan](./api-ISoCashBankExplainPlan) \n\n It also exposes the `owner()` method to get the owner of the bank module.\n\n### Events\n\n#### 📢 __AccountActivation__\nEvent emitted when an account is activated or deactivated\n\n```js\nevent AccountActivation(address indexed account, bool active)\n```\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | [ISoCashAccount](./api-t-ISoCashAccount.md) | address |  |\n|2 | active | bool | bool |  |\n\n\n#### 📢 __AccountRegistration__\nEvent emitted when an account is registered or unregistered\n\n```js\nevent AccountRegistration(address indexed account, bool registered)\n```\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | [ISoCashAccount](./api-t-ISoCashAccount.md) | address |  |\n|2 | registered | bool | bool |  |\n\n\n#### 📢 __Adviced__\nEvent emitted by a bank that receives a notification of debit/credit on an account it owns in another bank \n\n```js\nevent Adviced(address indexed target, address indexed account, uint256 amount, uint8 direction, uint256 indexed id)\n```\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | target | [ISoCashBank](./api-t-ISoCashBank.md) | address |  |\n|2 | account | [ISoCashAccount](./api-t-ISoCashAccount.md) | address |  |\n|3 | amount | uint256 | uint256 |  |\n|4 | direction | [OperationDirection](./api-t-OperationDirection.md) | uint8 |  |\n|5 | id | [TransferId](./api-t-TransferId.md) | uint256 |  |\n\n\n#### 📢 __Approval__\n```js\nevent Approval(address indexed owner, address indexed spender, uint256 value)\n```\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | owner | address | address |  |\n|2 | spender | address | address |  |\n|3 | value | uint256 | uint256 |  |\n\n\n#### 📢 __BankCreation__\nEvent emitted when the module is created\n\n```js\nevent BankCreation(address indexed bank, string bic, string currency)\n```\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | bank | [ISoCashBank](./api-t-ISoCashBank.md) | address |  |\n|2 | bic | string | string |  |\n|3 | currency | string | string |  |\n\n\n#### 📢 __BankRegistration__\nEvent emitted when the bank module is Registered\n\n```js\nevent BankRegistration(address indexed bank, bool registered)\n```\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | bank | [ISoCashBank](./api-t-ISoCashBank.md) | address |  |\n|2 | registered | bool | bool |  |\n\n\n#### 📢 __ExplainPlan__\nEvent emitted (optionally) when the bank performs a transfer.\n\n```js\nevent ExplainPlan(tuple(uint256 transferId, address debitLocalAccount, address creditLocalAccount, address payFromNostro, address payViaBank, tuple(uint8 model, address bank, address account) payViaAccount, tuple(uint8 model, address bank, address account) payToAccount) plan)\n```\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | plan | [ExecutionPlan](./api-t-ExecutionPlan.md) | tuple |  |\n\n\n#### 📢 __NostroAccountRegistration__\nEvent emitted when a nostro account is registered or unregistered\n\n```js\nevent NostroAccountRegistration(uint8 model, address indexed bank, address indexed account, bool registered)\n```\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | model | [BankModel](./api-t-BankModel.md) | uint8 |  |\n|2 | bank | address | address |  |\n|3 | account | address | address |  |\n|4 | registered | bool | bool |  |\n\n\n#### 📢 __Transfer__\n```js\nevent Transfer(address indexed from, address indexed to, uint256 value)\n```\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | from | address | address |  |\n|2 | to | address | address |  |\n|3 | value | uint256 | uint256 |  |\n\n\n#### 📢 __TransferEx__\nEvent emitted when the balance of one or two accounts are updated\n\n```js\nevent TransferEx(address indexed from, address indexed to, uint256 value, uint256 indexed id)\n```\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | from | [ISoCashAccount](./api-t-ISoCashAccount.md) | address |  |\n|2 | to | [ISoCashAccount](./api-t-ISoCashAccount.md) | address |  |\n|3 | value | uint256 | uint256 |  |\n|4 | id | [TransferId](./api-t-TransferId.md) | uint256 |  |\n\n\n#### 📢 __TransfertStateChanged__\nEvent emitted when the status of a transfer is `PENDING`, `CANCELLED` or `PROCESSED`\n\n```js\nevent TransfertStateChanged(uint256 indexed id, uint8 status)\n```\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | id | [TransferId](./api-t-TransferId.md) | uint256 |  |\n|2 | status | [TransferStatus](./api-t-TransferStatus.md) | uint8 |  |\n\n\n#### 📢 __Whitelisted__\nEmitted when a sender is whitelisted or blacklisted.\n\n```js\nevent Whitelisted(address indexed account, bool status)\n```\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | address | address |  |\n|2 | status | bool | bool |  |\n\n\n### Methods\n\n#### ⚙️ __accountNumberOf__\nget the account number for an account smart contract\n\n```js\nfunction accountNumberOf(address account) view returns (uint32)\n```\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | [ISoCashAccount](./api-t-ISoCashAccount.md) | address | The account to get the account number of |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | [AccountNumber](./api-t-AccountNumber.md) | uint32 | The account number of the account or zero if not found |\n\n\n#### ⚙️ __addressOf__\nget the account address for an account number\n\n```js\nfunction addressOf(uint32 accountNumber) view returns (address)\n```\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | accountNumber | [AccountNumber](./api-t-AccountNumber.md) | uint32 | The account number to get the account address of |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | [ISoCashAccount](./api-t-ISoCashAccount.md) | address | The account address of the account number or zero if not found |\n\n\n#### ⚙️ __addressOfFullAccount__\nget the account address for an account string as present in an IBAN\n\n```js\nfunction addressOfFullAccount(string account) view returns (address)\n```\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | string | string | The account part of the IBAN to get the account address of |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | [ISoCashAccount](./api-t-ISoCashAccount.md) | address | The account address of the account of zero if not found |\n\n\n#### ⚙️ __advice__\nThe executing bank receives an advice from the calling bank that its account has been debitted or credited\n\n```js\nfunction advice(uint256 amount, uint8 direction, uint256 id) returns (bool)\n```\nThe calling bank should be a correspondent of the executing bank. \n\nThe executing bank will check that it has an account with the calling bank, check that the copy of the balance it has match with the difference of the advice amount and update the copy of its balance.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | amount | uint256 | uint256 | The amount of the advice (always positive) |\n|2 | direction | [OperationDirection](./api-t-OperationDirection.md) | uint8 | The direction of the advice, `DEBIT=0` or `CREDIT=1` |\n|3 | id | [TransferId](./api-t-TransferId.md) | uint256 | The unique identifier of the transfer related to the advice in the calling bank |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | true if the advice is successful, false or fail otherwise |\n\n\n#### ⚙️ __balanceOf__\n```js\nfunction balanceOf(address account) view returns (uint256)\n```\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | address | address |  |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | uint256 | uint256 |  |\n\n\n#### ⚙️ __bankIdentifier__\nGet the bank identifier of the bank\n\n```js\nfunction bankIdentifier() view returns (tuple(bytes2 country, bytes10[] codes) id)\n```\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | id | [BankIdentifier](./api-t-BankIdentifier.md) | tuple | The bank identifier of the bank |\n\n\n#### ⚙️ __bic__\nGet the BIC of the bank\n\n```js\nfunction bic() view returns (string)\n```\nThis is also returned by the `name()` method of the ERC20 compatibility\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | string | string | The BIC of the bank |\n\n\n#### ⚙️ __blacklist__\nRemove sender from the whitelist.\n\n```js\nfunction blacklist(address oldSender)\n```\nOnly an other whitelisted sender (or the owner, or the targetted sender) can blacklist a sender.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | oldSender | address | address | The address of the sender to remove. |\n\n\n#### ⚙️ __codes__\nGet the bankCode and branchCode of the bank\n\n```js\nfunction codes() view returns (bytes10 bankCode, bytes10 branchCode)\n```\nThis is deprecated and should be replaced by the `bankIdentifier()` method\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | bankCode | [CodeType](./api-t-CodeType.md) | bytes10 | The bankCode of the bank |\n|2 | branchCode | [CodeType](./api-t-CodeType.md) | bytes10 | The branchCode of the bank |\n\n\n#### ⚙️ __correspondent__\nGet the correspondent bank identifier of a correspondent bank module\n\n```js\nfunction correspondent(address correspondent) view returns (tuple(bytes2 country, bytes10[] codes) cb)\n```\nThis method is used to get the correspondent bank identifier of a correspondent bank module\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | correspondent | [ISoCashBank](./api-t-ISoCashBank.md) | address | The correspondent bank module |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | cb | [BankIdentifier](./api-t-BankIdentifier.md) | tuple | The correspondent bank identifier of the correspondent bank module |\n\n\n#### ⚙️ __credit__\nCredit the account with new funds coming from money received in bank nostro or from a loan or equivalent\n\n```js\nfunction credit(address account, uint256 amount, string details) returns (bool)\n```\nAccounting wise, the account is only a liability side, so when recording a credit, the bank should record a debit in an asset account. Such asset account can be a nostro account, held on-chain or outside the blockchain, or can be against the recognition of money that the client owes to the banks (payable, loan, ...). \n\nOnly whitelisted back office wallets can call this method.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | [ISoCashAccount](./api-t-ISoCashAccount.md) | address | The account to credit |\n|2 | amount | uint256 | uint256 | The amount to credit |\n|3 | details | string | string | The details of the credit |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | true if the credit is successful, false or fail otherwise |\n\n\n#### ⚙️ __debit__\nDebit the account reducing the liability to the client against an asset of the bank\n\n```js\nfunction debit(address account, uint256 amount, string details) returns (bool)\n```\nAccounting wise, the account is only a liability side, so when recording a debit, the bank should record a credit in an asset account. Such asset account can be a nostro account, held on-chain or outside the blockchain, or can be against the recognition of money that the client owes to the banks (payable, loan, ...). \n\nOnly whitelisted back office wallets can call this method.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | [ISoCashAccount](./api-t-ISoCashAccount.md) | address | The account to debit |\n|2 | amount | uint256 | uint256 | The amount to debit |\n|3 | details | string | string | The details of the debit |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | true if the debit is successful, false or fail otherwise |\n\n\n#### ⚙️ __decidePendingTransfer__\nInstruct the bank module to proceed with a pending transfer or to cancel it\n\n```js\nfunction decidePendingTransfer(uint256 id, uint8 status, string reason) returns (bool)\n```\nThis method requires that the caller is whitelisted\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | id | [TransferId](./api-t-TransferId.md) | uint256 | The unique identifier of the transfer |\n|2 | status | [TransferStatus](./api-t-TransferStatus.md) | uint8 | The status of the transfer, `CANCELLED=3`, `PROCESSED=4` |\n|3 | reason | string | string | The reason of the status of the transfer when put in pending, cancelled or processed |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | true if the decision is successful, false or fail otherwise |\n\n\n#### ⚙️ __decimals__\n```js\nfunction decimals() view returns (uint8)\n```\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | uint8 | uint8 |  |\n\n\n#### ⚙️ __decodeIBAN__\nDecode an IBAN to get the bank and account\n\n```js\nfunction decodeIBAN(string iban) view returns (address bank, address account)\n```\nImplementation should return the bank and account that are represented by the IBAN \n\nThe implementation should try to decode the IBAN even when it is in another bank module, using the referential if needed\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | iban | string | string | The IBAN to decode |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | bank | [ISoCashBank](./api-t-ISoCashBank.md) | address | The bank that holds this account |\n|2 | account | [ISoCashAccount](./api-t-ISoCashAccount.md) | address | The account that is represented by the IBAN |\n\n\n#### ⚙️ __fullBalanceOf__\nGet the full balance of an account\n\n```js\nfunction fullBalanceOf(address account) view returns (int256)\n```\nThe full balance is the actual liability of the bank towards the account holder. It can be negative it the account is in overdraft. \n\nNote that the `balanceOf()` method of the ERC20 standard is also available in the bank module via the interface [IERC20Compatibility](./api-IERC20Compatibility).\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | [ISoCashAccount](./api-t-ISoCashAccount.md) | address | The account to get the full balance of |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | int256 | int256 | The full balance of the account |\n\n\n#### ⚙️ __getNostroBalance__\nGet the actual balance of a nostro account and the last copy in the bank module\n\n```js\nfunction getNostroBalance(address bank, address account) view returns (int256 actual, int256 last)\n```\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | bank | address | address | The bank that holds the nostro account |\n|2 | account | address | address | The address of the account balance |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | actual | int256 | int256 | The actual balance of the account in the bank that holds the account |\n|2 | last | int256 | int256 | The last copy of the balance of the account in this bank module |\n\n\n#### ⚙️ __ibanOf__\nGet the IBAN of the account\n\n```js\nfunction ibanOf(address account) view returns (string)\n```\nImplementation should return a valid IBAN that includes the bank codes and the account number.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | [ISoCashAccount](./api-t-ISoCashAccount.md) | address |  |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | string | string | The balance of the account |\n\n\n#### ⚙️ __interbankNetting__\nSpecial function to request the executing bank to agree on a netting between accounts they hold with each other\n\n```js\nfunction interbankNetting(uint256 amount, uint256 id) returns (bool)\n```\nThe calling bank should be a correspondent of the executing bank. \n\nThe executing bank will need to check that its account has been reduced by the amount before performing the reduction of the caller account.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | amount | uint256 | uint256 | The amount of the netting expressed in the smallest unit of the currency |\n|2 | id | [TransferId](./api-t-TransferId.md) | uint256 | The unique identifier of the netting in the calling bank |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | true if the netting is successful, false or fail otherwise |\n\n\n#### ⚙️ __interbankTransfer__\nThe calling bank requests the executing bank to transfer funds to a recipient account.\n\n```js\nfunction interbankTransfer(tuple(uint8 model, address bank, address account) ssi, tuple(address account, bytes11 bic, bytes32 iban) to, uint256 amount, uint256 id) returns (bool)\n```\nThe calling bank should be a correspondent of the executing bank. \n\nThe executing bank will need to check that it has been paid in the `ssi` account before performing the transfer. To do this several methods are possible: \n\n- Keeping a record of the last balance of that account in the state of the bank module so to compare it with the actual balance \n\n- Other means to be determined\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ssi | [BankAccount](./api-t-BankAccount.md) | tuple | The SSI of the executing bank where the same amount should have been paid |\n|2 | to | [RecipentInfo](./api-t-RecipentInfo.md) | tuple | The recipient account to transfer the funds to |\n|3 | amount | uint256 | uint256 | The amount of the transfer expressed in the smallest unit of the currency |\n|4 | id | [TransferId](./api-t-TransferId.md) | uint256 | The unique identifier of the transfer in the calling bank |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | true if the transfer is successful, false or fail otherwise |\n\n\n#### ⚙️ __isAccountActive__\nTest if an account is active\n\n```js\nfunction isAccountActive(address account) view returns (bool)\n```\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | [ISoCashAccount](./api-t-ISoCashAccount.md) | address | The account to test |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | true if the account is active, false otherwise |\n\n\n#### ⚙️ __isAccountRegistered__\nTest if an account is registered as an account of the bank module\n\n```js\nfunction isAccountRegistered(address account) view returns (bool)\n```\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | [ISoCashAccount](./api-t-ISoCashAccount.md) | address | The account to test |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | true if the account is registered, false otherwise |\n\n\n#### ⚙️ __isCorrespondentRegistered__\nTest if the bank module is a correspondent of this bank module\n\n```js\nfunction isCorrespondentRegistered(address correspondent) view returns (bool)\n```\nimplemented normally via the referential but can be overriden\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | correspondent | [ISoCashBank](./api-t-ISoCashBank.md) | address | The bank module to test |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | true if the bank module is a correspondent, false otherwise |\n\n\n#### ⚙️ __isWhitelisted__\nCheck if a sender is whitelisted.\n\n```js\nfunction isWhitelisted(address sender) view returns (bool)\n```\nNo control of caller is done in this function.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | sender | address | address | The address of the sender. |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | true if the sender is whitelisted or the owner, false otherwise. |\n\n\n#### ⚙️ __lockFunds__\nLocks some funds of the client\n\n```js\nfunction lockFunds(address account, uint256 amount) returns (bool)\n```\nThe locked funds are not usable by the client for spending but are still part of the full balance of the account \n\nNote that this function is not to be confused with the `lockFunds(amount)` method of the [ISoCashBankExternalWOTransfer](./api-ISoCashBankExternalWOTransfer) interface. \n\nOnly whitelisted back office wallets can call this method.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | [ISoCashAccount](./api-t-ISoCashAccount.md) | address | The account to lock the funds of |\n|2 | amount | uint256 | uint256 | The amount to lock |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | true if the lock is successful, false or fail otherwise |\n\n\n#### ⚙️ __lockFunds__\nFunction to lock a balance instructed by the account smart contract only\n\n```js\nfunction lockFunds(uint256 amount) returns (bool)\n```\nThe sender should be a registered account\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | amount | uint256 | uint256 | The amount to lock |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | true if the lock is successful, exception otherwise |\n\n\n#### ⚙️ __lockedBalanceOf__\nGet the locked balance of an account\n\n```js\nfunction lockedBalanceOf(address account) view returns (uint256)\n```\nThe locked balance is the amount that has been earmarked for specific transactions by the account owner (or the bank)\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | [ISoCashAccount](./api-t-ISoCashAccount.md) | address | The account to get the locked balance of |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | uint256 | uint256 | The locked balance of the account |\n\n\n#### ⚙️ __name__\nGet the name of the account\n\n```js\nfunction name() view returns (string)\n```\nGet the name of the account for developers\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | string | string | The name of the account |\n\n\n#### ⚙️ __nostroAccountModel__\nGet the model of a nostro account\n\n```js\nfunction nostroAccountModel(address bank, address account) view returns (uint8)\n```\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | bank | address | address | The bank that holds the nostro account |\n|2 | account | address | address | The address of the account balance |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | [BankModel](./api-t-BankModel.md) | uint8 | The model of the nostro account : `UNDEFINED=0`, `SO_CASH=1`, `ERC20=2` |\n\n\n#### ⚙️ __owner__\n```js\nfunction owner() view returns (address)\n```\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | address | address |  |\n\n\n#### ⚙️ __registerAccount__\nRegister an account smart contract as an account of the bank module\n\n```js\nfunction registerAccount(address account) returns (bool)\n```\nOnly whitelisted back office wallets can call this method. \n\nThe bank module should have been given ownership of the account smart contract before the call (`transferOwnership()`). \n\nClient can provide their own smart contract to the bank to be registered as an account as long as it respects the bank requirements.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | [ISoCashAccount](./api-t-ISoCashAccount.md) | address | The account to register |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | true if the account is registered, false otherwise |\n\n\n#### ⚙️ __registerNostroAccount__\nRegister a nostro account\n\n```js\nfunction registerNostroAccount(tuple(uint8 model, address bank, address account) nostro) returns (bool)\n```\nOnly whitelisted back office wallets can call this method. \n\nA nostro account is either a so|cash account or an ERC20 token account that holds the balance of the bank module in another bank module.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | nostro | [BankAccount](./api-t-BankAccount.md) | tuple | The nostro account to register |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | true if the account is registered, false otherwise |\n\n\n#### ⚙️ __requestNetting__\nrequest another bank that holds a nostro account to operate a netting\n\n```js\nfunction requestNetting(address correspondent, address loro, uint256 amount) returns (bool)\n```\nThis method requires that the caller is whitelisted\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | correspondent | [ISoCashBank](./api-t-ISoCashBank.md) | address | The bank module that holds the nostro account |\n|2 | loro | [ISoCashAccount](./api-t-ISoCashAccount.md) | address | The account of the correspondent with the caller bank where the netting should be operated |\n|3 | amount | uint256 | uint256 | The amount of the netting expressed in the smallest unit of the currency |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | true if the netting is successful, false or fail otherwise |\n\n\n#### ⚙️ __simulateInterbankTransfer__\nSimulate the processing of a transfer instruction received from antoher bank module\n\n```js\nfunction simulateInterbankTransfer(address fromBank, tuple(address account, bytes11 bic, bytes32 iban) to, uint256 amount) view returns (tuple(uint256 transferId, address debitLocalAccount, address creditLocalAccount, address payFromNostro, address payViaBank, tuple(uint8 model, address bank, address account) payViaAccount, tuple(uint8 model, address bank, address account) payToAccount))\n```\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | fromBank | [ISoCashBank](./api-t-ISoCashBank.md) | address | The bank module sending the transfer instruction |\n|2 | to | [RecipentInfo](./api-t-RecipentInfo.md) | tuple | The recipient of the transfer |\n|3 | amount | uint256 | uint256 | The amount of the transfer expressed in the smallest unit of the currency |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | [ExecutionPlan](./api-t-ExecutionPlan.md) | tuple | The execution plan of the transfer |\n\n\n#### ⚙️ __simulateTransfer__\nSimulate a transfer from an account in this bank module to a recipient\n\n```js\nfunction simulateTransfer(address fromAccount, tuple(address account, bytes11 bic, bytes32 iban) to, uint256 amount) view returns (tuple(uint256 transferId, address debitLocalAccount, address creditLocalAccount, address payFromNostro, address payViaBank, tuple(uint8 model, address bank, address account) payViaAccount, tuple(uint8 model, address bank, address account) payToAccount))\n```\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | fromAccount | [ISoCashAccount](./api-t-ISoCashAccount.md) | address | The account to transfer the funds from |\n|2 | to | [RecipentInfo](./api-t-RecipentInfo.md) | tuple | The recipient of the transfer |\n|3 | amount | uint256 | uint256 | The amount of the transfer expressed in the smallest unit of the currency |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | [ExecutionPlan](./api-t-ExecutionPlan.md) | tuple | The execution plan of the transfer |\n\n\n#### ⚙️ __symbol__\n```js\nfunction symbol() view returns (string)\n```\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | string | string |  |\n\n\n#### ⚙️ __synchroNostro__\nForces the update of the copy of a nostro balance in the bank module\n\n```js\nfunction synchroNostro(address bank, address account) returns (bool)\n```\nThis method requires that the caller is whitelisted \n\nThe nostro account can be a so|cash account or an ERC20 token account\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | bank | address | address | The bank that holds the nostro account or the address of the ERC20 token |\n|2 | account | address | address | The address of the account balance |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | true if the update is successful, false or fail otherwise |\n\n\n#### ⚙️ __toggleAccountActive__\nActivate or deactivate an account\n\n```js\nfunction toggleAccountActive(address account) returns (bool)\n```\nOnly whitelisted back office wallets can call this method.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | [ISoCashAccount](./api-t-ISoCashAccount.md) | address | The account to activate or deactivate |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | true if the account is now active and false if it is now deactivated |\n\n\n#### ⚙️ __totalSupply__\n```js\nfunction totalSupply() view returns (uint256)\n```\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | uint256 | uint256 |  |\n\n\n#### ⚙️ __transfer__\nTransfer funds from the caller account to a recipient account\n\n```js\nfunction transfer(tuple(address account, bytes11 bic, bytes32 iban) to, uint256 amount, string details) returns (bool)\n```\nThis method can only be called by a smart contract that is registered as an account in the bank module \n\nEvents Transfer and TransferEx are emitted\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | to | [RecipentInfo](./api-t-RecipentInfo.md) | tuple | The recipient account to transfer the funds to |\n|2 | amount | uint256 | uint256 | The amount of the transfer expressed in the smallest unit of the currency |\n|3 | details | string | string | The details of the transfer |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | true if the transfer is successful, false otherwise |\n\n\n#### ⚙️ __transferFrom__\nInitiate a transfer from the back office side on behalf of a client\n\n```js\nfunction transferFrom(address from, tuple(address account, bytes11 bic, bytes32 iban) to, uint256 amount, string details) returns (bool)\n```\nThis method requires that the caller is whitelisted\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | from | [ISoCashAccount](./api-t-ISoCashAccount.md) | address | The account to transfer the funds from |\n|2 | to | [RecipentInfo](./api-t-RecipentInfo.md) | tuple | The recipient account to transfer the funds to |\n|3 | amount | uint256 | uint256 | The amount of the transfer expressed in the smallest unit of the currency |\n|4 | details | string | string | The details of the transfer |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | true if the transfer is successful, false or fail otherwise |\n\n\n#### ⚙️ __transferInfo__\nGet the record of the transfer with the given id\n\n```js\nfunction transferInfo(uint256 id) view returns (tuple(address sender, tuple(address account, bytes11 bic, bytes32 iban) recipient, uint256 valueTime, uint256 amount, uint8 status, string details, string reason))\n```\nThis method is used to get the information of a transfer \n\nThe `TransferInfo` structure is defined as follow:\n\n | Field          | Description                                                                                                              |\n |----------------|--------------------------------------------------------------------------------------------------------------------------|\n | `sender`       | The account that initiated the transfer                                                                                   |\n | `recipient`    | The recipient of the transfer                                                                                            |\n | `valueTime`    | The time to consider the interest calculation. The actual time of the transfer is the block timestamp defined by the TransferEx event |\n | `amount`       | The amount of the transfer expressed in the smallest unit of the currency                                                 |\n | `status`       | The status of the transfer and can be `NEW=0`, `STP=1`, `PENDING=2` (when stopped by the BO), `CANCELLED=3`, `PROCESSED=4`|\n | `details`      | The details of the transfer                                                                                              |\n | `reason`       | The reason of the status of the transfer when put in pending, cancelled or processed                                                                                 |\n\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | id | [TransferId](./api-t-TransferId.md) | uint256 | The unique identifier of the transfer |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | [TransferInfo](./api-t-TransferInfo.md) | tuple | The record of the transfer |\n\n\n#### ⚙️ __unlockFunds__\nFunction to unlock a balance instructed by the account smart contract only\n\n```js\nfunction unlockFunds(uint256 amount) returns (bool)\n```\nThe sender should be a registered account\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | amount | uint256 | uint256 | The amount to unlock |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | true if the unlock is successful, exception otherwise |\n\n\n#### ⚙️ __unlockFunds__\nUnlocks some funds of the client\n\n```js\nfunction unlockFunds(address account, uint256 amount) returns (bool)\n```\nThe unlocked funds are usable by the client for spending and are part of the full balance of the account \n\nNote that this function is not to be confused with the `unlockFunds(amount)` method of the [ISoCashBankExternalWOTransfer](./api-ISoCashBankExternalWOTransfer) interface. \n\nNote that this function can unlock funds locked by the client via the HTLC protocol. \n\nOnly whitelisted back office wallets can call this method.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | [ISoCashAccount](./api-t-ISoCashAccount.md) | address | The account to unlock the funds of |\n|2 | amount | uint256 | uint256 | The amount to unlock |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | true if the unlock is successful, false or fail otherwise |\n\n\n#### ⚙️ __unlockedBalanceOf__\nGet the unlocked balance of an account\n\n```js\nfunction unlockedBalanceOf(address account) view returns (uint256)\n```\nThe unlocked balance is the amount that is immediatly available for the account owner to spend\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | [ISoCashAccount](./api-t-ISoCashAccount.md) | address | The account to get the unlocked balance of |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | uint256 | uint256 | The unlocked balance of the account |\n\n\n#### ⚙️ __unregisterAccount__\nUnregister an account smart contract as an account of the bank module\n\n```js\nfunction unregisterAccount(address account) returns (bool)\n```\nOnly whitelisted back office wallets can call this method. \n\nThe bank module should transfer the ownership to the caller wallet during the execution so that the back office can return the ownership to the client.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | [ISoCashAccount](./api-t-ISoCashAccount.md) | address | The account to unregister |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | true if the account is unregistered, false otherwise |\n\n\n#### ⚙️ __unregisterNostroAccount__\nUnregister a nostro account\n\n```js\nfunction unregisterNostroAccount(address bank, address account) returns (bool)\n```\nOnly whitelisted back office wallets can call this method. \n\nThere is currently only one nostro account per bank module but the interface allows for multiple accounts.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | bank | address | address | The bank that holds the nostro account |\n|2 | account | address | address | The address of the account balance |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | true if the account is unregistered, false otherwise |\n\n\n#### ⚙️ __version__\nGet the version of the implementation\n\n```js\nfunction version() view returns (string)\n```\nSemver syntax is expected.\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | string | string | \"1.0.0\" or \"2.0.0\" currently. The Diamond implementation starts at \"2.0.0\".  |\n\n\n#### ⚙️ __whitelist__\nWhitelist a sender.\n\n```js\nfunction whitelist(address newSender)\n```\nOnly an other whitelisted sender (or the owner) can whitelist a new sender.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | newSender | address | address | The address of the sender. |\n\n\n"
  },
  {
    "id": "ISoCashBankIdentity",
    "title": "ISoCashBankIdentity",
    "content": "## 📜 ISoCashBankIdentity interface \n\nInterface to get the identity of a bank module\n\nThis interface exposes read only methods to get the identity of a bank module\n\n### Methods\n\n#### ⚙️ __bankIdentifier__\nGet the bank identifier of the bank\n\n```js\nfunction bankIdentifier() view returns (tuple(bytes2 country, bytes10[] codes) id)\n```\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | id | [BankIdentifier](./api-t-BankIdentifier.md) | tuple | The bank identifier of the bank |\n\n\n#### ⚙️ __bic__\nGet the BIC of the bank\n\n```js\nfunction bic() view returns (string)\n```\nThis is also returned by the `name()` method of the ERC20 compatibility\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | string | string | The BIC of the bank |\n\n\n#### ⚙️ __codes__\nGet the bankCode and branchCode of the bank\n\n```js\nfunction codes() view returns (bytes10 bankCode, bytes10 branchCode)\n```\nThis is deprecated and should be replaced by the `bankIdentifier()` method\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | bankCode | [CodeType](./api-t-CodeType.md) | bytes10 | The bankCode of the bank |\n|2 | branchCode | [CodeType](./api-t-CodeType.md) | bytes10 | The branchCode of the bank |\n\n\n#### ⚙️ __version__\nGet the version of the implementation\n\n```js\nfunction version() view returns (string)\n```\nSemver syntax is expected.\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | string | string | \"1.0.0\" or \"2.0.0\" currently. The Diamond implementation starts at \"2.0.0\".  |\n\n\n"
  },
  {
    "id": "ISoCashBankNostroManagementInternal",
    "title": "ISoCashBankNostroManagementInternal",
    "content": "## 📜 ISoCashBankNostroManagementInternal interface\n\nInterface for exposing events related to the management of nostro accounts\n\n### Events\n\n#### 📢 __NostroAccountRegistration__\nEvent emitted when a nostro account is registered or unregistered\n\n```js\nevent NostroAccountRegistration(uint8 model, address indexed bank, address indexed account, bool registered)\n```\nThis event is emitted when the back office calls the `registerNostroAccount()` or `unregisterNostroAccount()` methods\n\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | model | [BankModel](./api-t-BankModel.md) | uint8 | The model of the nostro account, `UNDEFINED=0`, `SO_CASH=1`, `ERC20=2` |\n|2 | bank | address | address | The bank that holds the nostro account, or the address of the ERC20 token |\n|3 | account | address | address | The address of the account balance (either a so|cash account or an ERC20 address that holds the balance) |\n|4 | registered | bool | bool | True if the account is registered, false if it is unregistered |\n\n\n"
  },
  {
    "id": "ISoCashBankPaymentInternal",
    "title": "ISoCashBankPaymentInternal",
    "content": "## 📜 ISoCashBankPaymentInternal interface \n\nInterface for exposing events related to interbank payments \n\n### Events\n\n#### 📢 __Adviced__\nEvent emitted by a bank that receives a notification of debit/credit on an account it owns in another bank \n\n```js\nevent Adviced(address indexed target, address indexed account, uint256 amount, uint8 direction, uint256 indexed id)\n```\nThis notification is done via the `advice()` method in the [ISoCashInterBank](./api-ISoCashInterBank) interface\n\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | target | [ISoCashBank](./api-t-ISoCashBank.md) | address | The bank that receives the advice, always the bank that emits the event |\n|2 | account | [ISoCashAccount](./api-t-ISoCashAccount.md) | address | The account that is debitted or credited in the other bank |\n|3 | amount | uint256 | uint256 | The amount of the advice (always positive) |\n|4 | direction | [OperationDirection](./api-t-OperationDirection.md) | uint8 | The direction of the advice, `DEBIT=0` or `CREDIT=1` |\n|5 | id | [TransferId](./api-t-TransferId.md) | uint256 | The unique identifier of the transfer related to the advice in the calling bank |\n\n\n"
  },
  {
    "id": "ISoCashBankPaymentSimulation",
    "title": "ISoCashBankPaymentSimulation",
    "content": "## 📜 ISoCashBankPaymentSimulation interface\n\nInterface for simulating the execution plan of a transfer\n\nThis interface exposes methods to simulate the execution plan of a transfer. Its implementation is not mandatory and discourage in production environment.\n\n### Methods\n\n#### ⚙️ __simulateInterbankTransfer__\nSimulate the processing of a transfer instruction received from antoher bank module\n\n```js\nfunction simulateInterbankTransfer(address fromBank, tuple(address account, bytes11 bic, bytes32 iban) to, uint256 amount) view returns (tuple(uint256 transferId, address debitLocalAccount, address creditLocalAccount, address payFromNostro, address payViaBank, tuple(uint8 model, address bank, address account) payViaAccount, tuple(uint8 model, address bank, address account) payToAccount))\n```\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | fromBank | [ISoCashBank](./api-t-ISoCashBank.md) | address | The bank module sending the transfer instruction |\n|2 | to | [RecipentInfo](./api-t-RecipentInfo.md) | tuple | The recipient of the transfer |\n|3 | amount | uint256 | uint256 | The amount of the transfer expressed in the smallest unit of the currency |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | [ExecutionPlan](./api-t-ExecutionPlan.md) | tuple | The execution plan of the transfer |\n\n\n#### ⚙️ __simulateTransfer__\nSimulate a transfer from an account in this bank module to a recipient\n\n```js\nfunction simulateTransfer(address fromAccount, tuple(address account, bytes11 bic, bytes32 iban) to, uint256 amount) view returns (tuple(uint256 transferId, address debitLocalAccount, address creditLocalAccount, address payFromNostro, address payViaBank, tuple(uint8 model, address bank, address account) payViaAccount, tuple(uint8 model, address bank, address account) payToAccount))\n```\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | fromAccount | [ISoCashAccount](./api-t-ISoCashAccount.md) | address | The account to transfer the funds from |\n|2 | to | [RecipentInfo](./api-t-RecipentInfo.md) | tuple | The recipient of the transfer |\n|3 | amount | uint256 | uint256 | The amount of the transfer expressed in the smallest unit of the currency |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | [ExecutionPlan](./api-t-ExecutionPlan.md) | tuple | The execution plan of the transfer |\n\n\n"
  },
  {
    "id": "ISoCashBankTransferManagementInternal",
    "title": "ISoCashBankTransferManagementInternal",
    "content": "## 📜 ISoCashBankTransferManagementInternal interface \n\nInterface for exposing events related to the management of transfers that require manual intervention\n\n### Events\n\n#### 📢 __TransfertStateChanged__\nEvent emitted when the status of a transfer is `PENDING`, `CANCELLED` or `PROCESSED`\n\n```js\nevent TransfertStateChanged(uint256 indexed id, uint8 status)\n```\nThis event is emitted when the bank module decides to put a transfer in pending, and then when the back office decides to cancel or process it\n\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | id | [TransferId](./api-t-TransferId.md) | uint256 | The unique identifier of the transfer to retrieve the informations |\n|2 | status | [TransferStatus](./api-t-TransferStatus.md) | uint8 | The status of the transfer, `PENDING=2`, `CANCELLED=3`, `PROCESSED=4` |\n\n\n"
  },
  {
    "id": "ISoCashCountryManager",
    "title": "ISoCashCountryManager",
    "content": "## 📜 ISoCashCountryManager\n\nThe interface for the CountryManager facet\n\nThe interface is used to get and set the country contract in the referential\n\n### Methods\n\n#### ⚙️ __getCountry__\nGet the country contract from the referential\n\n```js\nfunction getCountry(bytes2 country) view returns (address contractAddress)\n```\nThe function returns the country contract address for the given country code or ZeroAddress if the country is not in the referential.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | country | bytes2 | bytes2 | The ISO country code as a Ascii encoded bytes2. Typically you send `0x4652` for FR. |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | contractAddress | [ISoCashCountryReferential](./api-t-ISoCashCountryReferential.md) | address | The country contract address for the given country code or ZeroAddress if the country is not in the referential. |\n\n\n#### ⚙️ __setCountry__\nSet the country contract in the referential\n\n```js\nfunction setCountry(address countryContract)\n```\nThe function is expected to emit the CountrySet event. \n\nThe country code is not expected because it is retrieved from the country contract via the interface [ISoCashCountryStateManagement](./api-ISoCashCountryStateManagement)\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | countryContract | [ISoCashCountryReferential](./api-t-ISoCashCountryReferential.md) | address | The country contract to set in the referential. If Zero or not a compatible contract, the call fails when trying to get the country code. |\n\n\n"
  },
  {
    "id": "ISoCashCountryManagerInternal",
    "title": "ISoCashCountryManagerInternal",
    "content": "## 📜 ISoCashCountryManagerInternal\n\nThe interface for the internal functions of the CountryManager facet\n\nThe interface collects the events that are emitted by the CountryManager facet\n\n### Events\n\n#### 📢 __CountrySet__\nEvent emitted when a country is set in the referential\n\n```js\nevent CountrySet(bytes2 indexed country, address indexed countryContract)\n```\nWhen the param countryContract is ZeroAddress, it means the country is removed from the referential\n\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | country | bytes2 | bytes2 | The ISO country code as a Ascii encoded bytes2. Typically you send `0x4652` for FR. |\n|2 | countryContract | [ISoCashCountryReferential](./api-t-ISoCashCountryReferential.md) | address | The country contract address for the given country code or ZeroAddress if the country is removed from the referential |\n\n\n"
  },
  {
    "id": "ISoCashCountryReferential",
    "title": "ISoCashCountryReferential",
    "content": "## 📜 ISoCashCountryReferential\n\nThe interface for the CountryReferential \n\nThe interface is used to get the country code, the bank module, the correspondent banks, the FX provider and the SSI \n\nInherits from the [ISoCashBankController](./api-ISoCashBankController), [ISoCashBankControllerInternal](./api-ISoCashBankControllerInternal) and [ISoCashCountryStateManagement](./api-ISoCashCountryStateManagement) interfaces\n\n### Events\n\n#### 📢 __BankControllerSet__\nEvent emitted when a bank controller is set or removed for a bank\n\n```js\nevent BankControllerSet(bytes10 indexed bankCode, address controller, bool indexed allowed)\n```\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | bankCode | [CodeType](./api-t-CodeType.md) | bytes10 |  |\n|2 | controller | address | address |  |\n|3 | allowed | bool | bool |  |\n\n\n#### 📢 __BankModuleSet__\nEvent emitted when a bank module is set for a bank\n\n```js\nevent BankModuleSet(bytes10 indexed bankCode, bytes10[] codes, bytes3 indexed currency, address indexed bankModule)\n```\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | bankCode | [CodeType](./api-t-CodeType.md) | bytes10 |  |\n|2 | codes | [CodeType[]](./api-t-CodeType.md) | bytes10[] |  |\n|3 | currency | bytes3 | bytes3 |  |\n|4 | bankModule | [ISoCashBankExternal](./api-t-ISoCashBankExternal.md) | address |  |\n\n\n#### 📢 __CorrespondentBankChange__\nEvent emitted when a correspondent bank is set for a bank\n\n```js\nevent CorrespondentBankChange(bytes10 indexed bankCode, bytes10[] codes, bytes3 indexed currency, tuple(bytes2 country, bytes10[] codes) correspondent, bool added)\n```\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | bankCode | [CodeType](./api-t-CodeType.md) | bytes10 |  |\n|2 | codes | [CodeType[]](./api-t-CodeType.md) | bytes10[] |  |\n|3 | currency | bytes3 | bytes3 |  |\n|4 | correspondent | [BankIdentifier](./api-t-BankIdentifier.md) | tuple |  |\n|5 | added | bool | bool |  |\n\n\n#### 📢 __FXProviderSet__\nEvent emitted when a FX provider is set for a bank\n\n```js\nevent FXProviderSet(bytes10 indexed bankCode, address indexed fxProvider, bool indexed added)\n```\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | bankCode | [CodeType](./api-t-CodeType.md) | bytes10 |  |\n|2 | fxProvider | [ISoCashFXProvider](./api-t-ISoCashFXProvider.md) | address |  |\n|3 | added | bool | bool |  |\n\n\n#### 📢 __SSIChange__\nEvent emitted when a SSI is set for a bank\n\n```js\nevent SSIChange(bytes10 indexed bankCode, bytes10[] codes, bytes3 indexed currency, tuple(uint8 model, address bank, address account) account)\n```\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | bankCode | [CodeType](./api-t-CodeType.md) | bytes10 |  |\n|2 | codes | [CodeType[]](./api-t-CodeType.md) | bytes10[] |  |\n|3 | currency | bytes3 | bytes3 |  |\n|4 | account | [BankAccount](./api-t-BankAccount.md) | tuple |  |\n\n\n### Methods\n\n#### ⚙️ __addCorrespondent__\nAdd a correspondent bank for a bank defined by its codes.  \n\nA Correspondent is a bank that can sent payment instruction to the bank and therefore call the `interbankTransfer()` function in the [ISoCashInterBank](./api-ISoCashInterBank) interface.\n\n```js\nfunction addCorrespondent(bytes10[] codes, bytes3 currency, tuple(bytes2 country, bytes10[] codes) correspondent)\n```\nThe function is expected to emit the CorrespondentBankChange event. \n\nOnly the controller of the bank should be allowed to call this function.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | codes | [CodeType[]](./api-t-CodeType.md) | bytes10[] | The codes that defines the bank module that defines this correspondent |\n|2 | currency | bytes3 | bytes3 | The currency managed by the correspondent bank. |\n|3 | correspondent | [BankIdentifier](./api-t-BankIdentifier.md) | tuple | The bank identifier of the correspondent bank that is set for the bank. |\n\n\n#### ⚙️ __countryCode__\nget the country code of this country referential\n\n```js\nfunction countryCode() view returns (bytes2)\n```\nThe function returns the country code of the country referential implementation.\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bytes2 | bytes2 | The country code of the country referential in bytes like `0x4652` for `FR`. |\n\n\n#### ⚙️ __delCorrespondent__\nRemove a correspondent bank for a bank defined by its codes.\n\n```js\nfunction delCorrespondent(bytes10[] codes, bytes3 currency, tuple(bytes2 country, bytes10[] codes) correspondent)\n```\nThe function is expected to emit the CorrespondentBankChange event. \n\nOnly the controller of the bank should be allowed to call this function.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | codes | [CodeType[]](./api-t-CodeType.md) | bytes10[] | The codes that defines the bank module that defines this correspondent |\n|2 | currency | bytes3 | bytes3 | The currency managed by the correspondent bank. |\n|3 | correspondent | [BankIdentifier](./api-t-BankIdentifier.md) | tuple | The bank identifier of the correspondent bank that is removed for the bank. |\n\n\n#### ⚙️ __getBankModule__\nGet the bank module for a bank defined by its codes and currency\n\n```js\nfunction getBankModule(bytes10[] codes, bytes3 currency) view returns (address)\n```\nThe function returns the bank module for the bank defined by its codes and currency or zero if not found.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | codes | [CodeType[]](./api-t-CodeType.md) | bytes10[] | The codes that defines the bank module. Typically the bank code, branch code. Any number of codes can be set. |\n|2 | currency | bytes3 | bytes3 | The currency managed by the bank module. |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | [ISoCashBankExternal](./api-t-ISoCashBankExternal.md) | address | The bank module for the bank defined by its codes and currency or zero if not found. |\n\n\n#### ⚙️ __getCorrespondentBanks__\nGet the correspondent banks for a bank defined by its codes and currency \n\nReturns the list of banks that are allowed to send payment instructions to the bank.\n\n```js\nfunction getCorrespondentBanks(bytes10[] codes, bytes3 currency) view returns (tuple(bytes2 country, bytes10[] codes)[] correspondents)\n```\nThe function returns the list of correspondent banks defined by their country, codes. The result can be empty.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | codes | [CodeType[]](./api-t-CodeType.md) | bytes10[] | The codes that defines the bank module reachable by these correspondents |\n|2 | currency | bytes3 | bytes3 | The currency managed by the correspondent banks. |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | correspondents | [BankIdentifier[]](./api-t-BankIdentifier.md) | tuple[] | The list of correspondent banks for the bank defined by its codes and currency. |\n\n\n#### ⚙️ __getSSI__\nGet the Default Settlement Instructions (SSI) for a bank and currency \n\nFor the moment a single SSI can be defined by bank and currency.\n\n```js\nfunction getSSI(bytes10[] codes, bytes3 currency) view returns (tuple(uint8 model, address bank, address account) account)\n```\nThe function returns the SSI for the bank defined by its codes and currency or zeros if not found.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | codes | [CodeType[]](./api-t-CodeType.md) | bytes10[] | The codes that defines the bank module that defines this SSI |\n|2 | currency | bytes3 | bytes3 | The currency of the SSI. |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | [BankAccount](./api-t-BankAccount.md) | tuple | The SSI for the bank defined by its codes and currency or zeros if not found. |\n\n\n#### ⚙️ __isBankController__\nCheck if a wallet is a controller for a bank code\n\n```js\nfunction isBankController(bytes10 bankCode, address controller) view returns (bool)\n```\nThe function returns true if the wallet is a controller for the bank code, false otherwise.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | bankCode | [CodeType](./api-t-CodeType.md) | bytes10 | The bank code of the bank to check the controller for. |\n|2 | controller | address | address | The address of the wallet to check if it is a controller for the bank. |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | True if the wallet is a controller for the bank code, false otherwise. |\n\n\n#### ⚙️ __isCorrespondent__\nCheck if a bank is a correspondent for the provided bank\n\n```js\nfunction isCorrespondent(bytes10[] codes, bytes3 currency, tuple(bytes2 country, bytes10[] codes) correspondent) view returns (bool)\n```\nThe function returns true if the bank is a correspondent for the provided bank, false otherwise.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | codes | [CodeType[]](./api-t-CodeType.md) | bytes10[] | The codes that defines the bank module that is expected to have the correspondent |\n|2 | currency | bytes3 | bytes3 | The currency managed by the correspondent bank. |\n|3 | correspondent | [BankIdentifier](./api-t-BankIdentifier.md) | tuple | The bank identifier of the correspondent bank that is checked for the bank. |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | True if the bank is a correspondent for the provided bank, false otherwise. |\n\n\n#### ⚙️ __setBankController__\nSet the bank controller for a bank code\n\n```js\nfunction setBankController(bytes10 bankCode, address controller)\n```\nThe function is expected to emit the BankControllerSet event. \n\nOnly an allowed wallet for the country referential should be allowed to call this function.  \n\nNote that the wallet address can be the address of another smart contract that the bank is using to automate its declaration in the referential.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | bankCode | [CodeType](./api-t-CodeType.md) | bytes10 | The bank code of the bank the controller wallet is given access to. |\n|2 | controller | address | address | The address of the wallet that is given access to the bank. |\n\n\n#### ⚙️ __setBankModule__\nSet the bank module contract for a bank defined by its codes\n\n```js\nfunction setBankModule(bytes10[] codes, bytes3 currency, address bankModule)\n```\nThe function is expected to emit the BankModuleSet event. \n\nOnly the controller of the bank should be allowed to call this function.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | codes | [CodeType[]](./api-t-CodeType.md) | bytes10[] | The codes that defines the bank module. Typically the bank code, branch code. Any number of codes can be set. |\n|2 | currency | bytes3 | bytes3 | The currency managed by the bank module. |\n|3 | bankModule | [ISoCashBankExternal](./api-t-ISoCashBankExternal.md) | address | The address of the bank module that is set for the bank. Typically a [ISoCashBankExternal](./api-ISoCashBankExternal) contract. |\n\n\n#### ⚙️ __setFXProvider__\nSet the FX provider for a bank\n\n```js\nfunction setFXProvider(bytes10 bankCode, address fxProvider)\n```\nThe function is expected to emit the FXProviderSet event. \n\nThe Fx provider does not need to be unique per bank code, there is no state recording of the FX Provided in the chain, only the event enables developpers to find the FX provider for a bank. \n\nOnly the controller of the bank should be allowed to call this function.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | bankCode | [CodeType](./api-t-CodeType.md) | bytes10 | The bank code of the bank the FX provider is set for. |\n|2 | fxProvider | [ISoCashFXProvider](./api-t-ISoCashFXProvider.md) | address | The address of the FX provider that is set for the bank. Typically a [ISoCashFXProvider](./api-ISoCashFXProvider) contract. |\n\n\n#### ⚙️ __setSSI__\nSet the SSI for a bank\n\n```js\nfunction setSSI(bytes10[] codes, bytes3 currency, tuple(uint8 model, address bank, address account) account)\n```\nThe function is expected to emit the SSIChange event. \n\nOnly the controller of the bank should be allowed to call this function.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | codes | [CodeType[]](./api-t-CodeType.md) | bytes10[] | The codes that defines the bank module that defines this SSI |\n|2 | currency | bytes3 | bytes3 | The currency of the SSI. |\n|3 | account | [BankAccount](./api-t-BankAccount.md) | tuple | The bank account that is set for the bank. Can be a so|cash account or an ERC20 account. |\n\n\n#### ⚙️ __unsetBankController__\nUnset the bank controller for a bank code\n\n```js\nfunction unsetBankController(bytes10 bankCode, address controller)\n```\nThe function is expected to emit the BankControllerSet event. \n\nOnly an allowed wallet for the country referential should be allowed to call this function.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | bankCode | [CodeType](./api-t-CodeType.md) | bytes10 | The bank code of the bank the controller wallet is removed from. |\n|2 | controller | address | address | The address of the wallet that is removed from the bank. |\n\n\n#### ⚙️ __unsetFXProvider__\nRemove the FX provider for a bank\n\n```js\nfunction unsetFXProvider(bytes10 bankCode, address fxProvider)\n```\nThe function is expected to emit the FXProviderSet event. \n\nOnly the controller of the bank should be allowed to call this function.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | bankCode | [CodeType](./api-t-CodeType.md) | bytes10 | The bank code of the bank the FX provider is removed for. |\n|2 | fxProvider | [ISoCashFXProvider](./api-t-ISoCashFXProvider.md) | address | The address of the FX provider that is removed for the bank. |\n\n\n"
  },
  {
    "id": "ISoCashCountryReferentialFull",
    "title": "ISoCashCountryReferentialFull",
    "content": "## 📜 ISoCashCountryReferentialFull interface for each country referential service\n\nThe country referential service is used to find and manage the referential of a country in the so|cash scope.\n\nThis interface inherits from [ISoCashCountryReferential](./api-ISoCashCountryReferential) and [I_IBANService](./api-I_IBANService). \n\nIt is used to access the country referential and to create and decode IBANs.\n\n### Events\n\n#### 📢 __BankControllerSet__\nEvent emitted when a bank controller is set or removed for a bank\n\n```js\nevent BankControllerSet(bytes10 indexed bankCode, address controller, bool indexed allowed)\n```\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | bankCode | [CodeType](./api-t-CodeType.md) | bytes10 |  |\n|2 | controller | address | address |  |\n|3 | allowed | bool | bool |  |\n\n\n#### 📢 __BankModuleSet__\nEvent emitted when a bank module is set for a bank\n\n```js\nevent BankModuleSet(bytes10 indexed bankCode, bytes10[] codes, bytes3 indexed currency, address indexed bankModule)\n```\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | bankCode | [CodeType](./api-t-CodeType.md) | bytes10 |  |\n|2 | codes | [CodeType[]](./api-t-CodeType.md) | bytes10[] |  |\n|3 | currency | bytes3 | bytes3 |  |\n|4 | bankModule | [ISoCashBankExternal](./api-t-ISoCashBankExternal.md) | address |  |\n\n\n#### 📢 __CorrespondentBankChange__\nEvent emitted when a correspondent bank is set for a bank\n\n```js\nevent CorrespondentBankChange(bytes10 indexed bankCode, bytes10[] codes, bytes3 indexed currency, tuple(bytes2 country, bytes10[] codes) correspondent, bool added)\n```\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | bankCode | [CodeType](./api-t-CodeType.md) | bytes10 |  |\n|2 | codes | [CodeType[]](./api-t-CodeType.md) | bytes10[] |  |\n|3 | currency | bytes3 | bytes3 |  |\n|4 | correspondent | [BankIdentifier](./api-t-BankIdentifier.md) | tuple |  |\n|5 | added | bool | bool |  |\n\n\n#### 📢 __FXProviderSet__\nEvent emitted when a FX provider is set for a bank\n\n```js\nevent FXProviderSet(bytes10 indexed bankCode, address indexed fxProvider, bool indexed added)\n```\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | bankCode | [CodeType](./api-t-CodeType.md) | bytes10 |  |\n|2 | fxProvider | [ISoCashFXProvider](./api-t-ISoCashFXProvider.md) | address |  |\n|3 | added | bool | bool |  |\n\n\n#### 📢 __SSIChange__\nEvent emitted when a SSI is set for a bank\n\n```js\nevent SSIChange(bytes10 indexed bankCode, bytes10[] codes, bytes3 indexed currency, tuple(uint8 model, address bank, address account) account)\n```\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | bankCode | [CodeType](./api-t-CodeType.md) | bytes10 |  |\n|2 | codes | [CodeType[]](./api-t-CodeType.md) | bytes10[] |  |\n|3 | currency | bytes3 | bytes3 |  |\n|4 | account | [BankAccount](./api-t-BankAccount.md) | tuple |  |\n\n\n### Methods\n\n#### ⚙️ __addCorrespondent__\nAdd a correspondent bank for a bank defined by its codes.  \n\nA Correspondent is a bank that can sent payment instruction to the bank and therefore call the `interbankTransfer()` function in the [ISoCashInterBank](./api-ISoCashInterBank) interface.\n\n```js\nfunction addCorrespondent(bytes10[] codes, bytes3 currency, tuple(bytes2 country, bytes10[] codes) correspondent)\n```\nThe function is expected to emit the CorrespondentBankChange event. \n\nOnly the controller of the bank should be allowed to call this function.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | codes | [CodeType[]](./api-t-CodeType.md) | bytes10[] | The codes that defines the bank module that defines this correspondent |\n|2 | currency | bytes3 | bytes3 | The currency managed by the correspondent bank. |\n|3 | correspondent | [BankIdentifier](./api-t-BankIdentifier.md) | tuple | The bank identifier of the correspondent bank that is set for the bank. |\n\n\n#### ⚙️ __countryCode__\nget the country code of this country referential\n\n```js\nfunction countryCode() view returns (bytes2)\n```\nThe function returns the country code of the country referential implementation.\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bytes2 | bytes2 | The country code of the country referential in bytes like `0x4652` for `FR`. |\n\n\n#### ⚙️ __createIBAN__\nCreate an IBAN from a country code and a set of codes.\n\n```js\nfunction createIBAN(bytes2 country, string[] codes) view returns (string)\n```\nThe function should return a valid IBAN if the country code and the codes are valid else it can fail.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | country | [CountryCode](./api-t-CountryCode.md) | bytes2 | The country code of the IBAN to create. It must be 2 letters long. |\n|2 | codes | string[] | string[] | Array of codes of the IBAN to create accouding to the country standard. They must be valid for the country. |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | string | string | The IBAN created from the country code and the codes. |\n\n\n#### ⚙️ __decodeIBAN__\nDecode an IBAN to a country code and a set of codes.\n\n```js\nfunction decodeIBAN(string iban) view returns (bool valid, bytes2 country, string[] codes)\n```\nThe function should return the country code and the codes if the IBAN is valid. The function should never fail. \n\nIf the country code or the bank code cannot be resolved then the valid flag should be false.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | iban | string | string | The IBAN to decode. |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | valid | bool | bool | True if the IBAN is valid, false otherwise. |\n|2 | country | [CountryCode](./api-t-CountryCode.md) | bytes2 | The country code of the IBAN. |\n|3 | codes | string[] | string[] | Array of codes of the IBAN according to the country standard. |\n\n\n#### ⚙️ __decodeIBANToContracts__\nDecode an IBAN to a bank module and an account smart contract address.\n\n```js\nfunction decodeIBANToContracts(string iban) view returns (bool valid, address bank, address account)\n```\nThe function should return the bank module and the account if the IBAN is valid. The function should never fail. \n\nIf the bank or the account cannot be resolved then the valid flag should be false and the addresses are zeroed.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | iban | string | string | The IBAN to decode. |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | valid | bool | bool | True if the IBAN is valid, false otherwise. |\n|2 | bank | address | address | The bank address of the IBAN. Typically a [ISoCashBank](./api-ISoCashBank) contract or zero if the bank cannot be resolved. |\n|3 | account | address | address | The account address of the IBAN. Typically a [ISoCashAccount](./api-ISoCashAccount) contract or zero if the account cannot be resolved. |\n\n\n#### ⚙️ __delCorrespondent__\nRemove a correspondent bank for a bank defined by its codes.\n\n```js\nfunction delCorrespondent(bytes10[] codes, bytes3 currency, tuple(bytes2 country, bytes10[] codes) correspondent)\n```\nThe function is expected to emit the CorrespondentBankChange event. \n\nOnly the controller of the bank should be allowed to call this function.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | codes | [CodeType[]](./api-t-CodeType.md) | bytes10[] | The codes that defines the bank module that defines this correspondent |\n|2 | currency | bytes3 | bytes3 | The currency managed by the correspondent bank. |\n|3 | correspondent | [BankIdentifier](./api-t-BankIdentifier.md) | tuple | The bank identifier of the correspondent bank that is removed for the bank. |\n\n\n#### ⚙️ __getBankModule__\nGet the bank module for a bank defined by its codes and currency\n\n```js\nfunction getBankModule(bytes10[] codes, bytes3 currency) view returns (address)\n```\nThe function returns the bank module for the bank defined by its codes and currency or zero if not found.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | codes | [CodeType[]](./api-t-CodeType.md) | bytes10[] | The codes that defines the bank module. Typically the bank code, branch code. Any number of codes can be set. |\n|2 | currency | bytes3 | bytes3 | The currency managed by the bank module. |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | [ISoCashBankExternal](./api-t-ISoCashBankExternal.md) | address | The bank module for the bank defined by its codes and currency or zero if not found. |\n\n\n#### ⚙️ __getCorrespondentBanks__\nGet the correspondent banks for a bank defined by its codes and currency \n\nReturns the list of banks that are allowed to send payment instructions to the bank.\n\n```js\nfunction getCorrespondentBanks(bytes10[] codes, bytes3 currency) view returns (tuple(bytes2 country, bytes10[] codes)[] correspondents)\n```\nThe function returns the list of correspondent banks defined by their country, codes. The result can be empty.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | codes | [CodeType[]](./api-t-CodeType.md) | bytes10[] | The codes that defines the bank module reachable by these correspondents |\n|2 | currency | bytes3 | bytes3 | The currency managed by the correspondent banks. |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | correspondents | [BankIdentifier[]](./api-t-BankIdentifier.md) | tuple[] | The list of correspondent banks for the bank defined by its codes and currency. |\n\n\n#### ⚙️ __getSSI__\nGet the Default Settlement Instructions (SSI) for a bank and currency \n\nFor the moment a single SSI can be defined by bank and currency.\n\n```js\nfunction getSSI(bytes10[] codes, bytes3 currency) view returns (tuple(uint8 model, address bank, address account) account)\n```\nThe function returns the SSI for the bank defined by its codes and currency or zeros if not found.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | codes | [CodeType[]](./api-t-CodeType.md) | bytes10[] | The codes that defines the bank module that defines this SSI |\n|2 | currency | bytes3 | bytes3 | The currency of the SSI. |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | [BankAccount](./api-t-BankAccount.md) | tuple | The SSI for the bank defined by its codes and currency or zeros if not found. |\n\n\n#### ⚙️ __isBankController__\nCheck if a wallet is a controller for a bank code\n\n```js\nfunction isBankController(bytes10 bankCode, address controller) view returns (bool)\n```\nThe function returns true if the wallet is a controller for the bank code, false otherwise.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | bankCode | [CodeType](./api-t-CodeType.md) | bytes10 | The bank code of the bank to check the controller for. |\n|2 | controller | address | address | The address of the wallet to check if it is a controller for the bank. |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | True if the wallet is a controller for the bank code, false otherwise. |\n\n\n#### ⚙️ __isCorrespondent__\nCheck if a bank is a correspondent for the provided bank\n\n```js\nfunction isCorrespondent(bytes10[] codes, bytes3 currency, tuple(bytes2 country, bytes10[] codes) correspondent) view returns (bool)\n```\nThe function returns true if the bank is a correspondent for the provided bank, false otherwise.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | codes | [CodeType[]](./api-t-CodeType.md) | bytes10[] | The codes that defines the bank module that is expected to have the correspondent |\n|2 | currency | bytes3 | bytes3 | The currency managed by the correspondent bank. |\n|3 | correspondent | [BankIdentifier](./api-t-BankIdentifier.md) | tuple | The bank identifier of the correspondent bank that is checked for the bank. |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | True if the bank is a correspondent for the provided bank, false otherwise. |\n\n\n#### ⚙️ __setBankController__\nSet the bank controller for a bank code\n\n```js\nfunction setBankController(bytes10 bankCode, address controller)\n```\nThe function is expected to emit the BankControllerSet event. \n\nOnly an allowed wallet for the country referential should be allowed to call this function.  \n\nNote that the wallet address can be the address of another smart contract that the bank is using to automate its declaration in the referential.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | bankCode | [CodeType](./api-t-CodeType.md) | bytes10 | The bank code of the bank the controller wallet is given access to. |\n|2 | controller | address | address | The address of the wallet that is given access to the bank. |\n\n\n#### ⚙️ __setBankModule__\nSet the bank module contract for a bank defined by its codes\n\n```js\nfunction setBankModule(bytes10[] codes, bytes3 currency, address bankModule)\n```\nThe function is expected to emit the BankModuleSet event. \n\nOnly the controller of the bank should be allowed to call this function.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | codes | [CodeType[]](./api-t-CodeType.md) | bytes10[] | The codes that defines the bank module. Typically the bank code, branch code. Any number of codes can be set. |\n|2 | currency | bytes3 | bytes3 | The currency managed by the bank module. |\n|3 | bankModule | [ISoCashBankExternal](./api-t-ISoCashBankExternal.md) | address | The address of the bank module that is set for the bank. Typically a [ISoCashBankExternal](./api-ISoCashBankExternal) contract. |\n\n\n#### ⚙️ __setFXProvider__\nSet the FX provider for a bank\n\n```js\nfunction setFXProvider(bytes10 bankCode, address fxProvider)\n```\nThe function is expected to emit the FXProviderSet event. \n\nThe Fx provider does not need to be unique per bank code, there is no state recording of the FX Provided in the chain, only the event enables developpers to find the FX provider for a bank. \n\nOnly the controller of the bank should be allowed to call this function.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | bankCode | [CodeType](./api-t-CodeType.md) | bytes10 | The bank code of the bank the FX provider is set for. |\n|2 | fxProvider | [ISoCashFXProvider](./api-t-ISoCashFXProvider.md) | address | The address of the FX provider that is set for the bank. Typically a [ISoCashFXProvider](./api-ISoCashFXProvider) contract. |\n\n\n#### ⚙️ __setSSI__\nSet the SSI for a bank\n\n```js\nfunction setSSI(bytes10[] codes, bytes3 currency, tuple(uint8 model, address bank, address account) account)\n```\nThe function is expected to emit the SSIChange event. \n\nOnly the controller of the bank should be allowed to call this function.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | codes | [CodeType[]](./api-t-CodeType.md) | bytes10[] | The codes that defines the bank module that defines this SSI |\n|2 | currency | bytes3 | bytes3 | The currency of the SSI. |\n|3 | account | [BankAccount](./api-t-BankAccount.md) | tuple | The bank account that is set for the bank. Can be a so|cash account or an ERC20 account. |\n\n\n#### ⚙️ __unsetBankController__\nUnset the bank controller for a bank code\n\n```js\nfunction unsetBankController(bytes10 bankCode, address controller)\n```\nThe function is expected to emit the BankControllerSet event. \n\nOnly an allowed wallet for the country referential should be allowed to call this function.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | bankCode | [CodeType](./api-t-CodeType.md) | bytes10 | The bank code of the bank the controller wallet is removed from. |\n|2 | controller | address | address | The address of the wallet that is removed from the bank. |\n\n\n#### ⚙️ __unsetFXProvider__\nRemove the FX provider for a bank\n\n```js\nfunction unsetFXProvider(bytes10 bankCode, address fxProvider)\n```\nThe function is expected to emit the FXProviderSet event. \n\nOnly the controller of the bank should be allowed to call this function.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | bankCode | [CodeType](./api-t-CodeType.md) | bytes10 | The bank code of the bank the FX provider is removed for. |\n|2 | fxProvider | [ISoCashFXProvider](./api-t-ISoCashFXProvider.md) | address | The address of the FX provider that is removed for the bank. |\n\n\n"
  },
  {
    "id": "ISoCashCountryStateManagement",
    "title": "ISoCashCountryStateManagement",
    "content": "## 📜 ISoCashCountryStateManagement\n\nThe interface for banks to records elements in a country referential\n\nThe interface is used to set the bank module, the correspondent bank, the SSI and the FX provider by a controller of a bank. \n\nFunctions are typically controlling that the caller is the controller for the `bankCode`\n\n### Events\n\n#### 📢 __BankModuleSet__\nEvent emitted when a bank module is set for a bank\n\n```js\nevent BankModuleSet(bytes10 indexed bankCode, bytes10[] codes, bytes3 indexed currency, address indexed bankModule)\n```\nThe event is emitted by `setBankModule` function\n\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | bankCode | [CodeType](./api-t-CodeType.md) | bytes10 | The bank code of the bank the module is set for. |\n|2 | codes | [CodeType[]](./api-t-CodeType.md) | bytes10[] | The additional codes that defines the bank module. Typically the branch code. Any number of codes can be set. |\n|3 | currency | bytes3 | bytes3 | The currency managed by the bank module. |\n|4 | bankModule | [ISoCashBankExternal](./api-t-ISoCashBankExternal.md) | address | The address of the bank module that is set for the bank. Typically a [ISoCashBankExternal](./api-ISoCashBankExternal) contract. |\n\n\n#### 📢 __CorrespondentBankChange__\nEvent emitted when a correspondent bank is set for a bank\n\n```js\nevent CorrespondentBankChange(bytes10 indexed bankCode, bytes10[] codes, bytes3 indexed currency, tuple(bytes2 country, bytes10[] codes) correspondent, bool added)\n```\nThe event is emitted by `addCorrespondent` and `delCorrespondent` functions\n\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | bankCode | [CodeType](./api-t-CodeType.md) | bytes10 | The bank code of the bank the correspondent bank is set for. |\n|2 | codes | [CodeType[]](./api-t-CodeType.md) | bytes10[] | The additional codes that defines the bank module that defines this correspondent |\n|3 | currency | bytes3 | bytes3 | The currency managed by the correspondent bank. |\n|4 | correspondent | [BankIdentifier](./api-t-BankIdentifier.md) | tuple | The bank identifier of the correspondent bank that is set for the bank. |\n|5 | added | bool | bool | True if the correspondent bank is added, false if the correspondent bank is removed. |\n\n\n#### 📢 __FXProviderSet__\nEvent emitted when a FX provider is set for a bank\n\n```js\nevent FXProviderSet(bytes10 indexed bankCode, address indexed fxProvider, bool indexed added)\n```\nThe event is emitted by `setFXProvider` and `unsetFXProvider` functions\n\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | bankCode | [CodeType](./api-t-CodeType.md) | bytes10 | The bank code of the bank the FX provider is set for. Note that a FX Provided does not have to be a full bank as it does not need to keep accounts for clients. |\n|2 | fxProvider | [ISoCashFXProvider](./api-t-ISoCashFXProvider.md) | address | The address of the FX provider that is set for the bank. Typically a [ISoCashFXProvider](./api-ISoCashFXProvider) contract. |\n|3 | added | bool | bool | True if the FX provider is added, false if the FX provider is removed. |\n\n\n#### 📢 __SSIChange__\nEvent emitted when a SSI is set for a bank\n\n```js\nevent SSIChange(bytes10 indexed bankCode, bytes10[] codes, bytes3 indexed currency, tuple(uint8 model, address bank, address account) account)\n```\nThe event is emitted by `setSSI` function\n\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | bankCode | [CodeType](./api-t-CodeType.md) | bytes10 | The bank code of the bank the SSI is set for. |\n|2 | codes | [CodeType[]](./api-t-CodeType.md) | bytes10[] | The additional codes that defines the bank module that defines this SSI |\n|3 | currency | bytes3 | bytes3 | The currency of the SSI. |\n|4 | account | [BankAccount](./api-t-BankAccount.md) | tuple | The bank account that is set for the bank. Can be a so|cash account or an ERC20 account. |\n\n\n### Methods\n\n#### ⚙️ __addCorrespondent__\nAdd a correspondent bank for a bank defined by its codes.  \n\nA Correspondent is a bank that can sent payment instruction to the bank and therefore call the `interbankTransfer()` function in the [ISoCashInterBank](./api-ISoCashInterBank) interface.\n\n```js\nfunction addCorrespondent(bytes10[] codes, bytes3 currency, tuple(bytes2 country, bytes10[] codes) correspondent)\n```\nThe function is expected to emit the CorrespondentBankChange event. \n\nOnly the controller of the bank should be allowed to call this function.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | codes | [CodeType[]](./api-t-CodeType.md) | bytes10[] | The codes that defines the bank module that defines this correspondent |\n|2 | currency | bytes3 | bytes3 | The currency managed by the correspondent bank. |\n|3 | correspondent | [BankIdentifier](./api-t-BankIdentifier.md) | tuple | The bank identifier of the correspondent bank that is set for the bank. |\n\n\n#### ⚙️ __countryCode__\nget the country code of this country referential\n\n```js\nfunction countryCode() view returns (bytes2)\n```\nThe function returns the country code of the country referential implementation.\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bytes2 | bytes2 | The country code of the country referential in bytes like `0x4652` for `FR`. |\n\n\n#### ⚙️ __delCorrespondent__\nRemove a correspondent bank for a bank defined by its codes.\n\n```js\nfunction delCorrespondent(bytes10[] codes, bytes3 currency, tuple(bytes2 country, bytes10[] codes) correspondent)\n```\nThe function is expected to emit the CorrespondentBankChange event. \n\nOnly the controller of the bank should be allowed to call this function.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | codes | [CodeType[]](./api-t-CodeType.md) | bytes10[] | The codes that defines the bank module that defines this correspondent |\n|2 | currency | bytes3 | bytes3 | The currency managed by the correspondent bank. |\n|3 | correspondent | [BankIdentifier](./api-t-BankIdentifier.md) | tuple | The bank identifier of the correspondent bank that is removed for the bank. |\n\n\n#### ⚙️ __getBankModule__\nGet the bank module for a bank defined by its codes and currency\n\n```js\nfunction getBankModule(bytes10[] codes, bytes3 currency) view returns (address)\n```\nThe function returns the bank module for the bank defined by its codes and currency or zero if not found.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | codes | [CodeType[]](./api-t-CodeType.md) | bytes10[] | The codes that defines the bank module. Typically the bank code, branch code. Any number of codes can be set. |\n|2 | currency | bytes3 | bytes3 | The currency managed by the bank module. |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | [ISoCashBankExternal](./api-t-ISoCashBankExternal.md) | address | The bank module for the bank defined by its codes and currency or zero if not found. |\n\n\n#### ⚙️ __getCorrespondentBanks__\nGet the correspondent banks for a bank defined by its codes and currency \n\nReturns the list of banks that are allowed to send payment instructions to the bank.\n\n```js\nfunction getCorrespondentBanks(bytes10[] codes, bytes3 currency) view returns (tuple(bytes2 country, bytes10[] codes)[] correspondents)\n```\nThe function returns the list of correspondent banks defined by their country, codes. The result can be empty.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | codes | [CodeType[]](./api-t-CodeType.md) | bytes10[] | The codes that defines the bank module reachable by these correspondents |\n|2 | currency | bytes3 | bytes3 | The currency managed by the correspondent banks. |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | correspondents | [BankIdentifier[]](./api-t-BankIdentifier.md) | tuple[] | The list of correspondent banks for the bank defined by its codes and currency. |\n\n\n#### ⚙️ __getSSI__\nGet the Default Settlement Instructions (SSI) for a bank and currency \n\nFor the moment a single SSI can be defined by bank and currency.\n\n```js\nfunction getSSI(bytes10[] codes, bytes3 currency) view returns (tuple(uint8 model, address bank, address account) account)\n```\nThe function returns the SSI for the bank defined by its codes and currency or zeros if not found.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | codes | [CodeType[]](./api-t-CodeType.md) | bytes10[] | The codes that defines the bank module that defines this SSI |\n|2 | currency | bytes3 | bytes3 | The currency of the SSI. |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | [BankAccount](./api-t-BankAccount.md) | tuple | The SSI for the bank defined by its codes and currency or zeros if not found. |\n\n\n#### ⚙️ __isCorrespondent__\nCheck if a bank is a correspondent for the provided bank\n\n```js\nfunction isCorrespondent(bytes10[] codes, bytes3 currency, tuple(bytes2 country, bytes10[] codes) correspondent) view returns (bool)\n```\nThe function returns true if the bank is a correspondent for the provided bank, false otherwise.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | codes | [CodeType[]](./api-t-CodeType.md) | bytes10[] | The codes that defines the bank module that is expected to have the correspondent |\n|2 | currency | bytes3 | bytes3 | The currency managed by the correspondent bank. |\n|3 | correspondent | [BankIdentifier](./api-t-BankIdentifier.md) | tuple | The bank identifier of the correspondent bank that is checked for the bank. |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | True if the bank is a correspondent for the provided bank, false otherwise. |\n\n\n#### ⚙️ __setBankModule__\nSet the bank module contract for a bank defined by its codes\n\n```js\nfunction setBankModule(bytes10[] codes, bytes3 currency, address bankModule)\n```\nThe function is expected to emit the BankModuleSet event. \n\nOnly the controller of the bank should be allowed to call this function.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | codes | [CodeType[]](./api-t-CodeType.md) | bytes10[] | The codes that defines the bank module. Typically the bank code, branch code. Any number of codes can be set. |\n|2 | currency | bytes3 | bytes3 | The currency managed by the bank module. |\n|3 | bankModule | [ISoCashBankExternal](./api-t-ISoCashBankExternal.md) | address | The address of the bank module that is set for the bank. Typically a [ISoCashBankExternal](./api-ISoCashBankExternal) contract. |\n\n\n#### ⚙️ __setFXProvider__\nSet the FX provider for a bank\n\n```js\nfunction setFXProvider(bytes10 bankCode, address fxProvider)\n```\nThe function is expected to emit the FXProviderSet event. \n\nThe Fx provider does not need to be unique per bank code, there is no state recording of the FX Provided in the chain, only the event enables developpers to find the FX provider for a bank. \n\nOnly the controller of the bank should be allowed to call this function.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | bankCode | [CodeType](./api-t-CodeType.md) | bytes10 | The bank code of the bank the FX provider is set for. |\n|2 | fxProvider | [ISoCashFXProvider](./api-t-ISoCashFXProvider.md) | address | The address of the FX provider that is set for the bank. Typically a [ISoCashFXProvider](./api-ISoCashFXProvider) contract. |\n\n\n#### ⚙️ __setSSI__\nSet the SSI for a bank\n\n```js\nfunction setSSI(bytes10[] codes, bytes3 currency, tuple(uint8 model, address bank, address account) account)\n```\nThe function is expected to emit the SSIChange event. \n\nOnly the controller of the bank should be allowed to call this function.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | codes | [CodeType[]](./api-t-CodeType.md) | bytes10[] | The codes that defines the bank module that defines this SSI |\n|2 | currency | bytes3 | bytes3 | The currency of the SSI. |\n|3 | account | [BankAccount](./api-t-BankAccount.md) | tuple | The bank account that is set for the bank. Can be a so|cash account or an ERC20 account. |\n\n\n#### ⚙️ __unsetFXProvider__\nRemove the FX provider for a bank\n\n```js\nfunction unsetFXProvider(bytes10 bankCode, address fxProvider)\n```\nThe function is expected to emit the FXProviderSet event. \n\nOnly the controller of the bank should be allowed to call this function.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | bankCode | [CodeType](./api-t-CodeType.md) | bytes10 | The bank code of the bank the FX provider is removed for. |\n|2 | fxProvider | [ISoCashFXProvider](./api-t-ISoCashFXProvider.md) | address | The address of the FX provider that is removed for the bank. |\n\n\n"
  },
  {
    "id": "ISoCashFXProvider",
    "title": "ISoCashFXProvider",
    "content": "## 📜 ISoCashFXProvider interface \n\nInterface for FX settlement and account association\n\nThis interface exposes methods to manage an FX Provider smart contract \n\nInherits from [ISoCashFXProviderInternal](./api-ISoCashFXProviderInternal). \n\nAn FXProvider smart contract is a simple solution to execute atomically two transfers in two different currencies with a rate signed by an external private key and valid for a certain amount of time. \n\nThe smart contract is expose to its users and therefore offers features to get a rate from an external API (`getFXRateSource()`). \n\nThe smart contract handles [FXRate](./api-t-FXRate) structures that are signed by a private key and verified by the smart contract. \n\nThis structures is defined as follow:\n\n | Field          | Description                                                                                                              |\n |----------------|--------------------------------------------------------------------------------------------------------------------------|\n | `rate`         | The rate value in decimal form (1 base unit = rate quote unit * 10,000) - To be adjusted according to currency decimals                                                            |\n | `rateTime`     | The timestamp when the rate was created, in seconds                                                                      |\n | `expiryTime`   | The timestamp when the rate will expire, in seconds                                                                      |\n | `base`      | The base currency of the rate                                                                                            |\n | `quote`     | The quote currency of the rate                                                                                           |\n\n\n### Events\n\n#### 📢 __CurrencyAccountSet__\nEvent emitted when a currency account is set in the FX provider smart contract\n\n```js\nevent CurrencyAccountSet(bytes3 indexed ccy, address account)\n```\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ccy | [CCY](./api-t-CCY.md) | bytes3 |  |\n|2 | account | [ISoCashAccount](./api-t-ISoCashAccount.md) | address |  |\n\n\n#### 📢 __FXSettlement__\nEvent emitted when the FX Provider smart contract settle the operation\n\n```js\nevent FXSettlement(address indexed from, address indexed to, uint256 amount, uint256 rate)\n```\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | from | [ISoCashAccount](./api-t-ISoCashAccount.md) | address |  |\n|2 | to | [ISoCashAccount](./api-t-ISoCashAccount.md) | address |  |\n|3 | amount | uint256 | uint256 |  |\n|4 | rate | uint256 | uint256 |  |\n\n\n### Methods\n\n#### ⚙️ __getFXRateSource__\nGet the FX Rate API URL for a currency pair\n\n```js\nfunction getFXRateSource(bytes3 base, bytes3 quote) view returns (string)\n```\nLook at the `setFXRateSource()` method for more information\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | base | [CCY](./api-t-CCY.md) | bytes3 | The base currency of the rate |\n|2 | quote | [CCY](./api-t-CCY.md) | bytes3 | The quote currency of the rate |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | string | string | The URL of the API to get the rate |\n\n\n#### ⚙️ __getRateSigner__\nGet the rate signer of the FX Provider API\n\n```js\nfunction getRateSigner() view returns (address)\n```\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | address | address | The address of the private key that signs the rates in the API |\n\n\n#### ⚙️ __hashOfFXRate__\nCalculate the hash of a FX Rate \n\n```js\nfunction hashOfFXRate(tuple(uint256 rate, uint256 rateTime, uint256 expiryTime, bytes3 base, bytes3 quote) rate) view returns (bytes32)\n```\nThe hash is `keccak256(abi.encodePacked(tx.origin, rate.base, rate.quote, rate.rate, rate.rateTime, rate.expiryTime))` \n\nThe `tx.origin` is used to prevent replay attacks and represents the address that will initiate the settlement with that rate \n\nYou can use this function to create the hash, or you can calculate it yourself off-chain.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | rate | [FXRate](./api-t-FXRate.md) | tuple | The FX Rate to hash |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bytes32 | bytes32 | The hash of the FX Rate |\n\n\n#### ⚙️ __setCurrencyAccount__\nSet the account of a currency in the FX Provider smart contract\n\n```js\nfunction setCurrencyAccount(bytes3 ccy, address account)\n```\nOnly a whitelisted wallet of FX Provider smart contract can call this method.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ccy | [CCY](./api-t-CCY.md) | bytes3 | The currency of the account |\n|2 | account | [ISoCashAccount](./api-t-ISoCashAccount.md) | address | The account to set. The FXProvider smart contract should be whitelisted on the account |\n\n\n#### ⚙️ __setFXRateSource__\nSet the FX Rate API URL for a currency pair\n\n```js\nfunction setFXRateSource(bytes3 base, bytes3 quote, string source)\n```\nOnly a whitelisted wallet of FX Provider smart contract can call this method. \n\nIn the current implementation, the currencies are not used and a single api url can be set. \n\nThe API should follow the following standard: `https://<server.domain>/<path>?base=<base>&quote=<quote>&amount<amount>&origin<wallet-address-of-caller>` \n\nIt should return a JSON object with the following fields:  \n\n```js\n {\n rate: number; // rate value in decimal form (1 base unit = rate quote unit)\n rateTime: number; // the timestamp when the rate was created, in seconds\n expiryTime: number; // the timestamp when the rate will expire, in seconds\n baseCcy: string; // the base currency of the rate\n quoteCcy: string; // the quote currency of the rate\n signature: string; // the signature of the rate by the rate signer as a base64 encoded string\n signerAddress: string; // the address of the rate signer in 0x123...DEF format\n requestorAddress: string; // the tx.origin of the requestor, used to create the signature (integrated in the hash)\n }\n ```\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | base | [CCY](./api-t-CCY.md) | bytes3 | The base currency of the rate (not used in the current implementation) |\n|2 | quote | [CCY](./api-t-CCY.md) | bytes3 | The quote currency of the rate (not used in the current implementation) |\n|3 | source | string | string | The URL of the API to get the rate |\n\n\n#### ⚙️ __setRateSigner__\nSet the rate signer of the FX Provider API\n\n```js\nfunction setRateSigner(address signer)\n```\nOnly a whitelisted wallet of FX Provider smart contract can call this method.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | signer | address | address | The address of the private key that signs the rates in the API |\n\n\n#### ⚙️ __settlement__\nExecute the settlement of a FX operation which rate has been obtained from the API\n\n```js\nfunction settlement(tuple(address account, bytes11 bic, bytes32 iban) from, tuple(address account, bytes11 bic, bytes32 iban) to, uint256 amount, tuple(uint256 rate, uint256 rateTime, uint256 expiryTime, bytes3 base, bytes3 quote) rate, bytes signature, string details) returns (bool)\n```\nThe rate will be verified against the signature and the time validity \n\nBefore calling this method the caller must allow the FXProvider smart contract to spend the base currency amount from the `from` account using the `approve()` method.  \n\nThen the FX Provider smart contract calculate the amount of the quote currency to credit to the `to` account and execute the transfer. \n\nThe transfer is done atomically, in the form on two legs of payment  \n\n- One leg is the debit of the `from` account in the base currency; credit the base currency account of the FX Provider \n\n- The second leg is the debit of the quote currency account of the FX Provider; credit the `to` account in the quote currency \n\nIf the FX Provider does not have enough funds in the quote currency, then the settlement fails.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | from | [RecipentInfo](./api-t-RecipentInfo.md) | tuple | The account to debit in the base currency |\n|2 | to | [RecipentInfo](./api-t-RecipentInfo.md) | tuple | The account to credit in the quote currency |\n|3 | amount | uint256 | uint256 | The amount of the transfer expressed in the smallest unit of the base currency |\n|4 | rate | [FXRate](./api-t-FXRate.md) | tuple | The FX rate used for the settlement |\n|5 | signature | bytes | bytes | The signature of the rate by the rate signer |\n|6 | details | string | string | The details of the transfer |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | true if the settlement is successful, false or fail otherwise |\n\n\n#### ⚙️ __verifyFXRate__\nVerify the signature of a FX Rate\n\n```js\nfunction verifyFXRate(tuple(uint256 rate, uint256 rateTime, uint256 expiryTime, bytes3 base, bytes3 quote) rate, bytes signature) view returns (bool)\n```\nThe signature is a bytes array of 65 bytes that represents the ecdsa signature of the hash of the rate. \n\nThe signature is created by the API providing the rate. The signature DO NOT apply ethereum signature modifications:  No prefix; no v = 27 or 28; no chain id; But the recovery id is 0 or 1. The `secp256k1.ecdsaSign(hash, pk)` of the https://www.npmjs.com/package/secp256k1 library.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | rate | [FXRate](./api-t-FXRate.md) | tuple |  |\n|2 | signature | bytes | bytes |  |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool |  |\n\n\n"
  },
  {
    "id": "ISoCashFXProviderFull",
    "title": "ISoCashFXProviderFull",
    "content": "## 📜 ISoCashFXProviderFull interface\n\nInterface for the full FX Provider smart contract\n\nThis interface groups all the interfaces of the FX Provider smart contract [ISoCashFXProvider](./api-ISoCashFXProvider), [IWhitelistedSenders](./api-IWhitelistedSenders), [ISoCashBankIdentity](./api-ISoCashBankIdentity)\n\n### Events\n\n#### 📢 __CurrencyAccountSet__\nEvent emitted when a currency account is set in the FX provider smart contract\n\n```js\nevent CurrencyAccountSet(bytes3 indexed ccy, address account)\n```\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ccy | [CCY](./api-t-CCY.md) | bytes3 |  |\n|2 | account | [ISoCashAccount](./api-t-ISoCashAccount.md) | address |  |\n\n\n#### 📢 __FXSettlement__\nEvent emitted when the FX Provider smart contract settle the operation\n\n```js\nevent FXSettlement(address indexed from, address indexed to, uint256 amount, uint256 rate)\n```\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | from | [ISoCashAccount](./api-t-ISoCashAccount.md) | address |  |\n|2 | to | [ISoCashAccount](./api-t-ISoCashAccount.md) | address |  |\n|3 | amount | uint256 | uint256 |  |\n|4 | rate | uint256 | uint256 |  |\n\n\n#### 📢 __Whitelisted__\nEmitted when a sender is whitelisted or blacklisted.\n\n```js\nevent Whitelisted(address indexed account, bool status)\n```\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | address | address |  |\n|2 | status | bool | bool |  |\n\n\n### Methods\n\n#### ⚙️ __bankIdentifier__\nGet the bank identifier of the bank\n\n```js\nfunction bankIdentifier() view returns (tuple(bytes2 country, bytes10[] codes) id)\n```\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | id | [BankIdentifier](./api-t-BankIdentifier.md) | tuple | The bank identifier of the bank |\n\n\n#### ⚙️ __bic__\nGet the BIC of the bank\n\n```js\nfunction bic() view returns (string)\n```\nThis is also returned by the `name()` method of the ERC20 compatibility\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | string | string | The BIC of the bank |\n\n\n#### ⚙️ __blacklist__\nRemove sender from the whitelist.\n\n```js\nfunction blacklist(address oldSender)\n```\nOnly an other whitelisted sender (or the owner, or the targetted sender) can blacklist a sender.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | oldSender | address | address | The address of the sender to remove. |\n\n\n#### ⚙️ __codes__\nGet the bankCode and branchCode of the bank\n\n```js\nfunction codes() view returns (bytes10 bankCode, bytes10 branchCode)\n```\nThis is deprecated and should be replaced by the `bankIdentifier()` method\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | bankCode | [CodeType](./api-t-CodeType.md) | bytes10 | The bankCode of the bank |\n|2 | branchCode | [CodeType](./api-t-CodeType.md) | bytes10 | The branchCode of the bank |\n\n\n#### ⚙️ __getFXRateSource__\nGet the FX Rate API URL for a currency pair\n\n```js\nfunction getFXRateSource(bytes3 base, bytes3 quote) view returns (string)\n```\nLook at the `setFXRateSource()` method for more information\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | base | [CCY](./api-t-CCY.md) | bytes3 | The base currency of the rate |\n|2 | quote | [CCY](./api-t-CCY.md) | bytes3 | The quote currency of the rate |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | string | string | The URL of the API to get the rate |\n\n\n#### ⚙️ __getRateSigner__\nGet the rate signer of the FX Provider API\n\n```js\nfunction getRateSigner() view returns (address)\n```\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | address | address | The address of the private key that signs the rates in the API |\n\n\n#### ⚙️ __hashOfFXRate__\nCalculate the hash of a FX Rate \n\n```js\nfunction hashOfFXRate(tuple(uint256 rate, uint256 rateTime, uint256 expiryTime, bytes3 base, bytes3 quote) rate) view returns (bytes32)\n```\nThe hash is `keccak256(abi.encodePacked(tx.origin, rate.base, rate.quote, rate.rate, rate.rateTime, rate.expiryTime))` \n\nThe `tx.origin` is used to prevent replay attacks and represents the address that will initiate the settlement with that rate \n\nYou can use this function to create the hash, or you can calculate it yourself off-chain.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | rate | [FXRate](./api-t-FXRate.md) | tuple | The FX Rate to hash |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bytes32 | bytes32 | The hash of the FX Rate |\n\n\n#### ⚙️ __isWhitelisted__\nCheck if a sender is whitelisted.\n\n```js\nfunction isWhitelisted(address sender) view returns (bool)\n```\nNo control of caller is done in this function.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | sender | address | address | The address of the sender. |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | true if the sender is whitelisted or the owner, false otherwise. |\n\n\n#### ⚙️ __setCurrencyAccount__\nSet the account of a currency in the FX Provider smart contract\n\n```js\nfunction setCurrencyAccount(bytes3 ccy, address account)\n```\nOnly a whitelisted wallet of FX Provider smart contract can call this method.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ccy | [CCY](./api-t-CCY.md) | bytes3 | The currency of the account |\n|2 | account | [ISoCashAccount](./api-t-ISoCashAccount.md) | address | The account to set. The FXProvider smart contract should be whitelisted on the account |\n\n\n#### ⚙️ __setFXRateSource__\nSet the FX Rate API URL for a currency pair\n\n```js\nfunction setFXRateSource(bytes3 base, bytes3 quote, string source)\n```\nOnly a whitelisted wallet of FX Provider smart contract can call this method. \n\nIn the current implementation, the currencies are not used and a single api url can be set. \n\nThe API should follow the following standard: `https://<server.domain>/<path>?base=<base>&quote=<quote>&amount<amount>&origin<wallet-address-of-caller>` \n\nIt should return a JSON object with the following fields:  \n\n```js\n {\n rate: number; // rate value in decimal form (1 base unit = rate quote unit)\n rateTime: number; // the timestamp when the rate was created, in seconds\n expiryTime: number; // the timestamp when the rate will expire, in seconds\n baseCcy: string; // the base currency of the rate\n quoteCcy: string; // the quote currency of the rate\n signature: string; // the signature of the rate by the rate signer as a base64 encoded string\n signerAddress: string; // the address of the rate signer in 0x123...DEF format\n requestorAddress: string; // the tx.origin of the requestor, used to create the signature (integrated in the hash)\n }\n ```\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | base | [CCY](./api-t-CCY.md) | bytes3 | The base currency of the rate (not used in the current implementation) |\n|2 | quote | [CCY](./api-t-CCY.md) | bytes3 | The quote currency of the rate (not used in the current implementation) |\n|3 | source | string | string | The URL of the API to get the rate |\n\n\n#### ⚙️ __setRateSigner__\nSet the rate signer of the FX Provider API\n\n```js\nfunction setRateSigner(address signer)\n```\nOnly a whitelisted wallet of FX Provider smart contract can call this method.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | signer | address | address | The address of the private key that signs the rates in the API |\n\n\n#### ⚙️ __settlement__\nExecute the settlement of a FX operation which rate has been obtained from the API\n\n```js\nfunction settlement(tuple(address account, bytes11 bic, bytes32 iban) from, tuple(address account, bytes11 bic, bytes32 iban) to, uint256 amount, tuple(uint256 rate, uint256 rateTime, uint256 expiryTime, bytes3 base, bytes3 quote) rate, bytes signature, string details) returns (bool)\n```\nThe rate will be verified against the signature and the time validity \n\nBefore calling this method the caller must allow the FXProvider smart contract to spend the base currency amount from the `from` account using the `approve()` method.  \n\nThen the FX Provider smart contract calculate the amount of the quote currency to credit to the `to` account and execute the transfer. \n\nThe transfer is done atomically, in the form on two legs of payment  \n\n- One leg is the debit of the `from` account in the base currency; credit the base currency account of the FX Provider \n\n- The second leg is the debit of the quote currency account of the FX Provider; credit the `to` account in the quote currency \n\nIf the FX Provider does not have enough funds in the quote currency, then the settlement fails.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | from | [RecipentInfo](./api-t-RecipentInfo.md) | tuple | The account to debit in the base currency |\n|2 | to | [RecipentInfo](./api-t-RecipentInfo.md) | tuple | The account to credit in the quote currency |\n|3 | amount | uint256 | uint256 | The amount of the transfer expressed in the smallest unit of the base currency |\n|4 | rate | [FXRate](./api-t-FXRate.md) | tuple | The FX rate used for the settlement |\n|5 | signature | bytes | bytes | The signature of the rate by the rate signer |\n|6 | details | string | string | The details of the transfer |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | true if the settlement is successful, false or fail otherwise |\n\n\n#### ⚙️ __verifyFXRate__\nVerify the signature of a FX Rate\n\n```js\nfunction verifyFXRate(tuple(uint256 rate, uint256 rateTime, uint256 expiryTime, bytes3 base, bytes3 quote) rate, bytes signature) view returns (bool)\n```\nThe signature is a bytes array of 65 bytes that represents the ecdsa signature of the hash of the rate. \n\nThe signature is created by the API providing the rate. The signature DO NOT apply ethereum signature modifications:  No prefix; no v = 27 or 28; no chain id; But the recovery id is 0 or 1. The `secp256k1.ecdsaSign(hash, pk)` of the https://www.npmjs.com/package/secp256k1 library.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | rate | [FXRate](./api-t-FXRate.md) | tuple |  |\n|2 | signature | bytes | bytes |  |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool |  |\n\n\n#### ⚙️ __version__\nGet the version of the implementation\n\n```js\nfunction version() view returns (string)\n```\nSemver syntax is expected.\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | string | string | \"1.0.0\" or \"2.0.0\" currently. The Diamond implementation starts at \"2.0.0\".  |\n\n\n#### ⚙️ __whitelist__\nWhitelist a sender.\n\n```js\nfunction whitelist(address newSender)\n```\nOnly an other whitelisted sender (or the owner) can whitelist a new sender.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | newSender | address | address | The address of the sender. |\n\n\n"
  },
  {
    "id": "ISoCashFXProviderInternal",
    "title": "ISoCashFXProviderInternal",
    "content": "## 📜 ISoCashFXProviderInternal interface \n\nInterface for exposing events related to FX settlement and account association\n\n### Events\n\n#### 📢 __CurrencyAccountSet__\nEvent emitted when a currency account is set in the FX provider smart contract\n\n```js\nevent CurrencyAccountSet(bytes3 indexed ccy, address account)\n```\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ccy | [CCY](./api-t-CCY.md) | bytes3 | The currency of the account |\n|2 | account | [ISoCashAccount](./api-t-ISoCashAccount.md) | address | The account that is set |\n\n\n#### 📢 __FXSettlement__\nEvent emitted when the FX Provider smart contract settle the operation\n\n```js\nevent FXSettlement(address indexed from, address indexed to, uint256 amount, uint256 rate)\n```\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | from | [ISoCashAccount](./api-t-ISoCashAccount.md) | address | The account that is debitted in the base currency |\n|2 | to | [ISoCashAccount](./api-t-ISoCashAccount.md) | address | The account that is credited in the quote currency |\n|3 | amount | uint256 | uint256 | The amount of the transfer expressed in the smallest unit of the base currency |\n|4 | rate | uint256 | uint256 | The FX rate used for the settlement expressed as a rate of the quote currency in the base currency * 10,000. |\n\n\n"
  },
  {
    "id": "ISoCashGlobalReferential",
    "title": "ISoCashGlobalReferential",
    "content": "## 📜 ISoCashGlobalReferential\n\nThe interface for the GlobalReferential \n\nThe interface is used to get the country manager, the country manager internal and the path finder \n\nInherits from the [ISoCashCountryManager](./api-ISoCashCountryManager), [ISoCashCountryManagerInternal](./api-ISoCashCountryManagerInternal) and [ISoCashPathFinder](./api-ISoCashPathFinder) interfaces\n\n### Events\n\n#### 📢 __CountrySet__\nEvent emitted when a country is set in the referential\n\n```js\nevent CountrySet(bytes2 indexed country, address indexed countryContract)\n```\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | country | bytes2 | bytes2 |  |\n|2 | countryContract | [ISoCashCountryReferential](./api-t-ISoCashCountryReferential.md) | address |  |\n\n\n### Methods\n\n#### ⚙️ __getCountry__\nGet the country contract from the referential\n\n```js\nfunction getCountry(bytes2 country) view returns (address contractAddress)\n```\nThe function returns the country contract address for the given country code or ZeroAddress if the country is not in the referential.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | country | bytes2 | bytes2 | The ISO country code as a Ascii encoded bytes2. Typically you send `0x4652` for FR. |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | contractAddress | [ISoCashCountryReferential](./api-t-ISoCashCountryReferential.md) | address | The country contract address for the given country code or ZeroAddress if the country is not in the referential. |\n\n\n#### ⚙️ __resolveRoute__\nResolve the routing between two banks\n\n```js\nfunction resolveRoute(bytes3 currency, tuple(bytes2 country, bytes10[] codes) from, tuple(bytes2 country, bytes10[] codes) target) view returns (bool resolved, tuple(bytes2 country, bytes10[] codes)[] route)\n```\nThe function returns the sequence of banks : \n\nThe function operates using the declared correspondents in the referential.  \n\nIt starts by the `target` bank, that holds the account of the beneficiary, and progress backward to the `from` bank, if found. \n\nIt returns the sequence of banks (identifier) ordered from the `from` bank to the `target` bank including both ends.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | currency | bytes3 | bytes3 | The currency of the payment, expressed in ISO 4217 3 letters code. Typically you send `EUR` as `0x455552`. |\n|2 | from | [BankIdentifier](./api-t-BankIdentifier.md) | tuple | The bank identifier of the bank where the payment starts. |\n|3 | target | [BankIdentifier](./api-t-BankIdentifier.md) | tuple | The bank identifier of the bank where the beneficiary account is to be credited. |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | resolved | bool | bool | True if the routing is resolved, false otherwise, in which case the `route` is empty. |\n|2 | route | [BankIdentifier[]](./api-t-BankIdentifier.md) | tuple[] | The sequence of banks (identifier) ordered from the `from` bank to the `target` bank including both ends. |\n\n\n#### ⚙️ __setCountry__\nSet the country contract in the referential\n\n```js\nfunction setCountry(address countryContract)\n```\nThe function is expected to emit the CountrySet event. \n\nThe country code is not expected because it is retrieved from the country contract via the interface [ISoCashCountryStateManagement](./api-ISoCashCountryStateManagement)\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | countryContract | [ISoCashCountryReferential](./api-t-ISoCashCountryReferential.md) | address | The country contract to set in the referential. If Zero or not a compatible contract, the call fails when trying to get the country code. |\n\n\n"
  },
  {
    "id": "ISoCashGlobalReferentialFull",
    "title": "ISoCashGlobalReferentialFull",
    "content": "## 📜 ISoCashGlobalReferentialFull interface for the entry point of the global referential service\n\nThe global referential service is used to find and manage the global referential of the so|cash scope.\n\nThis interface inherits from [ISoCashGlobalReferential](./api-ISoCashGlobalReferential) and [I_IBANService](./api-I_IBANService). \n\nIt is used to access the global referential and to create and decode IBANs.\n\n### Events\n\n#### 📢 __CountrySet__\nEvent emitted when a country is set in the referential\n\n```js\nevent CountrySet(bytes2 indexed country, address indexed countryContract)\n```\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | country | bytes2 | bytes2 |  |\n|2 | countryContract | [ISoCashCountryReferential](./api-t-ISoCashCountryReferential.md) | address |  |\n\n\n### Methods\n\n#### ⚙️ __createIBAN__\nCreate an IBAN from a country code and a set of codes.\n\n```js\nfunction createIBAN(bytes2 country, string[] codes) view returns (string)\n```\nThe function should return a valid IBAN if the country code and the codes are valid else it can fail.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | country | [CountryCode](./api-t-CountryCode.md) | bytes2 | The country code of the IBAN to create. It must be 2 letters long. |\n|2 | codes | string[] | string[] | Array of codes of the IBAN to create accouding to the country standard. They must be valid for the country. |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | string | string | The IBAN created from the country code and the codes. |\n\n\n#### ⚙️ __decodeIBAN__\nDecode an IBAN to a country code and a set of codes.\n\n```js\nfunction decodeIBAN(string iban) view returns (bool valid, bytes2 country, string[] codes)\n```\nThe function should return the country code and the codes if the IBAN is valid. The function should never fail. \n\nIf the country code or the bank code cannot be resolved then the valid flag should be false.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | iban | string | string | The IBAN to decode. |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | valid | bool | bool | True if the IBAN is valid, false otherwise. |\n|2 | country | [CountryCode](./api-t-CountryCode.md) | bytes2 | The country code of the IBAN. |\n|3 | codes | string[] | string[] | Array of codes of the IBAN according to the country standard. |\n\n\n#### ⚙️ __decodeIBANToContracts__\nDecode an IBAN to a bank module and an account smart contract address.\n\n```js\nfunction decodeIBANToContracts(string iban) view returns (bool valid, address bank, address account)\n```\nThe function should return the bank module and the account if the IBAN is valid. The function should never fail. \n\nIf the bank or the account cannot be resolved then the valid flag should be false and the addresses are zeroed.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | iban | string | string | The IBAN to decode. |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | valid | bool | bool | True if the IBAN is valid, false otherwise. |\n|2 | bank | address | address | The bank address of the IBAN. Typically a [ISoCashBank](./api-ISoCashBank) contract or zero if the bank cannot be resolved. |\n|3 | account | address | address | The account address of the IBAN. Typically a [ISoCashAccount](./api-ISoCashAccount) contract or zero if the account cannot be resolved. |\n\n\n#### ⚙️ __getCountry__\nGet the country contract from the referential\n\n```js\nfunction getCountry(bytes2 country) view returns (address contractAddress)\n```\nThe function returns the country contract address for the given country code or ZeroAddress if the country is not in the referential.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | country | bytes2 | bytes2 | The ISO country code as a Ascii encoded bytes2. Typically you send `0x4652` for FR. |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | contractAddress | [ISoCashCountryReferential](./api-t-ISoCashCountryReferential.md) | address | The country contract address for the given country code or ZeroAddress if the country is not in the referential. |\n\n\n#### ⚙️ __resolveRoute__\nResolve the routing between two banks\n\n```js\nfunction resolveRoute(bytes3 currency, tuple(bytes2 country, bytes10[] codes) from, tuple(bytes2 country, bytes10[] codes) target) view returns (bool resolved, tuple(bytes2 country, bytes10[] codes)[] route)\n```\nThe function returns the sequence of banks : \n\nThe function operates using the declared correspondents in the referential.  \n\nIt starts by the `target` bank, that holds the account of the beneficiary, and progress backward to the `from` bank, if found. \n\nIt returns the sequence of banks (identifier) ordered from the `from` bank to the `target` bank including both ends.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | currency | bytes3 | bytes3 | The currency of the payment, expressed in ISO 4217 3 letters code. Typically you send `EUR` as `0x455552`. |\n|2 | from | [BankIdentifier](./api-t-BankIdentifier.md) | tuple | The bank identifier of the bank where the payment starts. |\n|3 | target | [BankIdentifier](./api-t-BankIdentifier.md) | tuple | The bank identifier of the bank where the beneficiary account is to be credited. |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | resolved | bool | bool | True if the routing is resolved, false otherwise, in which case the `route` is empty. |\n|2 | route | [BankIdentifier[]](./api-t-BankIdentifier.md) | tuple[] | The sequence of banks (identifier) ordered from the `from` bank to the `target` bank including both ends. |\n\n\n#### ⚙️ __setCountry__\nSet the country contract in the referential\n\n```js\nfunction setCountry(address countryContract)\n```\nThe function is expected to emit the CountrySet event. \n\nThe country code is not expected because it is retrieved from the country contract via the interface [ISoCashCountryStateManagement](./api-ISoCashCountryStateManagement)\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | countryContract | [ISoCashCountryReferential](./api-t-ISoCashCountryReferential.md) | address | The country contract to set in the referential. If Zero or not a compatible contract, the call fails when trying to get the country code. |\n\n\n"
  },
  {
    "id": "ISoCashInterBank",
    "title": "ISoCashInterBank",
    "content": "## 📜 ISoCashInterBank interface \n\nInterface for relations between bank modules that have a correspondent relationship\n\nThis interface exposes methods to coordinate interbank transfers and advices \n\nInherits from [ISoCashBankPaymentInternal](./api-ISoCashBankPaymentInternal).\n\n### Events\n\n#### 📢 __Adviced__\nEvent emitted by a bank that receives a notification of debit/credit on an account it owns in another bank \n\n```js\nevent Adviced(address indexed target, address indexed account, uint256 amount, uint8 direction, uint256 indexed id)\n```\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | target | [ISoCashBank](./api-t-ISoCashBank.md) | address |  |\n|2 | account | [ISoCashAccount](./api-t-ISoCashAccount.md) | address |  |\n|3 | amount | uint256 | uint256 |  |\n|4 | direction | [OperationDirection](./api-t-OperationDirection.md) | uint8 |  |\n|5 | id | [TransferId](./api-t-TransferId.md) | uint256 |  |\n\n\n### Methods\n\n#### ⚙️ __advice__\nThe executing bank receives an advice from the calling bank that its account has been debitted or credited\n\n```js\nfunction advice(uint256 amount, uint8 direction, uint256 id) returns (bool)\n```\nThe calling bank should be a correspondent of the executing bank. \n\nThe executing bank will check that it has an account with the calling bank, check that the copy of the balance it has match with the difference of the advice amount and update the copy of its balance.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | amount | uint256 | uint256 | The amount of the advice (always positive) |\n|2 | direction | [OperationDirection](./api-t-OperationDirection.md) | uint8 | The direction of the advice, `DEBIT=0` or `CREDIT=1` |\n|3 | id | [TransferId](./api-t-TransferId.md) | uint256 | The unique identifier of the transfer related to the advice in the calling bank |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | true if the advice is successful, false or fail otherwise |\n\n\n#### ⚙️ __interbankNetting__\nSpecial function to request the executing bank to agree on a netting between accounts they hold with each other\n\n```js\nfunction interbankNetting(uint256 amount, uint256 id) returns (bool)\n```\nThe calling bank should be a correspondent of the executing bank. \n\nThe executing bank will need to check that its account has been reduced by the amount before performing the reduction of the caller account.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | amount | uint256 | uint256 | The amount of the netting expressed in the smallest unit of the currency |\n|2 | id | [TransferId](./api-t-TransferId.md) | uint256 | The unique identifier of the netting in the calling bank |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | true if the netting is successful, false or fail otherwise |\n\n\n#### ⚙️ __interbankTransfer__\nThe calling bank requests the executing bank to transfer funds to a recipient account.\n\n```js\nfunction interbankTransfer(tuple(uint8 model, address bank, address account) ssi, tuple(address account, bytes11 bic, bytes32 iban) to, uint256 amount, uint256 id) returns (bool)\n```\nThe calling bank should be a correspondent of the executing bank. \n\nThe executing bank will need to check that it has been paid in the `ssi` account before performing the transfer. To do this several methods are possible: \n\n- Keeping a record of the last balance of that account in the state of the bank module so to compare it with the actual balance \n\n- Other means to be determined\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ssi | [BankAccount](./api-t-BankAccount.md) | tuple | The SSI of the executing bank where the same amount should have been paid |\n|2 | to | [RecipentInfo](./api-t-RecipentInfo.md) | tuple | The recipient account to transfer the funds to |\n|3 | amount | uint256 | uint256 | The amount of the transfer expressed in the smallest unit of the currency |\n|4 | id | [TransferId](./api-t-TransferId.md) | uint256 | The unique identifier of the transfer in the calling bank |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | true if the transfer is successful, false or fail otherwise |\n\n\n"
  },
  {
    "id": "ISoCashOwnedAccount",
    "title": "ISoCashOwnedAccount",
    "content": "## 📜 ISoCashOwnedAccount interface for bank account\n\nExposes the functions and events for basic interactions with a bank account in so|cash.\n\nThis interface inherits from [ISoCashAccountActions](./api-ISoCashAccountActions) and [ISoCashAccountData](./api-ISoCashAccountData) to provide the basic functions. \n\nIt also inherits from [IERC20](./api-IERC20) and [IERC20Metadata](./api-IERC20Metadata) to provide the ERC20 compatibility. \n\nIt also inherits from [ISoCashAccount](./api-ISoCashAccount) but this does not add any new function. \n\nIt is used by the [ISoCashAccountFull](./api-ISoCashAccountFull) to provide the full set of functions.\n\n### Events\n\n#### 📢 __Approval__\n```js\nevent Approval(address indexed owner, address indexed spender, uint256 value)\n```\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | owner | address | address |  |\n|2 | spender | address | address |  |\n|3 | value | uint256 | uint256 |  |\n\n\n#### 📢 __Transfer__\n```js\nevent Transfer(address indexed from, address indexed to, uint256 value)\n```\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | from | address | address |  |\n|2 | to | address | address |  |\n|3 | value | uint256 | uint256 |  |\n\n\n### Methods\n\n#### ⚙️ __accountNumber__\nGet the account number of the account.\n\n```js\nfunction accountNumber() view returns (uint32)\n```\nThe account number is a sequential number of the accounts created in the bank but this is not an obligation. \n\nImplementations are free to use any kind of account number as long as it respects the IBAN standard.\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | [AccountNumber](./api-t-AccountNumber.md) | uint32 | The account number of the account. |\n\n\n#### ⚙️ __allowance__\nquery the allowance granted from given holder to given spender\n\n```js\nfunction allowance(address holder, address spender) view returns (uint256)\n```\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | holder | address | address | approver of allowance |\n|2 | spender | address | address | recipient of allowance |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | uint256 | uint256 | token allowance |\n\n\n#### ⚙️ __approve__\ngrant approval to spender to spend tokens\n\n```js\nfunction approve(address spender, uint256 amount) returns (bool)\n```\nprefer ERC20Extended functions to avoid transaction-ordering vulnerability (see https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729)\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | spender | address | address | recipient of allowance |\n|2 | amount | uint256 | uint256 | quantity of tokens approved for spending |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | success status (always true; otherwise function should revert) |\n\n\n#### ⚙️ __balance__\nGet the balance of the account.\n\n```js\nfunction balance() view returns (uint256)\n```\nThe balance is the positive amount of the account. If the account is in overdraft, the balance is zero. \n\n This function conserve ERC20 compatibility.\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | uint256 | uint256 | The balance of the account. |\n\n\n#### ⚙️ __balanceOf__\nquery the token balance of given account\n\n```js\nfunction balanceOf(address account) view returns (uint256)\n```\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | address | address | address to query |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | uint256 | uint256 | token balance |\n\n\n#### ⚙️ __bank__\nGet the bank module of the account.\n\n```js\nfunction bank() view returns (address)\n```\nThe bank is the contract that manages the account. It is also the `owner` in the [IOwnable](./api-IOwnable) sense.\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | [ISoCashBank](./api-t-ISoCashBank.md) | address | The bank of the account. |\n\n\n#### ⚙️ __decimals__\nreturn token decimals, generally used only for display purposes\n\n```js\nfunction decimals() view returns (uint8)\n```\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | uint8 | uint8 | token decimals |\n\n\n#### ⚙️ __fullBalance__\nGet the full balance of the account.\n\n```js\nfunction fullBalance() view returns (int256)\n```\nThe full balance is the actual balance of the account including overdraft. \n\n If the account is in overdraft, the full balance is negative.\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | int256 | int256 | The full balance of the account. |\n\n\n#### ⚙️ __getAttributeAddr__\nGet attribute as address\n\n```js\nfunction getAttributeAddr(bytes32 name) view returns (address)\n```\nThe attributes are used to store additional info on the account. \n\nNote that the `name`is unique for the account but can be duplicated by type of attribute.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | name | bytes32 | bytes32 | The name of the attribute. |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | address | address | The value of the attribute as an address. |\n\n\n#### ⚙️ __getAttributeNum__\nGet attribute as number\n\n```js\nfunction getAttributeNum(bytes32 name) view returns (int256)\n```\nThe attributes are used to store additional info on the account. \n\nNote that the `name`is unique for the account but can be duplicated by type of attribute.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | name | bytes32 | bytes32 | The name of the attribute. |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | int256 | int256 | The value of the attribute as a number. |\n\n\n#### ⚙️ __getAttributeStr__\nGet attribute as string\n\n```js\nfunction getAttributeStr(bytes32 name) view returns (string)\n```\nThe attributes are used to store additional info on the account. \n\nNote that the `name`is unique for the account but can be duplicated by type of attribute.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | name | bytes32 | bytes32 | The name of the attribute. |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | string | string | The value of the attribute as a string. |\n\n\n#### ⚙️ __iban__\nGet the iban of the account.\n\n```js\nfunction iban() view returns (string)\n```\nThe IBAN is the international bank account number of the account and contains the country of the bank, the bank codes and the account number.\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | string | string | The IBAN of the account. |\n\n\n#### ⚙️ __lockFunds__\nLocks an amount for a certain payment using a secret.\n\n```js\nfunction lockFunds(tuple(address account, bytes11 bic, bytes32 iban) recipient, uint256 amount, uint256 deadline, bytes32 hashlockPaid, bytes32 hashlockCancel, string opaque) returns (bytes32 key)\n```\nThis function is used to lock an amount for a certain payment using a secret following HTLC interoperability. \n\nOnly whitelisted senders can call this function. \n\nThe `recipient` has the same meaning as in `transferEx()`. \n\nNote that because this function is a transaction, the best way to retrieve the returned id of the HTLC it via the event `HTLCPaymentCreated` defined in [IHTLCPaymentInternal](./api-IHTLCPaymentInternal). \n\nTo do this, retrieve the transaction hash of that transaction, gets the receipt and then the logs that match the block, the target smart contract and the event signature. \n\nBecause the `hashlockPaid` is unique and indexed in the event you can also filter new events with that hash.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | recipient | [RecipentInfo](./api-t-RecipentInfo.md) | tuple | The recipient of the funds. |\n|2 | amount | uint256 | uint256 | The amount to lock. It must be available in the account. |\n|3 | deadline | uint256 | uint256 | The timestamp in sec when the lock expires. |\n|4 | hashlockPaid | bytes32 | bytes32 | The hash of the secret that can trigger the payment. |\n|5 | hashlockCancel | bytes32 | bytes32 | The hash of the secret that can cancel the payment (deprecated). |\n|6 | opaque | string | string | The optional opaque data to be interpreted by the user according to their protocol. Typically a JSON string. |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | key | bytes32 | bytes32 | The unique identifier of the payment. (see note above) |\n\n\n#### ⚙️ __lockedBalance__\nGet the locked balance of the account.\n\n```js\nfunction lockedBalance() view returns (uint256)\n```\nThe locked balance is the amount of the account balance that is locked in a payment. \n\n You can have a negative `fullBalance` and a positive `lockedBalance` if the account is in overdraft.\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | uint256 | uint256 | The locked balance of the account. |\n\n\n#### ⚙️ __name__\nreturn token name\n\n```js\nfunction name() view returns (string)\n```\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | string | string | token name |\n\n\n#### ⚙️ __setAttributeAddr__\nSet attribute as address\n\n```js\nfunction setAttributeAddr(bytes32 name, address value)\n```\nThe attributes are used to store additional info on the account. \n\nNote that the `name`is unique for the account but can be duplicated by type of attribute.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | name | bytes32 | bytes32 | The name of the attribute. |\n|2 | value | address | address | The value of the attribute as an address. |\n\n\n#### ⚙️ __setAttributeNum__\nSet attribute as number\n\n```js\nfunction setAttributeNum(bytes32 name, int256 value)\n```\nThe attributes are used to store additional info on the account. \n\nNote that the `name`is unique for the account but can be duplicated by type of attribute.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | name | bytes32 | bytes32 | The name of the attribute. |\n|2 | value | int256 | int256 | The value of the attribute as a number. |\n\n\n#### ⚙️ __setAttributeStr__\nSet attribute as string\n\n```js\nfunction setAttributeStr(bytes32 name, string value)\n```\nThe attributes are used to store additional info on the account. \n\nNote that the `name`is unique for the account but can be duplicated by type of attribute.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | name | bytes32 | bytes32 | The name of the attribute. |\n|2 | value | string | string | The value of the attribute as a string. |\n\n\n#### ⚙️ __symbol__\nreturn token symbol\n\n```js\nfunction symbol() view returns (string)\n```\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | string | string | token symbol |\n\n\n#### ⚙️ __totalSupply__\nquery the total minted token supply\n\n```js\nfunction totalSupply() view returns (uint256)\n```\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | uint256 | uint256 | token supply |\n\n\n#### ⚙️ __transfer__\ntransfer tokens to given recipient\n\n```js\nfunction transfer(address recipient, uint256 amount) returns (bool)\n```\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | recipient | address | address | beneficiary of token transfer |\n|2 | amount | uint256 | uint256 | quantity of tokens to transfer |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | success status (always true; otherwise function should revert) |\n\n\n#### ⚙️ __transferEx__\nTransfer funds to another account.\n\n```js\nfunction transferEx(tuple(address account, bytes11 bic, bytes32 iban) recipient, uint256 amount, string details) returns (bool)\n```\nThis function is used to transfer funds to another account. \n\nNote that the [IERC20](./api-IERC20) function `transfer()` is also available and calls this function with the details \"ERC20 Transfer\". \n\nOnly whitelisted senders can call this function or callers that has received an allowance. \n\nAllowance can be provided by a whitelisted sender using the `approve()` function of [IERC20](./api-IERC20). \n\nNote that the `recipient` is a structure where you provide either the smart contract address of the beneficiary account or its IBAN.  \n\nIf the beneficiary is a bank, the BIC can also be provided (deprecated)\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | recipient | [RecipentInfo](./api-t-RecipentInfo.md) | tuple | The recipient of the funds. |\n|2 | amount | uint256 | uint256 | The amount to transfer. |\n|3 | details | string | string | The details of the transfer. |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | true if the transfer is successful, false otherwise. |\n\n\n#### ⚙️ __transferFrom__\ntransfer tokens to given recipient on behalf of given holder\n\n```js\nfunction transferFrom(address holder, address recipient, uint256 amount) returns (bool)\n```\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | holder | address | address | holder of tokens prior to transfer |\n|2 | recipient | address | address | beneficiary of token transfer |\n|3 | amount | uint256 | uint256 | quantity of tokens to transfer |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | success status (always true; otherwise function should revert) |\n\n\n#### ⚙️ __transferLockedFunds__\nTransfer locked funds to the recipient.\n\n```js\nfunction transferLockedFunds(bytes32 key, tuple(address account, bytes11 bic, bytes32 iban) recipient, string secret, string details) returns (bool)\n```\nThis function is used to transfer locked funds to the pre-set recipient. \n\nAnyone can call this function as long as they have the valid secret. \n\nThe `recipient` is ignored and will be removed in a future version. \n\nThe `secret` is the secret that can unlock the payment. \n\nIf successful, the HTLC `state` is set to `PAID` and the event `HTLCPaymentRemoved` is emitted revealing the secret.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | key | bytes32 | bytes32 | The unique identifier of the payment. |\n|2 | recipient | [RecipentInfo](./api-t-RecipentInfo.md) | tuple | The recipient of the funds. (deprecated and ignored). |\n|3 | secret | string | string | The secret to unlock the payment. |\n|4 | details | string | string | The details of the transfer transmitted with the payment. |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | true if the transfer is successful, false otherwise. |\n\n\n#### ⚙️ __unlockFunds__\nUnlock locked funds.\n\n```js\nfunction unlockFunds(bytes32 key, string secret) returns (bool)\n```\nThis function is used to unlock locked funds. \n\nOnly whitelisted sender can call this function. \n\nIf successful, the HTLC `state` is set to `CANCELLED` and the event `HTLCPaymentRemoved` is emitted revealing the cancel secret if present. \n\nNote that to properly uses the cancel secret (that must be provided by the caller of the `lockFunds()` function), the `hashlockCancel`  must have been provided by the counterparty (and not the owner of the funds).  In that way, if the counterparty decide to no complete the process it can send the cancel secret to the initial holder in order to unlock the funds before the end of the deadline.  However, if the counterparty realizes that the lock does not contains its cancel hash (or a zero hash),  then it can decide not to proceed with the transaction as it can mean that the initial fund owner may have the actual secret to retrieve the funds  before the end of the deadline and the counterparty will not be able to retrieve the funds after completing its end of the bargain.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | key | bytes32 | bytes32 | The unique identifier of the payment. |\n|2 | secret | string | string | The secret to unlock the payment.   |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | true if the unlock is successful, false otherwise. |\n\n\n#### ⚙️ __unlockedBalance__\nGet the unlocked balance of the account.\n\n```js\nfunction unlockedBalance() view returns (uint256)\n```\nThe unlocked balance is the amount of the account balance that is imediatly available for payment. \n\n If the `balance` is lower than the `lockedBalance`, the `unlockedBalance` is zero, else it is the difference of the 2.\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | uint256 | uint256 | The unlocked balance of the account. |\n\n\n"
  },
  {
    "id": "ISoCashPathFinder",
    "title": "ISoCashPathFinder",
    "content": "## 📜 ISoCashPathFinder\n\nThe interface for the PathFinder facet to resolve a payment path between banks\n\nThe interface is used to resolve the routing, finding the sequence of banks to reach the provided bank from the provided bank\n\n### Methods\n\n#### ⚙️ __resolveRoute__\nResolve the routing between two banks\n\n```js\nfunction resolveRoute(bytes3 currency, tuple(bytes2 country, bytes10[] codes) from, tuple(bytes2 country, bytes10[] codes) target) view returns (bool resolved, tuple(bytes2 country, bytes10[] codes)[] route)\n```\nThe function returns the sequence of banks : \n\nThe function operates using the declared correspondents in the referential.  \n\nIt starts by the `target` bank, that holds the account of the beneficiary, and progress backward to the `from` bank, if found. \n\nIt returns the sequence of banks (identifier) ordered from the `from` bank to the `target` bank including both ends.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | currency | bytes3 | bytes3 | The currency of the payment, expressed in ISO 4217 3 letters code. Typically you send `EUR` as `0x455552`. |\n|2 | from | [BankIdentifier](./api-t-BankIdentifier.md) | tuple | The bank identifier of the bank where the payment starts. |\n|3 | target | [BankIdentifier](./api-t-BankIdentifier.md) | tuple | The bank identifier of the bank where the beneficiary account is to be credited. |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | resolved | bool | bool | True if the routing is resolved, false otherwise, in which case the `route` is empty. |\n|2 | route | [BankIdentifier[]](./api-t-BankIdentifier.md) | tuple[] | The sequence of banks (identifier) ordered from the `from` bank to the `target` bank including both ends. |\n\n\n"
  },
  {
    "id": "IWhitelistedSenders",
    "title": "IWhitelistedSenders",
    "content": "## 📜 IWhitelistedSenders interface for whitelisted senders\n\nThe whitelisted senders service is used to manage the list of senders that are allowed to send transactions to the so|cash scope. \n\nIt is a facet to manage a list of allowed wallets for any kind of service, so it can be imported by other facet and this interface exposed.\n\nThis interface is used to manage the list of senders that are allowed by other facet.  \n\nThis implementation does not do anything specifically other than enabling the setting of the allowed wallets. \n\nNote that the implementation normally also implement [IOwnable](./api-IOwnable) to manage the owner of the whitelisting. \n\nInherit from [IWhitelistedSendersInternal](./api-IWhitelistedSendersInternal) to access the events.\n\n### Events\n\n#### 📢 __Whitelisted__\nEmitted when a sender is whitelisted or blacklisted.\n\n```js\nevent Whitelisted(address indexed account, bool status)\n```\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | address | address |  |\n|2 | status | bool | bool |  |\n\n\n### Methods\n\n#### ⚙️ __blacklist__\nRemove sender from the whitelist.\n\n```js\nfunction blacklist(address oldSender)\n```\nOnly an other whitelisted sender (or the owner, or the targetted sender) can blacklist a sender.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | oldSender | address | address | The address of the sender to remove. |\n\n\n#### ⚙️ __isWhitelisted__\nCheck if a sender is whitelisted.\n\n```js\nfunction isWhitelisted(address sender) view returns (bool)\n```\nNo control of caller is done in this function.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | sender | address | address | The address of the sender. |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool | true if the sender is whitelisted or the owner, false otherwise. |\n\n\n#### ⚙️ __whitelist__\nWhitelist a sender.\n\n```js\nfunction whitelist(address newSender)\n```\nOnly an other whitelisted sender (or the owner) can whitelist a new sender.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | newSender | address | address | The address of the sender. |\n\n\n"
  },
  {
    "id": "IWhitelistedSendersInternal",
    "title": "IWhitelistedSendersInternal",
    "content": "## 📜 IWhitelistedSendersInternal interface \n\nThe whitelisted senders service emits events defined in this interface.\n\nThis interface exposes the events of the whitelisted senders service.\n\n### Events\n\n#### 📢 __Whitelisted__\nEmitted when a sender is whitelisted or blacklisted.\n\n```js\nevent Whitelisted(address indexed account, bool status)\n```\nThe purpose of the whitelisting is context dependent.\n\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | address | address | The address of the sender. |\n|2 | status | bool | bool | The status of the sender: true is allowed, false otherwise. |\n\n\n"
  },
  {
    "id": "I_IBANService",
    "title": "I_IBANService",
    "content": "## 📜 I_IBANService interface for international bank account number (IBAN) service\n\nCreate and decode IBANs that are managed within the so|cash scope.\n\nThis interface is used to create and decode IBANs. It is implemented by any service capable of creating or decoding IBANs, even on a partial scope. \n\nConsult the documentation of the provider for more information.  \n\nTypical implementation are done by the so|cash referential, global and by country. \n\nThe general structure for coding and decoding IBANs is a country code (ISO-3166 2 letters codes) and a set of codes that are specific to the country. \n\nFor example, the IBAN for a French bank account is FR1420041010050500013M02606. \n\nIt is composed of FR (country code), 20041 (bank code), 01005 (branch code), 0500013M026 (account number), the last 3 are the codes.\n\n### Methods\n\n#### ⚙️ __createIBAN__\nCreate an IBAN from a country code and a set of codes.\n\n```js\nfunction createIBAN(bytes2 country, string[] codes) view returns (string)\n```\nThe function should return a valid IBAN if the country code and the codes are valid else it can fail.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | country | [CountryCode](./api-t-CountryCode.md) | bytes2 | The country code of the IBAN to create. It must be 2 letters long. |\n|2 | codes | string[] | string[] | Array of codes of the IBAN to create accouding to the country standard. They must be valid for the country. |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | string | string | The IBAN created from the country code and the codes. |\n\n\n#### ⚙️ __decodeIBAN__\nDecode an IBAN to a country code and a set of codes.\n\n```js\nfunction decodeIBAN(string iban) view returns (bool valid, bytes2 country, string[] codes)\n```\nThe function should return the country code and the codes if the IBAN is valid. The function should never fail. \n\nIf the country code or the bank code cannot be resolved then the valid flag should be false.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | iban | string | string | The IBAN to decode. |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | valid | bool | bool | True if the IBAN is valid, false otherwise. |\n|2 | country | [CountryCode](./api-t-CountryCode.md) | bytes2 | The country code of the IBAN. |\n|3 | codes | string[] | string[] | Array of codes of the IBAN according to the country standard. |\n\n\n#### ⚙️ __decodeIBANToContracts__\nDecode an IBAN to a bank module and an account smart contract address.\n\n```js\nfunction decodeIBANToContracts(string iban) view returns (bool valid, address bank, address account)\n```\nThe function should return the bank module and the account if the IBAN is valid. The function should never fail. \n\nIf the bank or the account cannot be resolved then the valid flag should be false and the addresses are zeroed.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | iban | string | string | The IBAN to decode. |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | valid | bool | bool | True if the IBAN is valid, false otherwise. |\n|2 | bank | address | address | The bank address of the IBAN. Typically a [ISoCashBank](./api-ISoCashBank) contract or zero if the bank cannot be resolved. |\n|3 | account | address | address | The account address of the IBAN. Typically a [ISoCashAccount](./api-ISoCashAccount) contract or zero if the account cannot be resolved. |\n\n\n"
  },
  {
    "id": "Ownable",
    "title": "Ownable",
    "content": "## 📜 Ownable\n\nContract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\n\n### Events\n\n#### 📢 __OwnershipTransferred__\n```js\nevent OwnershipTransferred(address indexed previousOwner, address indexed newOwner)\n```\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | previousOwner | address | address |  |\n|2 | newOwner | address | address |  |\n\n\n### Methods\n\n#### ⚙️ __owner__\n```js\nfunction owner() view returns (address)\n```\nReturns the address of the current owner.\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | address | address |  |\n\n\n#### ⚙️ __renounceOwnership__\n```js\nfunction renounceOwnership()\n```\nLeaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\n\n#### ⚙️ __transferOwnership__\n```js\nfunction transferOwnership(address newOwner)\n```\nTransfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | newOwner | address | address |  |\n\n\n"
  },
  {
    "id": "WhitelistedSenders",
    "title": "WhitelistedSenders",
    "content": "## 📜 WhitelistedSenders\n\n### Events\n\n#### 📢 __OwnershipTransferred__\n```js\nevent OwnershipTransferred(address indexed previousOwner, address indexed newOwner)\n```\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | previousOwner | address | address |  |\n|2 | newOwner | address | address |  |\n\n\n#### 📢 __Whitelisted__\nEmitted when a sender is whitelisted or blacklisted.\n\n```js\nevent Whitelisted(address indexed account, bool status)\n```\n| Pos | Args | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | account | address | address |  |\n|2 | status | bool | bool |  |\n\n\n### Methods\n\n#### ⚙️ __blacklist__\nRemove sender from the whitelist.\n\n```js\nfunction blacklist(address oldSender)\n```\nOnly an other whitelisted sender (or the owner, or the targetted sender) can blacklist a sender.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | oldSender | address | address | The address of the sender to remove. |\n\n\n#### ⚙️ __isWhitelisted__\n```js\nfunction isWhitelisted(address a) view returns (bool)\n```\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | a | address | address |  |\n\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | bool | bool |  |\n\n\n#### ⚙️ __owner__\n```js\nfunction owner() view returns (address)\n```\nReturns the address of the current owner.\n\n| Pos | Return | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | ⌀ | address | address |  |\n\n\n#### ⚙️ __renounceOwnership__\n```js\nfunction renounceOwnership()\n```\nLeaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\n\n#### ⚙️ __transferOwnership__\n```js\nfunction transferOwnership(address newOwner)\n```\nTransfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | newOwner | address | address |  |\n\n\n#### ⚙️ __whitelist__\nWhitelist a sender.\n\n```js\nfunction whitelist(address newSender)\n```\nOnly an other whitelisted sender (or the owner) can whitelist a new sender.\n\n| Pos | Parameter | Type | Solidity | Details |\n| --- | --- | --- | --- | --- |\n|1 | newSender | address | address | The address of the sender. |\n\n\n"
  }
]